%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1502.m00.i004.n045.S.c12.Chairs, armchairs, stools icons.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 2/9/2015
%%BoundingBox: 0 0 467 330
%%HiResBoundingBox: 0 0 466.9324 329.0011
%%CropBox: 0 0 466.9324 329.0011
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 14304 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0FFF9AC3C3CACAFD09FFCACAA1BDA1FD18FF524B7676A17DA8A8
%CAA8FFA8CAA7A8A1A152764B76FD1CFFA8AEA8A8A7FD04A8FD1AFF9A8C8C
%B592939394939393949393688D8C8C6893CAFD16FFCF4B514B514B514B51
%4B5151524B514B514B514B514BFD18FFA87D837C7C587C587C587C587C7C
%837DA8FD16FFBC8CB592B593B58C8D8C8D8C8D8C8D8C8D8C698CCAFD16FF
%A8514B514B514B514B7651514B7651514B514B512651FD17FFA758827C83
%7C837C837C837C837C837C8358A8FD15FF939392B592B5928D688D688D68
%8D688D688D6893A1FD17FF524B264B264B264B264B264B264B264B264B26
%4B76FD17FF58827C7C58827C7C58827C7C58827C7C587C7DFD15FFBC8CB5
%93B5B5B58C8D8D8D8C8D8D8D8C8D8D8D68CAFD18FFA87D51514B514B514B
%4B4B514B514B51527DA8FD18FF8358837C837C837C837C837C837C837C83
%58A7FD15FF93B592B592B5928D688D8C8D688D8C8D688D688DA8FD1AFFA8
%27FFA87D26A8A77D267DA8A827CFFD1AFF7C7C587C587C7C7C58837C7C58
%7C587C58587DFD15FFBC8CB593B592B58C8D8C8D8C8D8C8D8C8D8C8D68CA
%FD1AFFA851FFFFA151FFFFA851A8FFA851A8FD1AFF7D2D585258527C5258
%527C5258525852582DA7FD15FF939292B592B58C8D688D688D688D688D68
%8D6869A8FD1AFFA84BFFFFA14BFFFFCA4BA8FFCA4BA8FD1AFF7D52515851
%585158515851585158515851527DFD15FFBC8CB593B593B58D8D8C8D8D8D
%8C8D8D8D8C8D69CAFD1AFFA851FFFF7D52FFFFA851A7FFA852A8FD1AFF7D
%587D587C587D587C587D587C587D587C58A8FD15FF949292B592B58C8D8C
%8D688D8C8D688D8C8D6893A8FD1AFFA84BFFFFA74BFFFFCF4BA8FFCF4BCA
%FD1AFF7C58527C587C527C587C527C587C527C58587DFD15FFBC92B592B5
%B5938C8D8C8D8C8D8C8D8C8D8C8D68CAFD1AFFA151FFFF7D5176A75251A8
%FFA876A8FD1AFF83587C587C587C587C587C587C587C587C5883FD15FF93
%9392B592B58C8D688D688D688D688D688D6869A1FD1AFFA84BFFFFA14A4B
%264B4BA8FFA84BCFFD1AFF58585258527C5258527C5258527C525852587D
%FD15FFBD8CB593B5B5B58C8D8D8D8C8D8D8D8C8D8D8D68FD1BFFA776FFFF
%7D51A7FF7D51A8FFA876A8FD1AFF83587C587C587C587C587C587C587C58
%7C5883FD15FF9A8C92B592B58C8D688D8C8D688D8C8D688D686FFD1BFFA8
%4BFFFFA14BFFFFFF27A8FFA84BFD1BFF5858587C527C587C527C587C527C
%587C52587DFD15FFC38CB593B592B58C8D8C8D8C8D8C8D8C8D8C696FFFCA
%FD19FFA751CAFF7D51FFFFA851A7FFA851A8FD1AFF7D527C587C587C587C
%587C587C587C587C51A7FD11FFA8C393939A938CB592B5928D688D688D68
%8D688D688D449A6F8C93C3FD17FFA84BFFFFA14BFFFFCA4BA8FFCA4BA8FD
%1AFF7C58527C5258527C587C587C5858527C58587DFD10FFCB938CB58CBD
%94B593B593BB938D8C8D8D8D8C8D8D8D6869A16F448D8CBCFD16FFA851FF
%FFA152FFFFA851A8FFA852A8FD1AFF7D587C587C58837C837C837C83587C
%587C5283FD10FFCA8CB5688D93C38C8D8CB592B58C8D688D8C8D688D8C68
%6FA14469688D93FD16FFA74BA8A87D4BA8A8A84BA1A8A84BA8FD1AFF5258
%527C58827C837C827C837C82587C585852FD10FFA28D938D8C8D9B936893
%93B592B593938C938D938C93689B7069698D8CBCFD15FF7D4B764B514B76
%4B514B764B514B764BA1FD18FFA858587C58837C837C837C837C837C8358
%7C5858A8FD0FFFCA68938C8D688D689392B58C938C938C938C938CB59293
%68684469688C9AFD14FF7626514B514B4B26514B4B26514B4B4B51267DFD
%17FFA72D7C587C58827C7C58827C7C58827C7C527C2DA8FD10FF948CB58C
%8D8DB58C938D8D8C8D8D8D8C8D8D8D8C938DB5686F698D8CC9FD13FF7C26
%514B514B514B514B514B514B514B514B51267DFD16FF527C58837C837C83
%7C837C837C837C837C83585852FD10FF9A8C8C93688D6869688D688D688D
%688D688D688D688D6869688D8C93CAFD12FF7D26514B514B514B4B4B514B
%4B4B514B514B514B4B26A8FD12FFA7837C52527C7C827C837C827C837C82
%7C837C827C7C52585883A7FD0EFF8C8D93B58CB5939392B593B592B593B5
%92B593938C938D8D8C8D9AFD13FF52514B7651514B514B514B514B514B51
%4B514B76515176FD10FFA8587C7C83587C7C837C837C837C837C837C837C
%837C837C7C587C7C7C58A8FD0CFF9B688D8C938C938C8D6893688D688D68
%8D688D688D688D8C8C68FD14FF52264B264B2026204B2626204B2626204B
%204B264B207CFD0FFFA8517C587C5258588258827C7C58827C7C58827C7C
%58827C825158527C587C51A8FD0CFF9A688D8C938D938C938D938C8D8D8D
%8C8D8D8D8C8D8D8D68CAFD14FFA8514B5152A77DA77DA17DA77DA17DA77D
%A751524B76CAFD0FFFA782827C587D587C7C837C837C837C837C837C837C
%837C837C7C527C5883827C83FD0DFF9A6868688D8C8D688D8C8D688D8C8D
%688D8C8D688C68A2FD16FF51764BA7FD0DFF7D51527CFD10FFA85883FD04
%582D58527C587C587C587C587C587C587C52582DFD04588358A7FD0EFFA1
%6968688D8C8D8C8D8C8D8C8D8C8D8C8D68686FFD18FF7676527DFD0DFF76
%7C517DFD10FFA77C7C7C587C58837C837C837C837C837C7C7C837C837C83
%7C7C587C587C7C7C83FD0FFFCB766944696869688D688DFD04684470A1FD
%19FF4B7C4B7DFD0DFF76765152FD10FFA8587C5158527C587C587C587C58
%7C527C587C527C587C587C7C7C5158527C57A8FD12FFCA7070696F686968
%6F6F9BA1FD1CFF767C767DFD0DFF767D527CFD10FFA7827C7C5258527C52
%58527C527C527C587C527C527C527C52585258527C7C8283FD12FFAFA8A8
%A87D7D52A8CAFD1FFF4B7D527CFD0DFF76767652FD10FFA8587C527C5858
%52585258515851525158515851585258517C5258587C587C58A8FD17FFA8
%AFA8FD20FF51767C7CFD0DFF52A1767CFD10FFA77C587C7C837C837C837C
%837C837C837C837C837C837C837C837C837C7C587C7DFD17FF7D52A8FD20
%FF4B7D527CFD0DFF517D7C51FD0AFFA87DA87DA87E7D5758588258827C7C
%58837C7C58837C7C58837C7C58827C7C58827C82527C51A7FD17FF52527D
%FD1DFFA8FFA8517D7D76FFA8FFA8FFA8FD07FF4BA87C76FD0AFFA8A87DA8
%7DA87D7C587C7C837C837C837C837C837C837C837C837C837C837C837C83
%7C7C587C83A8A9A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF5227
%7DFD1AFF7D7EFD047D4B524B527D7D7DA87D7D7DA87DA87DFFFF51527C4B
%FD0CFFA87DA87D7D577C5152527C587C587C587C587C587C587C587C587C
%587C587C5252517C51A7FFA8A87D847DA87DA87DA87DA87DA87DA87DA87D
%A8A8FF52527DFD1BFFA8FFA8A87D514B5151A87DA87DA87DA87DA87D847E
%FF514B4B76FD0DFFA87DA87D585152275127522D522D5251522D5251522D
%5251522D522D5227522752517CA8FFFFA8FFA8A87DA87D7E7DA87D7E7DA8
%7DA87DA87D847D52277DA8FD1BFFA8A87D7D4B5151527DA87D7E7DA87D7E
%7DA87D7E7D5176514BFD0BFFA8A87D7E7DA852597D7DFD0452515227522D
%522D522D522D522D522D525258527DA7527DFD04FFA8A87DA87DA87DA87D
%A87DA87DA85252527D7D7D525252A87D7D527DFD17FFA87DA87D5176A87D
%A87DA87DA87DA87DA87DA87DA8A8FF7651FD0BFFA87DA87DA87DFD05A87D
%A87EA87DA87DA87DA87DA87DA87DA87DA87EA87EFFA9FF7DFD06FFA8FFA8
%FFA8A87EA87DA87DA8A87D277D52272752522827527D7D7DFD16FFA87DA8
%7D7D267D7D7E7DA87D7D7DA87D7D7DA87D7D7DA8FF7D27FD0BFFA8A87D7E
%7DA87DA87DA87D7E7DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DFF
%A87EA8FD13FFA87D52275252535252277D7DFD17FFA8A87DA87D517CAFFD
%0EA87DFF7D51FD0DFFA87DA87DA8A87E7DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87D7EA8FF7DA9FD11FF7D52275252A8A8FFA8A87D7D27
%282752A8FD15FFA8A87D7D26A7FD0EFFA8A87D7D26FD0FFF7D7D7DFD19A8
%7D7D7EA8A8FD11FF7D27A8A8FD07FFA8FFA85200A8FD18FF7D51A8FD11FF
%7651FD10FFA8A8A8FD19FFA8A87DFD12FFA8A8FD0CFFA8A8FD1AFFA8FD13
%FFA8FD11FFA8FD1BFFA8FFA9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FD50FFCAC9C9C9A6C9C9C9A6C9C9C9A6C9C9C9A6C9C9C9A6C9C9C9CAFD66
%FFA89F98987498749874986E9874986E9874986E9874986E98989EA8FD65
%FFC9989F989F99C1999F99C1999F99C1999F99C1999F99C1989998C9FD65
%FFA09874FD13C19FC198989FFD65FFC9989998FD07C199C19FC199FD04C1
%C8C1C198C198C8FD41FFA8FFA8CFA8CFA8CFA8FFCFFD19FFA09874C198C1
%99C198C198C198C198C198C198C198C199999898A0FD3EFFA7A7A0A176A0
%75A075A075A09AA1A0A7A7FD16FFC9989F99C199C199C199C199C199C199
%C199C199C199C199C198C8FD3BFFCAA07576757575767576757675757576
%FD0575A1FD14FFA09874C198C198C198C198C198C198C198C198C198C198
%C19898A0FD3BFFA76F7675A0759A75A0757675A0757675A0759A75A075CA
%FD0CFFCACAC2C9C2C9FFC9989F99C198C199C198C1FD06C098C199C198C1
%999F98C9FFC9C2C9C2C9CAFD34FF7CFD047576757675A07576759A757675
%9A75767575A7FD07FFCFCFA0C89FC198C19EC19EC29F9874C198C198C198
%C098C098C098C098C098C198C198C198989FC29EC19EC19EC199C8C2C9CA
%FD2FFFCA6F7675A07576759A757675A075A075A075A0759A75FD07FFC9C1
%989F98FD04C1C7C1C199C1989F99C199C1FD0DC0C199C1999F98C199C1C1
%C8FD04C1989F98C1C8FD11FFCAFFCACACAFFCAFFCAFD15FF7C4A754B7575
%756FFD07754B756F754AA7FD06FFC2C07498989E749998C199C198C19899
%74C198C198C09EC098C09EC098C09EC098C098C198C1989898C198C198C1
%9E98749E989874C0C1FD0BFFA1BD94B6FD0A8D93BC9AC3A8FD10FFCA7C4B
%754B754B754A756F754B756F75757675A1FD06FFC9C074C1C0C09EC09899
%9EC199C198C1989998C199FD0FC099C1989F98C198C199C1C09998C09EC0
%C0C074C0C9FD08FFBD8D8D8C8D8C8D8D8D8C8D8D8D8C8D8C8D8C8D8C8D9A
%FD10FF7D755175A1A17C7C75A076A076A7A1754B75A8FD06FFC1749E9899
%749874C0989898C198C1989974C198C198C098C098C098C098C098C098C0
%98C09899989998C198C1989E74C07498749998C074C0CFFD06FFC3688D68
%8D688D688D688D688D688D688D688D688D8C8DA2FD0FFFA1757675FD0BFF
%517675CAFD06FFC099C09F98C0C0C198C074C199C199C1999998C1FD11C0
%C1999F99C199C199C098C1989FC0C09E99C09F98CFFD06FF9B8C68FD048D
%B58DB08DB58D8D8DB58DB08DB58D8D8CCAFD0FFF7C757575CAFD09FFA875
%4B75A1FD05FFC9C098C074C0C0C09899989898C199C1989F749998C09EC0
%98C09EC098C09EC098C09EC098C09899749F98C198C1989898999EC098C0
%989E9898C8FD06FFC4688D688D688D688D688D688D8C8D8C8D8C8D8C8D8C
%8DA8FD0FFFA1757675FD0BFF75756FCAFD05FFCF989FC099FD04C0989F98
%C098C199C1989998C1FD11C0C1989898C199C198C098C098FD04C09F9E9F
%98C9FD07FF9A688D688D8D8D8C8D8C8D8C8D8C8D8C8D8C8D6869A1FD10FF
%7C754B76FD0AFFA8754B75A1FD05FFCAC074C0749898C0C0FD04989F98C1
%9899749898C098C098C098C098C098C098C098C098C09898989998C1989F
%FD0598C0989874C074C0C9FD07FF7D274B4B446F68696869686968696869
%456F4B4B26A8FD10FFA1757576FD0BFF757575CAFD06FFC19E98C0989F9E
%C098C198C098C199C1999F989898C198C198C198C198C198C198C198C198
%9F989F99C199C198C198C074C0C09F98C0989EC0FD08FFA726514B514B51
%4B514B514B514B514B5252524B51A8FD10FF7C754B7CFD0AFFA8754B75A1
%FD06FFCA989874C098C09898989998C198C19899749974986E9974986E99
%749874997498749974986E99749998C198C19899989874C0C0C0989998C9
%FD08FF7D27274B27514B4B27514B5127514B4B4B524B4B26A8FD10FFA175
%7676FFFFFFCFFFA8FD05FF4B7575A8FD07FFC9989E9899749F9EC098C098
%C198C198C0989F989F989F989F989F989F989F989F989F989F98C0C0C198
%C199C074C0C09F749F989E98C8FD09FFA126514B514B514B514B514B514B
%514B524B524B4BA8FD10FF76754B75767C767C767C767C767C76754B75A1
%FD08FFC99898749898C0989898C198C198C198C19FC1C1C19EC19FC198C1
%9FC198C19FC19EC1C1C198C198C198C1989898C09898749898A7FD0AFF7D
%27264B274B264B274B26514B4B27514B524B4B26A8FD10FFA1757575FFCA
%FD07FFCACA4B7575A7FD0AFFCAC9A09998C098C198C198C199C19FC1C1C1
%99C19FC199C19FC199C19FC199C19FC19FC19FC19EC199C074C09E99A0C9
%A8FD0CFFA827514B51264B4B4B26FD044B514B5151524B52FD11FF75754B
%7CFD0BFF754B75A1FFFFFFA8FFA8FFA8FD05FF9F98C09898C09EC098C198
%C198C198C198C198C198C198C198C198C198C198C198C198C098C0989898
%C098FD0FFF7D4B274B527D767D767C767D767C767D7C4B27514BFD11FFA0
%6F754B7676A1A1A17DA77D7C75764B756FA7FFFFA8A87DA87DA87EA87DA8
%A8A098C098C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C174C098C1FD0FFFA8275126A8FD0CFF4B4B2752FD
%11FF76754A7CA7A17C7C767C76A17CA7A17551757DFFFFA87DA87D7D7D84
%7D7D7D847598989998C19FC19FC19EC19EC19EC19EC098C09EC098C09EC0
%98C09EC098C19EC19EC19FC1FD0598FD0FFF7D4B27277DFD0CFF52264B27
%FD11FFA07575A1FD0BFF75756FA8FD04FF7DA87DA87DA87DA884A098C098
%C1FD21C0C198C098C1FD0FFFA8275126A8FD0CFF514B4B52FD11FF75754B
%A1FD0AFFA8767575A1FFFFFFA8A87D7E7DA87D7E7DA87698989998C198C1
%98C198C198C198C198C198C198C198C198C198C198C198C198C198C198C1
%989998C099FD0FFF7D4B27277DFD0BFFCF51274B4BFD11FFA075757CFD0B
%FF757675A1FFFFFFA87DA87DA87DA87DA87EA098C0749998997499989974
%99989974999899749998997499989974999899749998997499989974C098
%C1FD0FFFA8274B26A8FD0CFF4B4B2752FD09FFA8FFA8FFA8AFA8A875754A
%7CA8FFA8FFA8FD06FF7551757CFFA8A87D7E7DA87D7E7DA87D8475BAFD04
%98749898C0989E98C0989E98C0989E98C0989E98C0989E98C0989E98C098
%986E99989898C099FD09FFA8FFA8A9A8FF7D4B262752FFA8A8A8FFA8FD06
%FF4B264B4BFD04FFA8AFA8A87DA87DA87DA87DA87D76756F76A87DA87DA8
%7DA8FD04FF757675A1FFA87DA87DA87DA87DA87DA87EA098C098C19899C0
%C7C0C1C0C1C0C1C0C1C0C1C0C1C0C0C0C1C0C1C0C1C0C1C0C1C0C1C09F98
%C074C098C1FD06FFA8A87DA87DA87DA87E7D275126767DA87DA87DA87EA8
%A8FFFFFF4B4B2752FD04FFA87DA87D7D7DA87D7E7DA87D7D75754B7C7DA8
%7DA87DFD06A87C7575A0A87DA87D7E7DA87D7E7DA87D8475C0C098989F74
%FD1DC17499989898C099FD05FFFD057DA87D7E7DA87D4B262752A87DA87D
%7E7DA87D7DA8FFFF51264B52FD08FFA8A87DA87DFD04A87675A8A8A87DA8
%A8FD08FFCA4BA1A8A87DA87DA87DA87DA87DA87EA098C098C09899999F98
%9F999F989F999F989F999F989F999F989F999F989F999F989F749998C098
%C098C1FD06FFA8A87DA87DA87DA851524B4B267D84A87DA87DA87DA87DA8
%A8FF512727524BA8FD09FF7DA8A8FFFFFF4B76A8FFFFFFFD05A8FD05FFA8
%757CAF7D7D7DA87D7E7DA87D7E7D84759898999898989974986E9874986E
%9874986E9874986E9874986E9874986E987498749998989899989898FD09
%FFA8A87D7E7D52205126277DA87D7D7D7E7D7D7DA87DA87D52204B2627A1
%FD0BFFA8A8FFFF7576FD07FFA8A9A8A8A8FFFFFF6FA1FFFF7DA87DA87DA8
%7DA87DA884A098C098C09899749874A075A075A075A075A075A075A075A0
%75A075A075A075A07598749974C198C098C1FD0CFFA8A87D7D4B4B7DFD08
%A8A97DA8A8FFFF7D2752A8FD0EFF7EA84B76CAFD09FFFD04A8A17576FFFF
%FFA8FFFD04A87D7D7DA87698989998986E74757D7DA87D7E7DA87D7E7DA8
%7D7E7DA87D7E7DA87D7E7DA87D7D75746E98989998C099FD0DFFA8A8524B
%4BFD0BFFA8A87DA87D2727FFA8A8FD0DFFA8A1A1FD0DFFA8FF7CA8FD0AFF
%A8A87EA098C098C074997DA8A8A884A8A8A884A8A8A884A8A8A884A8A8A8
%84A8A8A884A8A8A87D756EC074C0989FFD0CFF7D4B4B51207DFD0EFF7DA8
%274B4B5227FD2EFFA09898C098A7FD1EFFA8A198C09898A0FD0CFFA8274B
%267CA8FD0FFFA8A84B272676
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Основные RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-02-09T13:11:08+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-02-09T13:11:08+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-02-09T13:11:08+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq8s/P/XtX03Q&#xA;tNt9PupbNby4k+syQO0cjJFEWCB1IYAsRWnWnhmHrchjDZ6f2X0uPLmkZgS4Y7X73lFj+YPnmyUC&#xA;DXbw07zSG4/5P+rmpGsyjq9fk7H0k+eOPw2+6lPUvz4/M6znEMerLJ8IZmktratSTt8Majpmbh1W&#xA;SQsuP/ob0R/g/wBlL9aDf/nIP81GUgapGhPRha29R96EZd48kj2a0X80/wCml+tKr784/wAzr0ET&#xA;eYblA3X0OFv18PRWOmROWR6uTj7D0cOWOPx3++3rX/ONHmfXtU/SttqeoXF+oUSg3UrzMjiQqeBc&#xA;kgMGFR7Zdp5kyIPLZ5P2l0uOEYSjERNyGwp7rmW8m7FXYq7FXYq8J/5ycivlbQLtUZrKMXCO9Kxr&#xA;I5joG7AsBt8sxtQDs5GnPN5Bpvm7WNOUixvbqyB6/VLiWEH6EZfDMYTIcgxBTu2/Nrzpbgenrt98&#xA;J5D1XEu4/wCMnOo26ZPxZd7Hw49yrdfnF54uWZpNcuwXFCIhHCOlNhGqU+jHxpd6+FHuSe/89+Yr&#xA;2MxXWqX91ETUxT3UzJXcV4FmXvkTMnqyEAOjJfyITULv8zdPnt4j9WtY7h71oxRVjeB0XmR4yFaV&#xA;75ZgB4mvMRwvqjM1w3Yq7FXYq7FWNedvNVxoMFqtrEklzdswRpalFWMAtUKVJJ5Cm+U5svALYylT&#xA;Arjzr5pnDK+oOiMa8Yljjp7BlUP/AMNmCdTM9Wk5CgTrmuHrqd59FzMP1NkPGn3o4iuj1/XoyCup&#xA;3dR05Tyt+DMcIzz714ymdr+YHmm3fk9ylyoFPTnjTj98YjavzOWR1Uxz3ZDIXp+i6iNS0m01AJ6f&#xA;1qJJDHWvEsKkV2rQ5sYmxbcCjMKXYq7FXYq8d/5yPFdM0MeNxOPviAzA7Q+ge9672R/vJ/1R97xf&#xA;NG90xPVZOeoTnwbj/wADt/DNjhFRDYOSEy1LsVe6f84ptXUNcXwTp7FlzJ0/1H3D9Lw3tT9Ef68v&#xA;uD6NzMeLdirsVdirsVWTwQzwvDPGssMgKyRuAysD1BB2OKvFfN/5feTZ/wA4PLel/ouGHTr+2na8&#xA;tLatvG7JFcOrfuTGQeSL08Mx5RHGA3xkeElKtc/KbydF+bmi+XbeGaHSb2yee4gWZ2JcLcsCHfkw&#xA;/uV74DjjxAMhkPCSpecvyl8o6R578q6TaLcfUNVkYXkTyliwWWNaBqclqHPTBLHESAWOQkEpp5h/&#xA;K7yRpP5keUNOs9PpY3v1hryCWSSZZTEoK8hIz/cNskYASAYiZMSXtWnaXpmmWwttOtIbK2XpDbxr&#xA;Eg/2KADLwKaSbROFDsVdirsVdirzL88mli03Sp4k9R1nkX01YLJRlB5KD1A47/PMfUCwwm8si1+/&#xA;UUNtKf8AWCH8Q+YRxhqpV/xFdf8ALG/3L/zXg8Md6OFx8xXdNrRx9C/814+GO9eFC3Gt6hIpX6rM&#xA;R/L+7UfgxyQgE0+ivJCuvlDRw5UubSItxNRUqCRXbpmyh9IbxyTvJJdirsVdirx7/nI7bTdBJ6fW&#xA;pd/+eYP8MwO0Poeu9kf7zJ/VH3vFs0b3TD77/e24/wCMr/8AEjmzx/SPc2hQyauxV7l/zimQdW14&#xA;dxEv/ElzK0/1H3D9LwvtUfTH+ufuD6PzLeMdirsVdirsVdirzPzP/wCTy8n/APMLc/8AUPdZTL6w&#xA;2x+gpB+afmT/AA1+beia36H1lbSwTnBy4Flle5iPFqHcepUePTI5JVMFnjjcSEpuPP8AF5y/Mvyp&#xA;PFZtZR2E6R8XcO7NLKrE/CAABwFMiZ8Ugng4YlnPnf8A8mz5G+V5/wARXLJ/UGuH0l6RlzU7FXYq&#xA;7FXYq7FXmn52D/RNKPhJMPwTMbU8gwm8pzDanYq7FXYq+hfIzcvJ+kN42sZ/DNlj+kN45J5k0uxV&#xA;2KpbrvmXQdBtludYvorKJyRH6jfG5G5EaCruR4KDkZTERZLkabSZc8uHHEyPl+nueJ/m95+8uecP&#xA;LjwaP6/r6Lcx3kskyBFa1kraO6DkXoJLmP7ag5gZ80csSI9Hsuw+zM2jzCWSqyAx59fq+6J5PMY3&#xA;DorjowrmmIp65i+sRGPUJajZzzH0/wBubDCbiGwckFlqXYq9Y/Izz55e8i6TqOq65HM0esXS2ti8&#xA;EaOwa1XnPUuyUUC4irv4ZlQlwbkPFdr6SermIQIHDcjf9Ll9xfRnlnzz5S8zox0PU4byRAWeAErM&#xA;qilWMThX41YDlSle+ZEMkZcnlNX2fn0/95Egd/T5jZPcm4TsVdirsVdirzPzP/5PLyf/AMwtz/1D&#xA;3WUy+sNsfoKj5jjjf8/fLIdQwGnswDAGjKl4Qd+4OMvrCY/QVn5lIg/NTyK4UB2kdWam5CzxEAn2&#xA;5HHJ9QXH9JRvnf8A8mz5G+V5/wARXGf1BEPpL0jLmp2KuxV2KuxV2KvMvzu/3l0f/jLN/wAQXMfU&#xA;8mE+TyvMJqV0sbtxVYzT3oP14OIItZLbTxf3iFR49R94wgpU8VfQXkD/AJQrRf8AmEi/4jmzhyDe&#xA;OSf5JLsVdirwH/nJUTReYvLE7n/RniuYl9n5Jy3/ANkua/XxuL3PsgRwZB1uP6XjPlvWLbRNbmGq&#xA;RPcaddRTWOpRJQyNDMvEtHyIHNG4yLv1AyvFIfB6jW4Tkx+k1OJEo+8fr5fFqwkvIE5yzRxRPusc&#xA;xox/yqA7V65h5BEmgCXI5rtQm067QCSVFkX7LqWP/GvTBjjKPIJFpaLK1JoL2P6Qw/hl/iHuZWW5&#xA;NIeSJvq1zDLJTZA1CfliM1HcENeQyMSAt8x6zb3Nho+kWUElva6RblZBLTnJeTt6lzKQvQFuKJ/k&#xA;otd8z+IEbPP49PKE5GX1SP2Dl+v3l6b/AM402U7+eFkjHwW8Ejzf6vAx/wDE5FyjFvlHuK+0hENF&#xA;wnqYj9P6H1TmyfN3Yq7FXYqlXmfzRo3lnSJdV1ecQ2seygbvI5+zHGv7THw+k7YJSAFlMYkmg+bt&#xA;b/OXUtQ86WPmm3tra2l0xZIrG1kWSYenIkiH1mV4+TUmJ+GlNuvfDlmuVuXHEAKQ15+cWvXXnCx8&#xA;1SRWY1DT4DbwxLDKISjCUVZTOXr+/bow7YDmN2kYhVLdc/ODXtZ17SdbuorRLvRmLWqRQyiNizK/&#xA;7wNOzHdB0IwHMSQe5RiAFK+p/nLr+p+YtJ164jslu9H9QW0SQzLGwlADc6yu3bahwnMSQe5RiABD&#xA;3z8u/wAytE866eXtiLfU4FBvdOZqtHU05IaDmhPRh9NDmXDIJBxZwMWXZNg7FXYq7FXYq8d/OvVI&#xA;pvMGl6YhBe0tpriYDsZ3RUB+iJsxtSdmubFNOsVVRNIKsd0B7DxzAlJpJTDIIaIDAgioPUHFUnv7&#xA;P0G5p/dN+B8MsjK2QL1/8ndWjvvJcNtX9/pk01pMv+q5eM/TG65s8RuIciPJm+WJdirsVeffnf5I&#xA;m81eSpRZRtLqumN9bsY0BLycRSSJQNyXToB1YDKs0OKLu+wO0BptQDL6JbH9B/HR8nM9lqHB55DB&#xA;dJsXGyvTxNDxPvTNTUoWALD6YYiVEFf+j7IklmnevV45YXG/0BvwweLLy+RRR7z9jRs9KX7RvBXp&#xA;8AP6kOHjn/R/HxYk+cvl+xSKaEP93XRPhxH8Vw3k7o/j4rZ75fL9imw0n9j603uTGo/UckOP+j9r&#xA;ICR6n7ENIkbS+oOR8ObBj94C5YCapIwi+I7kPqH/AJxx8kz6T5dk1+9j4XOrAfVFYfEtt15dekpC&#xA;np0APfMrTYqJkerwftR2jHLkGKBuMOf9b9n6XsOZTyjsVdirsVfMn/OReoXj+eEtb9Jv0fb28Z08&#xA;VZYm5isrp2Y8vhJ9qZiZ7tysNU8r9SzP2YnPvzc/wyii3W4tb9on/wCCfGithrlb/wC+n+98aK2G&#xA;+doNzC9P9Zx/DGitsi/LzUbq1876NJosUxv2uok4IzHnEzgSow/kKV5e2+Thd7MZ1T7NzPcF2Kux&#xA;VD6jex2On3N9KpaO1ied1WnIrGpYgVoK7YCaFq8m1z8z/MU7cY1XTLNyVT0SJZmPEmjSMPh6bcVH&#xA;zzBlqSfpaTkJ5MH5vqOvzXU7PJNOsZmlkdpHYJVRVmJPQAZVKRrdiSnmUMHYq7FVk8QliaM/tDb5&#xA;9sQUpX5c1q80i6untJ5bRpZV9VonIBMagLyT7DUqeozJ45DkWdl6R5V/MzV5bq0tNWt0nhupYoYr&#xA;xKRyhpmCIZIx8BqzD7NKDtl+LU2aLOM+j0zMtsdirsVeOfmn/wA4+WPmO5m1ry1LHpmtSkvdW7gi&#xA;1uXJ3c8QTHIe7AEN3FSWynJiEnoey+356ccM94faP1vnrzH5H86+WXYa7otzaxqQPrSp6luSdwBN&#xA;Hyjr7cq5jSwkPaaXtnDl5EH3c/kd0hFzCf2qfQcr4C7AarGervrMP834HHgKTqsfem2g+WvM3mGY&#xA;Q6HpN1qDEhS8UZ9JSenOU0RB7sRko4iXE1HauHELka/Hze6/lr/zjd9Vnh1bzq8c8sZEkOiwnnCC&#xA;KEfWX6SUPVF+HxLDbMnHgA5vIdp+0s8gMMWw7/1fj4PewAAABQDYAZkPJuxV2KuxV2KvIPz6hE+q&#xA;+TYCRSW9dNxUVaa2FafTlGbmG7FyKM/5x2Vl8oaojAgrq0ooeopbW+2HBy+K5ub1PLml2KsW/NKR&#xA;Y/y78wEgkNZyJt4uOI/XkMn0lnj+oPJfyjSKD80LdaVMujQlTsTye2ic7/QcoxfV8G7J9PxfQeZT&#xA;jOxV2KpX5r/5RfWP+YG5/wCTLZDJ9J9yDyeAa9OiCBXYKoYuxOwACkZq8YccIGC1t3lS8e7kgcLx&#xA;RIjuRXq2xH0ZInpSUatzEmwurl/n6f8AzTXI0hU/Sajo0p+fD/mnHhWmjqKMKF5l914f0x4VpTaW&#xA;GStby6Sv+oP+IrjXkFS829rYjilwZY5HJDyH4uTdmrT6MnZKWTeW5BJc6IfC+sVP0XMYwY/7we9Y&#xA;83v+bVyHYq7FXYqg9W0mx1ayeyvld7ZyCyxySQklTUfHEyN198VYF+Y3kT8urHytqerX+kpI8aKD&#xA;cFpZJQ0kixq3Ivy+0+DhDfDVZYioykPiXflT5e/Lq40q9l0XSLZ4La+eFLiaHnJUQxPtJOGlp+87&#xA;nHhCTq8x5zl8y9JwuO7FXYq7FXYq7FXYq8h/OvjN5t8gQo6/HqDKTXYE3NmKnKMvOLdi5FF/kRIk&#xA;Wn+Y4mkoqas9FY039KME0/2OHD1965unueorJG32WDU8CDlzSuxViH5uypH+XGuM/Qwqm3i8qKPx&#xA;OV5fpLPH9QeZeQfTt/zT8ux9TPoFoQf8p7IyGv0LlUPqHubp/Sfe98zJcZ2KpLq/mzTtKu/qtxFM&#xA;z8Q4ZFUrQ17sy+GNKkXmDz3pFzoOpW0cNwHntZ40LKlAXjZRWjnxyOQek+5B5PIaRXeqlJkEkRVx&#xA;wYVB4kU2OarkHH6K7eXNENaWca12+Ecf1YPEl3rxFb/hzSe0RHtyb+uPiFeIrf8ADWlitBIK9hI4&#xA;H68fEK8TY8taVWpV2/1pGP8AHHxCvEW/8N6R3h5fNmP8cfEK8RVE0DRUbktnFy61K1P3nB4ku9Fl&#xA;d5WlprenxdFOo2bKPCl3GMuxj1hmOYey62l9aGsOvC3YjksNyI9x7Mq1/wCFzaN7GJvNfmaB+H19&#xA;ZAOjIsLg/wDC1+/GkKf+M/Mv/LZ/yTi/5oxpXf4z8y/8tn/JOL/mjGlQ1x+Y2p20npXGrwwyUB4S&#xA;fV1ah6GhUY0qW/mH56m1T8u9UtJFinEwgC3MLbfDcRtuByB6dqY0lW/I7zLo2leWdThv5/QZtSd6&#xA;lWK8Ta24qSB/knEq9TsvM/lq+uhaWWrWd1dNWlvDcRSSHiKn4FYttgVMsVdirsVdirmAIIPQ7HFW&#xA;D+Z/L2hafC9zJcT+rJX6vbcw1W9iwJ4juThV4l+YzXf6T0UWo5XKycrdRSvqGWOnXbqo65j57sU3&#xA;4ao2mHkLTtRsI9SjvUdWNx8LuCA5AozLXqD45PDEi7Y5pA1TK8uaVSO5uIqenK6U6cWI/VirXmvV&#xA;dW1byJqugiK41C7u/R+rCP8AeSfu50kYBQObbL4nK8ouJbMZqQYz+Xlr5g0783NA07Xo/TvLeyEc&#xA;NQQxhNnPJGrV7xq3p+3Hj2zHgCJgFvmQYmn0bmU4rsVSbzXcaVBpbtfwrOWqsEf7Rcj9k9Vp3OIV&#xA;5VcRetbyxV4+ojJypWnIUrTDIWKQxGTyx5ovZI/q5is5mIa3cychIruydlPHdO4zFGmphwINbH8w&#xA;URSipMCAR8aDr82TInTeSOBxb8wl2NkpI71U/qkwflvJeBwk/MEf8eK/8L/zXg/KrwO9T8wf+WFf&#xA;vX/mvH8svA4D8w32Fmq0/wApB+uTD+W8l4FaHy7+Yd8KNNHADWoZ69FLH7AfsuSGm8k8DM/JXkHW&#xA;YfOEdjfSRiHSnWc3iNzM0lrJDJxCHiV5GQfEfuyUdPRu0iG7250R1KuoZT1BFRmQzQkui6PLvJYw&#xA;MfH00r99MVQsnlPy6/2rJB/ql1/4iRjaqR8l+Wuv1SgHX95LT/iWNq8R8yXPlrzJr08Xlfydd6pf&#xA;2oe0F5IX9EenIQWMbhlALVozSoflvhVbYf8AOOvmfUZGvNQks9IZh8NsjSTkexAbgv8AwTY2q3Vf&#xA;yG8z2b/Wba4S4lDcijxMYWAFN2iaR+n80R+eNqu0Lzjb+Q9QS91vyTBazn/RxqunOTRG3YFS0oMj&#xA;U25cD2xV9C2V3De2cF5BX0bmNJouQKtxkUMtVO4ND0OBVbFXYq7FXYqxHzX5T1C/umvrWX1jQD6s&#xA;5pxAHRCdt+tDTCCryLzLpD3Hn/yvpjepBO88YmWRApT95Uld/iHFcoyfXFux/SXrP/KuIf8Alub/&#xA;AJFj/mrL7aXf8q4h/wCW5v8AkWP+asbV3/KuIf8Alub/AJFj/mrG1QWoeRNStOM+nzfWSlGAH7uQ&#xA;Eb1Xcg/fjaGKzail7+f/AJalaJ4J109o7lJRxPqrDeg/fUZjy/vA3x/uy9py9pdiqE1TSrPU7U29&#xA;0nJK1VgaMrdKg4qwDWfJmp6erzRUurZd+SV5qPFl/phtCC0fy/favDF9UKfuLePnzJH25ZqU2P8A&#xA;LhVMf8Aa7/NB/wAGf+acFq7/AABrv80H/Bn/AJpxtXf4A13+aD/gz/zTjau/wBrv80H/AAZ/5pxt&#xA;Xf4A13+aD/gz/wA042rceh+ZtAnS+hQSqv8AeiElwV7hloDT6NsVTLyxdwXnmq8uYG5RSi5KmhH/&#xA;ACyjvilmeBXYq7FXYqoW1hY2rzSW1vFA9w/qXDxoqGRz+05UDkfc4qr4q7FULf6TpWoIEv7OC7QE&#xA;MFniSUAjcGjg9MVRWKuxV2KuxV2KuxVSe1tZJ47h4UeeHkIZmUF05CjcWIqKjrTFVXFXYq7FXYqp&#xA;ta2zXC3LRIbhFKJMVHNVahZQ3UA0FRiqpirsVdirsVUobW1gLGCFIi32iiha7k70HixxVVxV2Kux&#xA;V2KuxV2KqUdnaRStNHBGkr1LyKqhjypWpAqa8RiqrirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdiqSecPMn6A0j62kQmuJZFgt42JC82BarEdgqE5gdpa4abEZ1fQOZodJ4+ThuhzeYr+cHmyZq2&#xA;9vDLGT9tISF6j7IeXkRQ5zv8t6nrwDy3d2OyMPTiPyXD81/PO3+gJ/yJHt/xb88P8tajvh8pL/JG&#xA;Hul8w3/ytbz1/wAsCf8AIkf9Vcf5a1HfD5SX+SMPdL5h3/K1vPO/+gJ3p+5Hv/xb8sf5b1HfD5SX&#xA;+SMPdL5hx/NbzyAT9RTbp+5Hv/xb8sR23qO+Hyl+P7F/kjD3S+YXW35xeZUukS6toaE09JoynP8A&#xA;yVdZH4sQNqjB/L2ojuRCUetXaD2PiO3qB+D1vTL+HUdOtr+AERXUSSoG6gOK0PuM63DlGSAkOUhb&#xA;zmXGYSMTzBROWMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgNU1/RdKAOoXsVsSKqjsOZH+Sg+I/&#xA;QMhPJGPMs4Y5S5C2PXP5r+TYa8LiW4p/vuJx/wAnPTyg6zGOrkDRZD0QbfnN5VB/3nvD7hIf4y5H&#xA;89DuLL8hPvDafnJ5UYisN2vuUi2+6Q4/nYea/kJ+SZWv5neSrghf0gIWPaaORB9LceH45ZHVYz1a&#xA;5aTIOjJLW7tLuBZ7SZLiB/syxMHU/JlJGXgg8nHII2KrhQ7FXYq7FWBfnR/yikP/ADEn/qGnzQ+0&#xA;P9zH/hkf0u37G/vZf1D+h5jol0ltbjmpIK0FPYnxpnKEW9OI2AjJNXlP92gUeJ3OPCkQUG1C8P8A&#xA;uwj5ADGgnhDl1C7U/wB4T7EA40F4QiotX2pKn0r/AEODhYmCT6nIJZ1kp9qRCB/z1QYJbD4S/wBy&#xA;VkNh7x973vyZ/wAonpP/ADCxf8RGd92d/i8P6oeL1399P+sU5zNcV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KvmDzve38fnLWIb2X/SRdSH0puUbGMt+7Kch8ScKcdumaXODxm3e4COAV3JWJk/ailHu&#xA;ArD8DlLcuEtsR1kH/PNsVXj0Kfab7qfrxVxMAFfiNPkMVeofkU1zJdarJEf9x4RFehJUzVJFD0qF&#xA;rX5jM/Qg2e512vIod717Ni61jvmDz55e0NzFdTc5xs0aU+E9gxJAH681Wr7Xw4ZcG8p90d/m5+n7&#xA;OyZRxfTHvLEpPzjF04j02O1R+4mdpCf9UD0f15q8vtBkAsY+H32f1Oyx9jY+s792361J/PPmM8pW&#xA;vxGvdFiiCj/glZvxzBl21qSdpV8A5Y7KwDbhv4lI/N/nK71rQDp9yBI0LmZboAIWAhlQhlG3WQUo&#xA;BkdV2jkzYhCfMTibbMHZ8cMzOPIxIpjNj/vJF8swTzdhDkEXHHy3PTMXPqODYc2wBVCIOwzAlmme&#xA;rKnGND2+7DDPOPVFKLoVPt2ObLDmEx5sSEJef7r/ANeP/k6mTn+iX+5LXP8ASPvZzYfmDqEGmWOn&#xA;WrCzS1hjjMhVXZ2VaGvIMAPDb6e2bb+VssccYQ9PCAO8usPZUJTlOfq4ii08+eY4G9Q3cdwKV9Oa&#xA;JONPGsfpH8cEO3dRHeRB94/VSJdk4ZcgR7j+u1e0/OnT0Iiv0gaQH45IJSFA/wBVlbw/mzYY+351&#xA;6sZ+F/dThZOx436Z/P8AWzfQvM+j65EXsJuTKKtE2zgVpWm4I+Rzb6PtHFqL4DuOYOxDq9To8mH6&#xA;ht39E1zOcV2KuJpuemKpVd+bfKtmxW81mxtmHUTXMMZ8P2mGR4h3uVj0Wef0wmfdEoOT8xfIMZXl&#xA;5j008jQcbuFvv4safTjxjvbh2Tqj/kp/6Uqi+ffIzNxXzFpbMegF7bk/8Tx4x3sT2ZqhzxZP9LL9&#xA;SbWl9ZXkfqWlxFcR/wA8Tq4391JwguJPHKBqQI96vhYOxV2KuxV5D/zkFoWkyWGm6oYANTkuFtjP&#xA;uQ0CxyycGWtD8VKGlcwdbEUD1c/QyNkdGBeQ/wAr182HVlhvBYyaZIsagI5WTk8i1JV1409LwPXM&#xA;fFp+O9+Tk5tQIVtzZI3/ADj35hV6R6tC8Y6cpbhD9wDZYdFLvDUNdHuKtB/zj7rLEC41SNVrQ8Zb&#xA;h9u5oeGI0Uu8JOuj3F575l0CHRfMN7o9EuGs5xD9YkDNyDRiQNxZmoaHxOY2SHCSO5ycWTjAPe+l&#xA;/JGkabpXlXTbbTk4W7wRzE1JLvKodnJPdic2+KIERTps0jKRJVvNerPpWg3V5GQJgAkNf53PEH6K&#xA;1zC7W1Z0+nlMfVyHvP4tyNBpxlzCJ5dXz0Z5J3jvJFE97eM31VJdgiCpLmtd6bk9d6Z5/IUTEmox&#xA;+ojnI/2/Da3sByBrc8vIKt166xj6/HDNa1AkZAwZKmgahLd+46ZTh4Sf3ZlGfTz8mc7r1UYr4XlH&#xA;q28rmRrZgFdupjcVWviR0y6ExYI5T6dxHNMeoPR1woa3lU9CjD8MygmQ2Wab8VrEPoOQyT4QSjHy&#xA;CZAUFBmmJs2W52BXYqtdeSkfdlmKfDIFSld+RWNSerJ/yejGbmP1D4/7ktGTl8vvCLxZoW8lViY5&#xA;nKWlqgmuVG3NnrxTttt9OYsJSO4+qRqPkB1/HJrnV78hz81ZF1Mw1jjt4k/Yt2DbA12JXYH6Mxyc&#xA;N7mRPft937WQ466e5V0HVptI1Oz1HT/3MckjJJb/ALKyCtRttRuJUjMzHnyYp8QP7zHRB/nR7j8/&#xA;e0ZMUckeEj0y29xfRVtOlxbxTp9iVFda+DCoz0rHkE4iQ5EW8ROJjIg9ED5m1KfS/LeranAgknsb&#xA;O4uYoz0Z4YmdV+krkpGhbdpcQyZYQPKUgPmXxXr3nfzT5gmaTWNSnuixrwkc+kp/yYx+7X/YqM15&#xA;mS+tabSYMAqEBH4fpSoPM3SQfQRg9TmiV9W/9I/n/wCGGO6d3f6R/vwf8EMd+9d18Fxd28qzQ3Rh&#xA;lXdZI3KsPkV3x372E4CQqVEPof8A5xy89+Zdam1PR9Wu5tRgtIY5ra6m+N46sUaNpD8TctivLwOZ&#xA;OCZOzwftT2dhwiOTGBEyJBA++nuGZLxzsVdiry/8/f8Ajg6T/wAxp/5MSZha36R73O0H1H3IP/nH&#xA;5GMfmKdiP3l0i091aUn/AInh0nX3o1v8PueuZmOE7FXy/wDmV/5MfWv+YuP/AKhkzUan6y7nS/QH&#xA;0Z5U/wCUX0f/AJgbb/kyubTH9I9zqcn1H3oPz5YS3vli7SIcni4zcR3CGrf8LU5qu3sEsmllw8xv&#xA;8v2Od2VlEM8b5Hb5vArYTp6EcYDXOnhopICQpeNgOLKTtvxGcLlMTZP05KN9xHQ/P+16uNigOcfu&#xA;Rd9OzaXctJG0LMjRhGIJqw4r9knqT45j4MYGaIBvcH8W25Jeg2KWRoUuLhSSSsduKnvQsP8APr88&#xA;ujKxA/0pfo/HIIiKJ9wVJf7p/wDVP6szWRSyw1BbVgsoPpMAyMN+oyvNDiBj1a8cqATP9MWH+/Pw&#xA;OYA0c/Ju4w79MWP+/PwP9Ml+SPejjDhq9if92D8cfyUu9PGGzq1iBX1BiNFLvXjCVy3Xr3IcAiPl&#xA;GiE7VPqqx/AZsYcwPf8AcWiZ+8femj/ZPyOLag7yqy6hJSojNs7f6qHkf5ew8cxMO4gO/jHz28/u&#xA;DVPnI+5MZ55kUejC0xYVFCqgbjqWPvmFjhE/VLh+bfKRHIWg7O2luby2sIx6twsxnnCVIEkhPCME&#xA;135N+GZpBIJA+sCER1PLf7PtcewOf8PqL6Q0+1+qWFta9fq8SRVH+QoX+GemafF4eOMP5sQPkHh8&#xA;0+OZl3klVmhhnheGZFlhlUpJG4DKysKFWB2IIy5gCQbHN8N+cdKtLLzlrthZL6Fpaahdw28QJYJH&#xA;HOyoo5VOyjxzCmBb1Wk9oc8ABKpfj5fYlBtJOzKfmMhQdnD2lB+qH6f1NLZzE0HD8caDcPaXF/NP&#xA;yH61QWM/dkH34OEIPtPDpE/j4q76SUQO01fYLT9ZOTOMAOFP2pyHaMAPi+mv+ca9K0+28hPfwwhb&#xA;y9uZFup9yziE0jBr2XkemZOEAB5rtHX5dTO8huuQ6B6zlrrnYq7FXlH/ADkBIRpmjR8qcp5m4+PG&#xA;Eiv0cswtbyDn6D6ikf5OS+c5LbWjoMWnIjXQad795mIYljRFgFG2rvyyOm4t6rmnVcO13yek/U/z&#xA;PkUc9T0iBgekVncPUe5e4/hmVWTvHycW8fcfn+xp4fzTjFIrvRLigG8lvdwk+NSs0gH3Y1k8lvH5&#xA;vA/Po1EfmLqn6UggS/DQmYWrs8Ku0Fv8SGQI5DKe46n2rms1F8Zvm7TTVwCuT6P8myGTyhoch2L6&#xA;fasQPeBTm1xfSPc6nL9Z95TggEUPTJtbzLzZ+Ub3dz9a0SSJBUsLScvH6ZO59GWMFgDQfCRT3ptn&#xA;M6r2f9RlhPDxc49Px+Ld7p+2NgMouuvVgOt+VfMHl+ezbVoCUuHpBL63rorpSu21Godts0mt0GXB&#xA;G5AAG+QH6HbaXV48x9JJrvQ5H+m3e37EH0/E3sM1WI+mH9aX3Bzv4j8P0qxSg+LavbvmT4nF9LKl&#xA;jaborcmkjYs+7emOIqa+4/mycOOIA4jt+z9TUcYPRo6ZoZ/3TJX/AFvGvv75ISl3o8IdzX6N0X/f&#xA;D/8ABH5+OPFLvXwh3O/R2jbfuX2/yj7e/tjcu/8AG/618IdzY03RKgmGSopT4q9Ke/8AkjEmXf8A&#xA;jf8AWvhDuXJY6VCfUt0IkAoC4qRUU2NTTITEpdSyhADo26HgxG4ocAyi6OxbKUYyVvtQYChCR708&#xA;Fb2H6zmFPfHjHv8Av9/6mMfql8Ex8v8A5feadasIb2xhEOnzsyx+pdMiEK3Bm4LzcLVTnQafsrNm&#xA;iJjh36kC/wAfB1efX4sUjE3t0FvTPJP5bQaGyXeoSR3F8m8UcQb0YmOxYFvikb/KYfR3ze9n9ixw&#xA;y8SZ48n2D3Oo1vahyR4IDhh9pZvm8dS7FXxT+YULQ/mD5l50p+kbyQnsFa4Yiv35h5Bu5mM7BJXg&#xA;njCmSNkDAMpZSAQRUEVyum22o/tYpVcKETcsvpFa/Eo5MvcDxIyyXJqjzfTn/OPtnJb/AJY2DuQf&#xA;rM1zKoHYCZo6H6Y8vxjZx8h3ej5Y1uxV2KvJf+cgpEFhoyH7RluHHyWIA/8AEswddyDn6DmWP/lB&#xA;5Il1XSNRuLXXdT0iWG7MQSymCROAgIMkZB5EV8cjp8dg7kbstTloiwDs9A/wJ53T4YfPV4qeElrB&#xA;I1f9YkZk+FL+c43iw/mho/l75rnFLzzxqTDofq0cVsadt15b174+FLrIr40ekQ8T886F+ivzA1W1&#xA;a5ur/wCr/V2S8vZPVnfnFAeTvReVOZUbdKDNfnjUiHZaeVxB5PoPy5aS3f5d6Raxyek82lWqB6Vp&#xA;WBAfv6Zs8X0D3B1Ob6z7ywO8t7zTruS1kfjLEd/Teor1BFMualq6lqKfZupl+UjD+OKpX5p1LUbm&#xA;yt47m6lnjFyjBZHZwCFYVHInxzn/AGk/xcf1v0Sdz2H/AHx/q/pCSQSImtTcgCvpRkqdgSCw8M4i&#xA;IJwx2v1H9D1H8Z9w/Smhu7T/AHyv3/2ZD/MZcJ71purbtCn34+r+YtebX1qD/fUeR9X81NebX1mL&#xA;/fcf4/1xqf8AN+9a83fWYv8Afcf3H+uNT/m/etebvrMX++4/x/rjU/5v3rXmuF1b94kPyNMI4v5i&#xA;15rvrdpT+5X78Nf0EUe9J4ypvNSKgAFE6f6re2TzXwwvvP6GMfql8HuP5cADyTpVP99t/wAnGz0T&#xA;sj/FofH7y8b2l/fy/HRkmbFwXYq7FXxh+bcgTz95lH89xKo+frA/wzGlzcmPIPrPyIAPJHl4DoNM&#xA;sx/07pmRHk48uaeYUOxV8k/nwyr+beshKgva24lrTc/V0O30AZRk5uRj5PfPyP8A/JXaJ8rn/qKl&#xA;yyHJqnzZHrHmfT9Kk9OdJXkIqAibb/5TcV+7JsEll/Me2FfSsXfw5OF/UGw0qg/5jzmvCxUeFZCf&#xA;+NRjSvOfzd8yz6zFpiywrEIRckFSTXkijv8ALMDXcg7DQcyrfk95qvNK0O9H1ZH9e65uGLKQ3pJU&#xA;fjlmjHpPva9afUPc9Ft/zDkkfidNZz/xW5J+7jmXThshh8w6a8KSTM1qzUBSdGjIJ7VYUP0HArwH&#xA;805Ul/MLWZImDxtDaFXXcEfuAd/mKZq9V9Z9zttJ9A970/TPMw0zyHoltbmt9LYw0PURrxpyPv4Z&#xA;sMH0D3Ouz/WfexdmZmLMSzMasx3JJ7nLmlrFUr8wf7zW/wDzEJ+ps5/2k/xcf1v0Sdz2H/fH+r+k&#xA;JHeW8cl3dOSwdUg4spKkcmYHpnFYJkQgO8y/Q9OR6j8P0rtI0U3tilw00oYlgQHI6EjuMyM8pxmR&#xA;ECmMCCLNov8Awwf9+zf8jMo8TL3RZenvLv8ADLf78n/5GDB4uX+aPx8U+nvaPlo/zz/8jBj42X+a&#xA;Px8VqPe7/DZ/nn/5GY+Nl/mj8fFaj3uHllv9+T/8jBj4uX+aPx8V9PeuHlg/79mH/PT+zJeJl7oo&#xA;9PeUs1jTWsZoUWaU+okjH4yfsCo7ZkYSZA8QFimEjuKVbOJIpb9ErT0ozUmpqVYnc5h5pGUYE95+&#xA;9nAVKXwe7flz/wAoTpX/ABjb/k42eidkf4tD4/eXju0v7+X46Jjq/mPTNKZUunYyuvJYkWrFa0r2&#xA;HbxzYuCkU35jWoP7mydx25uE/UHw0qFb8xron4LJAPdyf4DGlfL/AOaV0115y1e6dBG08xcoOg5G&#xA;vfMafNyYcn0N5M/MC/h8oaHEbWJvT0+1UNVhUCFB75kRGzjy5p/F+Y+/72w28Vk/gVw0hPNE81af&#xA;q0xgiSSOcKWKOKigpWjAnx74FfLf5/8A/k29Y/4w2n/JiLMfJzcjHyfQ35JoU/LDQwQR8M5ofe5l&#xA;P8cuhyap82bkAih3ByTBK9R8s6LfqfVt1jkPSaIBHr47dfpxVjreT5NOlaT6uNTtW6hOKzKPZGDK&#xA;30b4bV55+a40U3WhrpwZGb60LqGRAjqR6IUMAo8TmBrecXP0PKX473r7+TtBNWjhaGU9JYpHVh8h&#xA;Xj+GZ1uAsXQL22BEE0V5H2ivFJP/AAaH9aYVVIrs2ZrcaQ1v4zWyrMnz+AB/+FwKxL839S02+8jT&#xA;fV7lHkiubdjFWj/3oXdTRh9rwzG1Y9DlaM/vAhdK8r3Wo+UtF1Cw/eP9TijlhYhTWMcaqTt2y3Af&#xA;QPc1ages+9BSaHrMbcWsZ61oKRsQT7EDLmlCzQTwOY542ikHVHUqfuOKpR5g/wB5rf8A5iE/U2c/&#xA;7Sf4uP636JO57D/vj/V/SEjvXMb6hIBUpHAafJmOcThFxh75fcHpyalL3D9KV2FzcXNx9XsIp1Zj&#xA;UxwylUUE7k0FFFTm5xaeeU0AJH3OJlzQxiyaHvTn9DeYP55f+kpv+acz/wCRc382Dg/yrh75O/Q3&#xA;mD+eX/pKb/mnH+Rc382C/wAq4e+Tv0N5g/nl/wCkpv8AmnH+Rc382C/yrh75O/Q3mD+eX/pKb/mn&#xA;H+Rc382C/wAq4e+Tv0N5g/nl/wCkpv8AmnH+Rc382C/yrh75NPpHmBVLBpmoCeIujU+wquA9i5q+&#xA;mCR2rh75JFLqBEsiTRSm5AMf79yzJy67MBTNbPHKPpI4fhTsITidxv8AFPYRS61AHqI4gf8AgDmn&#xA;n9GP3n73Jj9Uvg9y/Ln/AJQnSv8AjG3/ACcbPRuyP8Wh8fvLxvaX9/L8dE9u7Cyu0CXUCTKOnNQ1&#xA;PlXpmxcFItQ8h6PcVa2LWkh/l+NP+BY/qOG1YJ538iaomlXFmlwALpCsVzH9oFaN8SV5U2+KnbAd&#xA;wkbF4Hp3krWvMPmyDyzBPHNfszpLcBiYwsAZnILcTsq0A232zG4bNOQZULfRVp+X+vWtrDbRW6+l&#xA;AixpWRPsoAo7+AzKDjFXTyL5gbrHGnzkX+FcbQhrjRtZ0e5WWdZbeMHe7g+Kg9iCv3EjFXl353eU&#xA;J57gec4NThvoWEVreRMDHcBgCsbmOlKUAU7/AH5Tlj1b8UujOf8AnHjy3fWdhN5ovdWSS01NPqln&#xA;YB2PD05OI9TnQcxwoiivwn3w4x1RkPR7XljU7FXYqx7zP/gf6zY/4i+qfWfVH1H6xx58v18OnKvw&#xA;9K9sqycG3E24uPfhZDlrU7FXYqkvmj/CX6Pl/wARfVfqnH4vrHHl7cP2+Vfs8d69Mhk4eH1cmePi&#xA;4hw80fpH6L/Rlt+ivT/R3pr9V9GnDh2pTDGq25Indm+aLyTFCan+ivq/+5L0fQ7etxpX25d/liry&#xA;f8wf8K/Vov0T6vr/AFhKU/uO9ft/H/DNF7RV+W3/AJ36C7fsS/GNfzf0hirfoP1rj9K/WfqfBPrn&#xA;1Xj63CrcPT5/D9rr/XOK0HD4kPE+i5cqu6/sel1HFwy4Pq258np2hf8AKovqC/on0Pqtf2fX5cv8&#xA;vn8fL/W3z0rS+Fwfuq4fx8Xi9T4nF+85pj/yDv8A4r/5LZkuO7/kHf8AxX/yWxV3/IO/+K/+S2Ku&#xA;/wCQd/8AFf8AyWxV3/IO/wDiv/ktirv+Qd/8V/8AJbFWHfmB/wAqk+rj6x631yg+r/Uq+t17er+z&#xA;+H05re0fA4f3nPy+r8e/Z2Gg8a/3fLz5fj3bsOf0ed56fL1/TX1OVaU4njTt49M82l/DX0Wa7+fV&#xA;7GPX+d1e5eQ/qv8Ag/SvqvL0fQH26cuVTz6f5daZ6X2Zw/l4cPKv7fteK7Qvx5XztPsz3Ddir50/&#xA;5yc+pfp/S/S+sfpL6r+8+z9X9H1H4/5Xqcq17UplOVvxL/8AnGn/AAj+l7z1fW/xZ6Len63H0fq9&#xA;Rz9Cm/Ppy5dvs7cscVfFGW/g+iMuaXYq5uPE8qcab16UxV5f+aH/ACrP9AX/AOk+fpcP3v1DjXnU&#xA;cONf3fLnSlO/XBLlumN3s+ZrD6j+l4fX+tfoj1hz9Lh9Z9Gv7Nfg5U+jMVyn/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:4b3ad161-0d18-4d2d-b79f-e521702bc245</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4b3ad161-0d18-4d2d-b79f-e521702bc245</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0abd6c6f-0957-4f16-9d50-1f815116a1f8</stRef:instanceID>
            <stRef:documentID>xmp.did:0abd6c6f-0957-4f16-9d50-1f815116a1f8</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:980cad49-69b2-431d-a880-1d448d1adc35</stEvt:instanceID>
                  <stEvt:when>2014-07-23T16:30:20+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01e003ec-13fc-418d-ad4b-ba036916aa09</stEvt:instanceID>
                  <stEvt:when>2014-07-23T16:40:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:663f5734-ee60-4d68-991a-11f1551cab46</stEvt:instanceID>
                  <stEvt:when>2014-10-10T00:42:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b0c5aa5e-2930-495d-884f-c556cacd291b</stEvt:instanceID>
                  <stEvt:when>2014-10-11T13:59:38+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c531f232-34cd-4594-9422-0d2e05318f22</stEvt:instanceID>
                  <stEvt:when>2014-10-12T02:55:48+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2d6f68e6-9197-4678-b847-1717de89402a</stEvt:instanceID>
                  <stEvt:when>2014-10-13T16:34:55+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:93a32825-fc09-4272-89c0-f7b4dc40f0a3</stEvt:instanceID>
                  <stEvt:when>2014-10-13T18:01:08+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0817cd99-c3a5-472e-b2bb-f76850c1647c</stEvt:instanceID>
                  <stEvt:when>2014-10-14T00:05:06+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:397744b5-fe3f-40dd-8b48-21c4c7e65dc8</stEvt:instanceID>
                  <stEvt:when>2014-10-16T13:48:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c1ec0c11-206e-4f82-ae23-420d55b23bdc</stEvt:instanceID>
                  <stEvt:when>2014-10-16T17:55:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7db6a9de-fb35-46dc-8ff6-dc5730d9dc17</stEvt:instanceID>
                  <stEvt:when>2014-11-17T23:30:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ceb83d10-60a7-4165-8e66-fa6b81e8006d</stEvt:instanceID>
                  <stEvt:when>2014-11-19T00:00:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7740e283-f0b1-478c-bcb1-97bbdbef4d4b</stEvt:instanceID>
                  <stEvt:when>2014-11-19T00:02:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7a43fb67-9647-488e-9c85-84b9cfd6e9d5</stEvt:instanceID>
                  <stEvt:when>2014-12-06T02:19:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9ea2f62d-ff04-4804-83c4-b5026be0dabc</stEvt:instanceID>
                  <stEvt:when>2014-12-06T02:20:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3592bccb-74a5-431b-a66e-74d7db305f5d</stEvt:instanceID>
                  <stEvt:when>2014-12-14T01:16:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:df5ee626-e990-4580-ad5f-a289caf7d8cd</stEvt:instanceID>
                  <stEvt:when>2014-12-27T16:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72570203-34de-4f4f-a2b8-bb816ce188c9</stEvt:instanceID>
                  <stEvt:when>2014-12-28T14:10:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:696689e5-6295-47af-88b8-4b3862567c4f</stEvt:instanceID>
                  <stEvt:when>2014-12-28T14:12:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9ccb4093-5a3b-454f-a550-4ca7643087b0</stEvt:instanceID>
                  <stEvt:when>2015-01-09T00:40:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:def81a85-73c1-4ce7-ad2c-ff3e60301274</stEvt:instanceID>
                  <stEvt:when>2015-01-10T00:06:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f24577a2-d74e-4cab-8420-f08c6798ac16</stEvt:instanceID>
                  <stEvt:when>2015-01-12T01:26:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d0e387c8-982f-4c26-a7bd-56e8108b9a6c</stEvt:instanceID>
                  <stEvt:when>2015-01-12T21:57:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0abd6c6f-0957-4f16-9d50-1f815116a1f8</stEvt:instanceID>
                  <stEvt:when>2015-02-09T11:26:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4b3ad161-0d18-4d2d-b79f-e521702bc245</stEvt:instanceID>
                  <stEvt:when>2015-02-09T13:11:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>550.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -329.001 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 329.001 li
466.932 329.001 li
466.932 0 li
cp
clp
465.449 321.957 mo
464.655 320.821 462.978 320.4 461.706 321.013 cv
461.649 321.04 458.27 325.031 448.373 321.095 cv
447.26 320.653 439.063 316.853 433.656 314.597 cv
435.138 314.211 437.166 313.438 437.914 312.998 cv
438.666 313.3 438.536 313.247 438.914 313.398 cv
443.024 315.032 445.872 315.866 448.583 315.835 cv
454.615 315.764 457.168 313.316 457.33 313.137 cv
458.221 312.146 457.964 310.671 456.757 309.841 cv
455.549 309.012 453.847 309.142 452.956 310.133 cv
452.928 310.165 447.294 312.092 440.246 310.151 cv
438.778 309.655 434.542 307.957 431.466 306.514 cv
433.02 305.185 433.065 304.375 433.044 304.127 cv
432.73 300.517 411.941 297.831 386.611 298.128 cv
361.28 298.424 341 301.592 341.314 305.202 cv
341.452 306.796 345.589 308.21 352.342 309.267 cv
356.229 310.722 361.057 312.318 361.477 312.513 cv
363.067 313.255 365.385 313.926 368.292 314.51 cv
371.281 316.244 376.718 319.39 378.253 320.233 cv
378.776 320.521 379.638 321.096 379.524 321.717 cv
379.431 322.225 378.836 322.694 378.168 322.785 cv
376.356 323.03 374.598 321.837 373.778 321.367 cv
372.5 320.632 370.701 320.58 369.918 321.637 cv
369.134 322.695 369.665 324.024 370.777 325.241 cv
371.138 325.637 372.862 327.497 378.163 327.492 cv
378.551 327.492 378.94 327.461 379.326 327.409 cv
382.169 327.026 384.458 325.099 384.894 322.72 cv
385.103 321.578 383.079 316.332 382.481 315.282 cv
382.485 315.282 385.59 316.12 390.084 316.681 cv
394.177 316.827 398.566 316.885 403.228 316.83 cv
410.941 316.74 418.138 316.359 424.314 315.771 cv
430.112 318.194 444.617 324.635 446.35 325.324 cv
451.606 327.414 456.024 327.998 459.411 327.958 cv
464.135 327.903 464.579 326.073 464.727 325.924 cv
465.756 324.888 466.243 323.094 465.449 321.957 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.682353 .686275 .698039 rgb
f
395.459 257.579 mo
395.459 257.579 394.807 273.148 394.448 281.732 cv
393.749 298.411 395.891 308.603 391.437 313.382 cv
387.809 317.276 382.405 315.567 380.263 314.748 cv
378.411 314.04 376.93 312.389 376.642 311.444 cv
376.439 310.777 376.395 310.003 376.565 309.244 cv
376.941 307.557 379.246 305.799 381.878 308.334 cv
382.809 309.232 384.045 309.788 385.867 308.958 cv
389.74 307.192 388.38 296.952 389.205 279.04 cv
389.769 266.806 390.243 256.502 390.243 256.502 cv
395.459 257.579 li
cp
.286275 .215686 .168627 rgb
f
377.479 311.138 mo
377.296 311.099 377.139 310.924 377.114 310.715 cv
376.978 309.574 377.454 308.536 378.298 308.135 cv
378.866 307.866 380.078 307.663 381.824 309.345 cv
382.599 310.093 384.842 310.727 386.585 310.015 cv
389.466 308.843 389.556 302.847 389.704 293.033 cv
389.76 289.332 389.823 285.163 390.038 280.426 cv
391.115 256.682 li
391.124 256.469 391.3 256.331 391.508 256.374 cv
391.716 256.417 391.876 256.625 391.867 256.837 cv
390.804 280.587 li
390.592 285.313 390.532 289.476 390.478 293.17 cv
390.327 303.642 390.242 309.482 386.95 310.822 cv
385.007 311.615 382.439 310.995 381.354 309.949 cv
380.329 308.961 379.384 308.595 378.692 308.926 cv
378.126 309.195 377.797 309.934 377.891 310.723 cv
377.92 310.96 377.769 311.15 377.554 311.146 cv
377.529 311.148 377.504 311.144 377.479 311.138 cv
cp
.368627 .309804 .282353 rgb
f
395.459 257.579 mo
395.459 257.579 395.202 273.257 395.06 281.903 cv
394.785 298.703 397.172 308.967 392.861 313.789 cv
389.348 317.718 384.003 315.783 381.775 315.182 cv
379.553 314.582 378.905 314.101 377.496 312.794 cv
376.98 312.316 377.152 311.952 380.72 312.786 cv
382.702 313.25 386.089 313.016 388.423 311.182 cv
392.108 308.285 390.816 297.239 391.443 279.199 cv
391.88 266.65 392.479 256.502 392.479 256.502 cv
395.459 257.579 li
cp
.258824 .192157 .145098 rgb
f
441.9 257.579 mo
441.9 257.579 442.552 273.148 442.912 281.732 cv
443.61 298.411 441.469 308.603 445.923 313.382 cv
449.551 317.276 454.954 315.567 457.097 314.748 cv
458.948 314.04 460.43 312.389 460.718 311.444 cv
460.921 310.777 460.964 310.003 460.795 309.244 cv
460.419 307.557 458.113 305.799 455.482 308.334 cv
454.55 309.232 453.314 309.788 451.492 308.958 cv
447.619 307.192 448.979 296.952 448.154 279.04 cv
447.591 266.806 447.116 256.502 447.116 256.502 cv
441.9 257.579 li
cp
.286275 .215686 .168627 rgb
f
459.88 311.138 mo
460.064 311.099 460.22 310.924 460.245 310.715 cv
460.381 309.574 459.905 308.536 459.062 308.135 cv
458.494 307.866 457.282 307.663 455.536 309.345 cv
454.76 310.093 452.518 310.727 450.775 310.015 cv
447.894 308.843 447.804 302.847 447.656 293.033 cv
447.6 289.332 447.537 285.163 447.322 280.426 cv
446.245 256.682 li
446.235 256.469 446.059 256.331 445.852 256.374 cv
445.644 256.417 445.484 256.625 445.493 256.837 cv
446.556 280.587 li
446.768 285.313 446.828 289.476 446.881 293.17 cv
447.033 303.642 447.118 309.482 450.409 310.822 cv
452.352 311.615 454.921 310.995 456.005 309.949 cv
457.03 308.961 457.975 308.595 458.667 308.926 cv
459.234 309.195 459.563 309.934 459.468 310.723 cv
459.44 310.96 459.591 311.15 459.806 311.146 cv
459.83 311.148 459.856 311.144 459.88 311.138 cv
cp
.368627 .309804 .282353 rgb
f
441.9 257.579 mo
441.9 257.579 442.157 273.257 442.299 281.903 cv
442.575 298.703 440.187 308.967 444.499 313.789 cv
448.011 317.718 453.357 315.783 455.584 315.182 cv
457.807 314.582 458.455 314.101 459.863 312.794 cv
460.379 312.316 460.207 311.952 456.64 312.786 cv
454.658 313.25 451.271 313.016 448.937 311.182 cv
445.252 308.285 446.544 297.239 445.916 279.199 cv
445.479 266.65 444.881 256.502 444.881 256.502 cv
441.9 257.579 li
cp
.258824 .192157 .145098 rgb
f
387.934 267.948 mo
387.934 267.948 388.353 284.056 388.58 292.77 cv
389.013 309.371 391.884 318.779 387.684 324.261 cv
384.286 328.697 378.698 328.186 376.468 327.85 cv
374.538 327.559 372.905 326.295 372.537 325.455 cv
372.277 324.862 372.171 324.133 372.282 323.373 cv
372.528 321.682 374.35 320.992 377.613 322.208 cv
378.751 322.633 379.926 322.353 381.716 321.184 cv
385.53 318.693 383.404 309.065 382.938 291.178 cv
382.612 278.671 382.332 267.948 382.332 267.948 cv
387.934 267.948 li
cp
f
387.934 267.948 mo
387.934 267.948 387.934 284.029 387.934 292.728 cv
387.934 309.302 390.559 318.693 386.217 324.166 cv
382.703 328.594 377.128 328.085 374.907 327.749 cv
372.984 327.458 371.385 326.197 371.039 325.358 cv
370.794 324.766 370.707 324.038 370.837 323.28 cv
371.128 321.592 373.392 319.434 376.219 321.319 cv
377.218 321.984 378.508 322.261 380.329 321.094 cv
384.207 318.608 382.332 308.996 382.332 291.139 cv
382.332 278.653 382.332 267.948 382.332 267.948 cv
387.934 267.948 li
cp
.317647 .239216 .180392 rgb
f
371.876 324.896 mo
371.687 324.896 371.517 324.762 371.48 324.568 cv
371.278 323.509 371.707 322.422 372.548 321.865 cv
373.114 321.491 374.343 321.047 376.216 322.296 cv
377.047 322.849 379.368 322.993 381.113 321.956 cv
384.001 320.244 383.818 314.466 383.515 304.893 cv
383.399 301.245 383.269 297.111 383.269 292.35 cv
383.269 267.948 li
383.269 267.726 383.449 267.544 383.672 267.544 cv
383.896 267.544 384.076 267.726 384.076 267.948 cv
384.076 292.35 li
384.076 297.098 384.207 301.226 384.323 304.866 cv
384.646 315.073 384.824 320.695 381.525 322.651 cv
379.581 323.804 376.929 323.741 375.768 322.968 cv
374.669 322.236 373.684 322.081 372.994 322.539 cv
372.43 322.913 372.134 323.684 372.274 324.416 cv
372.316 324.635 372.172 324.847 371.953 324.888 cv
371.927 324.894 371.901 324.896 371.876 324.896 cv
cp
.388235 .329412 .294118 rgb
f
449.776 267.948 mo
449.776 267.948 449.356 284.056 449.129 292.77 cv
448.696 309.371 445.825 318.779 450.025 324.261 cv
453.423 328.697 459.011 328.186 461.241 327.85 cv
463.171 327.559 464.804 326.295 465.172 325.455 cv
465.432 324.862 465.538 324.133 465.427 323.373 cv
465.181 321.682 463.36 320.992 460.096 322.208 cv
458.958 322.633 457.783 322.353 455.993 321.184 cv
452.18 318.693 454.305 309.065 454.771 291.178 cv
455.097 278.671 455.377 267.948 455.377 267.948 cv
449.776 267.948 li
cp
.258824 .192157 .145098 rgb
f
449.776 267.948 mo
449.776 267.948 449.776 284.029 449.776 292.728 cv
449.776 309.302 447.15 318.693 451.492 324.166 cv
455.006 328.594 460.581 328.085 462.803 327.749 cv
464.725 327.458 466.325 326.197 466.671 325.358 cv
466.915 324.766 467.002 324.038 466.872 323.28 cv
466.581 321.592 464.317 319.434 461.49 321.319 cv
460.491 321.984 459.201 322.261 457.38 321.094 cv
453.502 318.608 455.377 308.996 455.377 291.139 cv
455.377 278.653 455.377 267.948 455.377 267.948 cv
449.776 267.948 li
cp
.317647 .239216 .180392 rgb
f
465.833 324.896 mo
466.022 324.896 466.192 324.762 466.229 324.568 cv
466.431 323.509 466.002 322.422 465.162 321.865 cv
464.595 321.491 463.366 321.047 461.493 322.296 cv
460.662 322.849 458.341 322.993 456.596 321.956 cv
453.708 320.244 453.891 314.466 454.194 304.893 cv
454.31 301.245 454.441 297.111 454.441 292.35 cv
454.441 267.948 li
454.441 267.726 454.26 267.544 454.037 267.544 cv
453.813 267.544 453.633 267.726 453.633 267.948 cv
453.633 292.35 li
453.633 297.098 453.502 301.226 453.387 304.866 cv
453.063 315.073 452.886 320.695 456.184 322.651 cv
458.128 323.804 460.78 323.741 461.941 322.968 cv
463.04 322.236 464.025 322.081 464.715 322.539 cv
465.279 322.913 465.575 323.684 465.435 324.416 cv
465.394 324.635 465.537 324.847 465.756 324.888 cv
465.782 324.894 465.808 324.896 465.833 324.896 cv
cp
.388235 .329412 .294118 rgb
f
381.621 250.18 mo
381.621 270.288 li
381.621 274.099 398.379 277.188 419.052 277.188 cv
439.725 277.188 456.484 274.099 456.484 270.288 cv
456.484 250.18 li
381.621 250.18 li
cp
.317647 .239216 .180392 rgb
f
389.195 274.449 mo
396.029 276.113 406.858 277.188 419.052 277.188 cv
433.849 277.188 446.638 275.605 452.714 273.308 cv
452.714 250.18 li
389.195 250.18 li
389.195 274.449 li
cp
.368627 .258824 .184314 rgb
f
419.052 277.188 mo
432.663 277.188 444.559 275.847 451.11 273.845 cv
451.11 250.18 li
419.052 250.18 li
419.052 250.18 419.052 274.086 419.052 277.188 cv
cp
.388235 .282353 .211765 rgb
f
438.98 276.124 mo
441.906 275.783 444.568 275.372 446.872 274.899 cv
446.872 250.18 li
438.98 250.18 li
438.98 276.124 li
cp
.4 .341176 .301961 rgb
f
460.704 243.995 mo
460.704 241.602 459.675 241.373 459.675 239.871 cv
459.675 235.316 441.532 231.623 419.15 231.623 cv
396.768 231.623 378.625 235.316 378.625 239.871 cv
378.625 241.373 377.596 240.602 377.596 243.995 cv
377.596 247.387 378.625 246.615 378.625 248.118 cv
378.625 252.673 396.768 256.366 419.15 256.366 cv
441.532 256.366 459.675 252.673 459.675 248.118 cv
459.675 246.615 460.704 246.387 460.704 243.995 cv
cp
.768627 0 .113725 rgb
f
380.358 239.016 mo
380.358 237.478 397.726 232.152 419.15 232.152 cv
430.028 232.152 439.859 233.375 446.903 234.856 cv
453.733 236.293 440.574 235.482 419.15 235.482 cv
386.596 235.482 380.358 240.454 380.358 239.016 cv
cp
.858824 .027451 .227451 rgb
f
409.56 254.063 mo
387.074 252.784 381.089 249.148 378.551 247.534 cv
378.597 247.686 378.625 247.872 378.625 248.118 cv
378.625 252.673 396.768 256.366 419.15 256.366 cv
439.092 256.366 455.669 253.434 459.047 249.574 cv
453.992 252.332 434.305 255.471 409.56 254.063 cv
cp
.607843 .0156863 .156863 rgb
f
425.986 249.493 mo
423.624 249.596 421.189 249.774 418.702 249.776 cv
396.499 249.796 378.607 245.252 378.607 240.643 cv
380.366 242.114 382.959 244.122 395.826 246.691 cv
401.262 247.777 416.158 249.241 425.986 249.493 cv
cp
.666667 .00784314 .133333 rgb
f
419.15 244.186 mo
401.068 244.186 385.474 243.518 391.225 244.676 cv
396.306 245.698 407.734 246.691 419.15 246.691 cv
441 246.691 458.712 244.716 458.712 240.645 cv
458.712 240.548 453.724 244.186 419.15 244.186 cv
cp
.858824 .027451 .227451 rgb
f
192.281 289.366 mo
184.945 280.509 li
130.29 277.388 li
129.245 277.388 126.606 281.964 128.145 283.309 cv
128.145 283.309 135.335 289.366 136.38 289.366 cv
136.789 289.366 li
135.935 289.72 135.149 290.27 134.495 291.002 cv
122.945 303.918 li
120.931 306.17 119.145 311.999 126.768 315.859 cv
136.716 320.897 147.036 318.82 147.036 318.82 cv
175.59 328.8 li
177.005 326.507 li
177.005 289.366 li
192.281 289.366 li
cp
.682353 .686275 .698039 rgb
f
189.044 314.89 mo
189.044 324.052 li
294.996 324.052 li
311.091 328.661 li
311.091 314.89 li
189.044 314.89 li
cp
f
293.92 271.185 mo
198.9 271.185 li
198.9 203.48 li
198.9 198.852 202.653 195.099 207.281 195.099 cv
285.539 195.099 li
290.168 195.099 293.92 198.852 293.92 203.48 cv
293.92 271.185 li
cp
.807843 .435294 .0352941 rgb
f
291.863 271.185 mo
200.958 271.185 li
200.958 204.965 li
200.958 200.438 204.623 196.768 209.144 196.768 cv
283.676 196.768 li
288.197 196.768 291.863 200.438 291.863 204.965 cv
291.863 271.185 li
cp
.94902 .556863 0 rgb
f
280.531 262.321 mo
212.289 262.321 li
209.169 262.321 206.639 259.875 206.639 256.857 cv
206.639 207.837 li
206.639 204.113 210.064 201.093 214.289 201.093 cv
278.531 201.093 li
282.756 201.093 286.182 204.113 286.182 207.837 cv
286.182 256.857 li
286.182 259.875 283.652 262.321 280.531 262.321 cv
cp
.756863 .396078 .0313726 rgb
f
247.536 259.296 mo
206.639 259.296 207.483 264.606 207.483 207.504 cv
207.483 203.963 210.872 201.093 215.053 201.093 cv
277.767 201.093 li
281.948 201.093 285.337 203.963 285.337 207.504 cv
285.337 267.642 285.337 259.296 247.536 259.296 cv
cp
.898039 .501961 .145098 rgb
f
246.288 255.948 mo
222.499 255.948 215.545 261.136 215.545 250.637 cv
215.545 243.572 224.143 220.518 246.661 220.518 cv
269.178 220.518 277.758 243.369 277.758 250.637 cv
277.758 259.741 269.579 255.948 246.288 255.948 cv
cp
.94902 .556863 0 rgb
f
261.139 203.369 mo
216.753 203.369 212.074 202.459 212.074 206.556 cv
212.074 221.443 218.359 206.783 250.849 206.783 cv
268.64 206.783 279.935 221.79 279.935 205.376 cv
279.935 202.385 265.647 203.369 261.139 203.369 cv
cp
.968627 .631373 .223529 rgb
f
212.273 199.94 mo
208.066 199.94 204.643 202.946 204.643 206.639 cv
204.643 258.572 li
204.643 261.554 207.223 263.979 210.394 263.979 cv
282.816 263.979 li
285.987 263.979 288.567 261.554 288.567 258.572 cv
288.567 206.639 li
288.567 202.946 285.145 199.94 280.938 199.94 cv
212.273 199.94 li
cp
282.816 264.89 mo
210.394 264.89 li
206.708 264.89 203.708 262.056 203.708 258.572 cv
203.708 206.639 li
203.708 202.443 207.55 199.03 212.273 199.03 cv
280.938 199.03 li
285.66 199.03 289.502 202.443 289.502 206.639 cv
289.502 258.572 li
289.502 262.056 286.503 264.89 282.816 264.89 cv
cp
.737255 .4 0 rgb
f
212.74 200.623 mo
212.273 200.623 li
211.627 200.623 211.102 200.114 211.102 199.485 cv
211.102 198.857 211.622 198.347 212.268 198.347 cv
212.74 198.347 li
213.385 198.347 213.908 198.857 213.908 199.485 cv
213.908 200.114 213.385 200.623 212.74 200.623 cv
cp
216.517 200.623 mo
216.045 200.623 li
215.4 200.623 214.876 200.114 214.876 199.485 cv
214.876 198.857 215.4 198.347 216.045 198.347 cv
216.517 198.347 li
217.163 198.347 217.686 198.857 217.686 199.485 cv
217.686 200.114 217.163 200.623 216.517 200.623 cv
cp
220.294 200.623 mo
219.822 200.623 li
219.177 200.623 218.653 200.114 218.653 199.485 cv
218.653 198.857 219.177 198.347 219.822 198.347 cv
220.294 198.347 li
220.94 198.347 221.463 198.857 221.463 199.485 cv
221.463 200.114 220.94 200.623 220.294 200.623 cv
cp
224.071 200.623 mo
223.599 200.623 li
222.954 200.623 222.431 200.114 222.431 199.485 cv
222.431 198.857 222.954 198.347 223.599 198.347 cv
224.071 198.347 li
224.717 198.347 225.24 198.857 225.24 199.485 cv
225.24 200.114 224.717 200.623 224.071 200.623 cv
cp
227.849 200.623 mo
227.376 200.623 li
226.731 200.623 226.208 200.114 226.208 199.485 cv
226.208 198.857 226.731 198.347 227.376 198.347 cv
227.849 198.347 li
228.494 198.347 229.017 198.857 229.017 199.485 cv
229.017 200.114 228.494 200.623 227.849 200.623 cv
cp
231.626 200.623 mo
231.154 200.623 li
230.508 200.623 229.985 200.114 229.985 199.485 cv
229.985 198.857 230.508 198.347 231.154 198.347 cv
231.626 198.347 li
232.271 198.347 232.794 198.857 232.794 199.485 cv
232.794 200.114 232.271 200.623 231.626 200.623 cv
cp
235.403 200.623 mo
234.931 200.623 li
234.285 200.623 233.762 200.114 233.762 199.485 cv
233.762 198.857 234.285 198.347 234.931 198.347 cv
235.403 198.347 li
236.048 198.347 236.571 198.857 236.571 199.485 cv
236.571 200.114 236.048 200.623 235.403 200.623 cv
cp
239.18 200.623 mo
238.708 200.623 li
238.062 200.623 237.539 200.114 237.539 199.485 cv
237.539 198.857 238.062 198.347 238.708 198.347 cv
239.18 198.347 li
239.826 198.347 240.349 198.857 240.349 199.485 cv
240.349 200.114 239.826 200.623 239.18 200.623 cv
cp
242.957 200.623 mo
242.485 200.623 li
241.84 200.623 241.316 200.114 241.316 199.485 cv
241.316 198.857 241.84 198.347 242.485 198.347 cv
242.957 198.347 li
243.603 198.347 244.126 198.857 244.126 199.485 cv
244.126 200.114 243.603 200.623 242.957 200.623 cv
cp
246.734 200.623 mo
246.262 200.623 li
245.617 200.623 245.094 200.114 245.094 199.485 cv
245.094 198.857 245.617 198.347 246.262 198.347 cv
246.734 198.347 li
247.38 198.347 247.903 198.857 247.903 199.485 cv
247.903 200.114 247.38 200.623 246.734 200.623 cv
cp
250.511 200.623 mo
250.039 200.623 li
249.394 200.623 248.871 200.114 248.871 199.485 cv
248.871 198.857 249.394 198.347 250.039 198.347 cv
250.511 198.347 li
251.157 198.347 251.68 198.857 251.68 199.485 cv
251.68 200.114 251.157 200.623 250.511 200.623 cv
cp
254.289 200.623 mo
253.816 200.623 li
253.171 200.623 252.648 200.114 252.648 199.485 cv
252.648 198.857 253.171 198.347 253.816 198.347 cv
254.289 198.347 li
254.934 198.347 255.457 198.857 255.457 199.485 cv
255.457 200.114 254.934 200.623 254.289 200.623 cv
cp
258.066 200.623 mo
257.594 200.623 li
256.948 200.623 256.425 200.114 256.425 199.485 cv
256.425 198.857 256.948 198.347 257.594 198.347 cv
258.066 198.347 li
258.711 198.347 259.234 198.857 259.234 199.485 cv
259.234 200.114 258.711 200.623 258.066 200.623 cv
cp
261.843 200.623 mo
261.371 200.623 li
260.725 200.623 260.202 200.114 260.202 199.485 cv
260.202 198.857 260.725 198.347 261.371 198.347 cv
261.843 198.347 li
262.489 198.347 263.012 198.857 263.012 199.485 cv
263.012 200.114 262.489 200.623 261.843 200.623 cv
cp
265.62 200.623 mo
265.148 200.623 li
264.503 200.623 263.979 200.114 263.979 199.485 cv
263.979 198.857 264.503 198.347 265.148 198.347 cv
265.62 198.347 li
266.266 198.347 266.789 198.857 266.789 199.485 cv
266.789 200.114 266.266 200.623 265.62 200.623 cv
cp
269.397 200.623 mo
268.925 200.623 li
268.28 200.623 267.757 200.114 267.757 199.485 cv
267.757 198.857 268.28 198.347 268.925 198.347 cv
269.397 198.347 li
270.043 198.347 270.566 198.857 270.566 199.485 cv
270.566 200.114 270.043 200.623 269.397 200.623 cv
cp
273.174 200.623 mo
272.702 200.623 li
272.057 200.623 271.534 200.114 271.534 199.485 cv
271.534 198.857 272.057 198.347 272.702 198.347 cv
273.174 198.347 li
273.82 198.347 274.343 198.857 274.343 199.485 cv
274.343 200.114 273.82 200.623 273.174 200.623 cv
cp
276.952 200.623 mo
276.479 200.623 li
275.834 200.623 275.311 200.114 275.311 199.485 cv
275.311 198.857 275.834 198.347 276.479 198.347 cv
276.952 198.347 li
277.597 198.347 278.12 198.857 278.12 199.485 cv
278.12 200.114 277.597 200.623 276.952 200.623 cv
cp
280.819 200.623 mo
280.347 200.623 li
279.701 200.623 279.178 200.114 279.178 199.485 cv
279.178 198.857 279.701 198.347 280.347 198.347 cv
280.819 198.347 li
281.464 198.347 281.987 198.857 281.987 199.485 cv
281.987 200.114 281.464 200.623 280.819 200.623 cv
cp
284.482 201.389 mo
284.318 201.389 284.153 201.355 283.995 201.285 cv
283.873 201.23 283.748 201.178 283.621 201.13 cv
283.02 200.9 282.724 200.24 282.96 199.655 cv
283.196 199.07 283.874 198.781 284.475 199.011 cv
284.643 199.075 284.808 199.144 284.97 199.216 cv
285.556 199.478 285.814 200.154 285.544 200.725 cv
285.348 201.143 284.924 201.389 284.482 201.389 cv
cp
208.607 201.397 mo
208.165 201.397 207.743 201.152 207.545 200.736 cv
207.274 200.166 207.53 199.49 208.116 199.226 cv
208.278 199.153 208.444 199.083 208.613 199.019 cv
209.212 198.789 209.892 199.077 210.127 199.662 cv
210.363 200.247 210.068 200.908 209.467 201.137 cv
209.342 201.186 209.218 201.237 209.096 201.292 cv
208.938 201.363 208.771 201.397 208.607 201.397 cv
cp
287.434 203.63 mo
287.088 203.63 286.744 203.48 286.514 203.194 cv
286.432 203.093 286.347 202.994 286.259 202.897 cv
285.829 202.429 285.87 201.709 286.352 201.291 cv
286.833 200.872 287.572 200.913 288.002 201.381 cv
288.124 201.514 288.241 201.65 288.353 201.79 cv
288.751 202.284 288.662 203 288.155 203.387 cv
287.941 203.551 287.687 203.63 287.434 203.63 cv
cp
205.661 203.645 mo
205.41 203.645 205.156 203.566 204.942 203.404 cv
204.434 203.016 204.344 202.301 204.742 201.806 cv
204.853 201.667 204.969 201.531 205.09 201.399 cv
205.518 200.929 206.257 200.886 206.74 201.303 cv
207.223 201.721 207.266 202.44 206.838 202.91 cv
206.75 203.007 206.664 203.106 206.583 203.208 cv
206.352 203.495 206.009 203.645 205.661 203.645 cv
cp
288.881 206.977 mo
288.299 206.977 287.796 206.555 287.722 205.978 cv
287.706 205.852 287.686 205.726 287.661 205.602 cv
287.538 204.985 287.951 204.388 288.585 204.268 cv
289.215 204.148 289.832 204.55 289.955 205.167 cv
289.99 205.342 290.019 205.52 290.042 205.699 cv
290.121 206.322 289.666 206.891 289.026 206.968 cv
288.977 206.974 288.928 206.977 288.881 206.977 cv
cp
204.225 206.995 mo
204.179 206.995 204.132 206.992 204.085 206.987 cv
203.444 206.912 202.987 206.346 203.063 205.722 cv
203.085 205.542 203.114 205.363 203.149 205.187 cv
203.271 204.57 203.884 204.167 204.518 204.286 cv
205.151 204.405 205.566 205.002 205.443 205.619 cv
205.419 205.742 205.399 205.866 205.384 205.992 cv
205.313 206.57 204.808 206.995 204.225 206.995 cv
cp
288.932 210.652 mo
288.287 210.652 287.764 210.143 287.764 209.514 cv
287.764 209.055 li
287.764 208.426 288.287 207.917 288.932 207.917 cv
289.578 207.917 290.101 208.426 290.101 209.055 cv
290.101 209.514 li
290.101 210.143 289.578 210.652 288.932 210.652 cv
cp
204.176 210.671 mo
203.53 210.671 203.007 210.162 203.007 209.533 cv
203.007 209.073 li
203.007 208.445 203.53 207.935 204.176 207.935 cv
204.821 207.935 205.344 208.445 205.344 209.073 cv
205.344 209.533 li
205.344 210.162 204.821 210.671 204.176 210.671 cv
cp
288.932 214.331 mo
288.287 214.331 287.764 213.822 287.764 213.193 cv
287.764 212.733 li
287.764 212.104 288.287 211.595 288.932 211.595 cv
289.578 211.595 290.101 212.104 290.101 212.733 cv
290.101 213.193 li
290.101 213.822 289.578 214.331 288.932 214.331 cv
cp
204.176 214.35 mo
203.53 214.35 203.007 213.84 203.007 213.212 cv
203.007 212.752 li
203.007 212.123 203.53 211.614 204.176 211.614 cv
204.821 211.614 205.344 212.123 205.344 212.752 cv
205.344 213.212 li
205.344 213.84 204.821 214.35 204.176 214.35 cv
cp
288.932 218.01 mo
288.287 218.01 287.764 217.5 287.764 216.871 cv
287.764 216.411 li
287.764 215.783 288.287 215.273 288.932 215.273 cv
289.578 215.273 290.101 215.783 290.101 216.411 cv
290.101 216.871 li
290.101 217.5 289.578 218.01 288.932 218.01 cv
cp
204.176 218.028 mo
203.53 218.028 203.007 217.519 203.007 216.89 cv
203.007 216.43 li
203.007 215.802 203.53 215.292 204.176 215.292 cv
204.821 215.292 205.344 215.802 205.344 216.43 cv
205.344 216.89 li
205.344 217.519 204.821 218.028 204.176 218.028 cv
cp
288.932 221.688 mo
288.287 221.688 287.764 221.178 287.764 220.55 cv
287.764 220.09 li
287.764 219.461 288.287 218.952 288.932 218.952 cv
289.578 218.952 290.101 219.461 290.101 220.09 cv
290.101 220.55 li
290.101 221.178 289.578 221.688 288.932 221.688 cv
cp
204.176 221.706 mo
203.53 221.706 203.007 221.197 203.007 220.568 cv
203.007 220.109 li
203.007 219.48 203.53 218.971 204.176 218.971 cv
204.821 218.971 205.344 219.48 205.344 220.109 cv
205.344 220.568 li
205.344 221.197 204.821 221.706 204.176 221.706 cv
cp
288.932 225.366 mo
288.287 225.366 287.764 224.857 287.764 224.228 cv
287.764 223.768 li
287.764 223.14 288.287 222.63 288.932 222.63 cv
289.578 222.63 290.101 223.14 290.101 223.768 cv
290.101 224.228 li
290.101 224.857 289.578 225.366 288.932 225.366 cv
cp
204.176 225.385 mo
203.53 225.385 203.007 224.875 203.007 224.247 cv
203.007 223.787 li
203.007 223.159 203.53 222.649 204.176 222.649 cv
204.821 222.649 205.344 223.159 205.344 223.787 cv
205.344 224.247 li
205.344 224.875 204.821 225.385 204.176 225.385 cv
cp
288.932 229.045 mo
288.287 229.045 287.764 228.535 287.764 227.907 cv
287.764 227.447 li
287.764 226.818 288.287 226.309 288.932 226.309 cv
289.578 226.309 290.101 226.818 290.101 227.447 cv
290.101 227.907 li
290.101 228.535 289.578 229.045 288.932 229.045 cv
cp
204.176 229.063 mo
203.53 229.063 203.007 228.554 203.007 227.925 cv
203.007 227.465 li
203.007 226.837 203.53 226.327 204.176 226.327 cv
204.821 226.327 205.344 226.837 205.344 227.465 cv
205.344 227.925 li
205.344 228.554 204.821 229.063 204.176 229.063 cv
cp
288.932 232.723 mo
288.287 232.723 287.764 232.214 287.764 231.585 cv
287.764 231.125 li
287.764 230.497 288.287 229.987 288.932 229.987 cv
289.578 229.987 290.101 230.497 290.101 231.125 cv
290.101 231.585 li
290.101 232.214 289.578 232.723 288.932 232.723 cv
cp
204.176 232.742 mo
203.53 232.742 203.007 232.232 203.007 231.604 cv
203.007 231.144 li
203.007 230.515 203.53 230.006 204.176 230.006 cv
204.821 230.006 205.344 230.515 205.344 231.144 cv
205.344 231.604 li
205.344 232.232 204.821 232.742 204.176 232.742 cv
cp
288.932 236.402 mo
288.287 236.402 287.764 235.892 287.764 235.264 cv
287.764 234.804 li
287.764 234.175 288.287 233.666 288.932 233.666 cv
289.578 233.666 290.101 234.175 290.101 234.804 cv
290.101 235.264 li
290.101 235.892 289.578 236.402 288.932 236.402 cv
cp
204.176 236.42 mo
203.53 236.42 203.007 235.911 203.007 235.282 cv
203.007 234.822 li
203.007 234.194 203.53 233.684 204.176 233.684 cv
204.821 233.684 205.344 234.194 205.344 234.822 cv
205.344 235.282 li
205.344 235.911 204.821 236.42 204.176 236.42 cv
cp
288.932 240.08 mo
288.287 240.08 287.764 239.571 287.764 238.942 cv
287.764 238.482 li
287.764 237.854 288.287 237.344 288.932 237.344 cv
289.578 237.344 290.101 237.854 290.101 238.482 cv
290.101 238.942 li
290.101 239.571 289.578 240.08 288.932 240.08 cv
cp
204.176 240.099 mo
203.53 240.099 203.007 239.589 203.007 238.961 cv
203.007 238.501 li
203.007 237.872 203.53 237.363 204.176 237.363 cv
204.821 237.363 205.344 237.872 205.344 238.501 cv
205.344 238.961 li
205.344 239.589 204.821 240.099 204.176 240.099 cv
cp
288.932 243.758 mo
288.287 243.758 287.764 243.249 287.764 242.62 cv
287.764 242.161 li
287.764 241.532 288.287 241.023 288.932 241.023 cv
289.578 241.023 290.101 241.532 290.101 242.161 cv
290.101 242.62 li
290.101 243.249 289.578 243.758 288.932 243.758 cv
cp
204.176 243.777 mo
203.53 243.777 203.007 243.268 203.007 242.639 cv
203.007 242.179 li
203.007 241.551 203.53 241.041 204.176 241.041 cv
204.821 241.041 205.344 241.551 205.344 242.179 cv
205.344 242.639 li
205.344 243.268 204.821 243.777 204.176 243.777 cv
cp
288.932 247.437 mo
288.287 247.437 287.764 246.928 287.764 246.299 cv
287.764 245.839 li
287.764 245.211 288.287 244.701 288.932 244.701 cv
289.578 244.701 290.101 245.211 290.101 245.839 cv
290.101 246.299 li
290.101 246.928 289.578 247.437 288.932 247.437 cv
cp
204.176 247.456 mo
203.53 247.456 203.007 246.946 203.007 246.318 cv
203.007 245.858 li
203.007 245.229 203.53 244.72 204.176 244.72 cv
204.821 244.72 205.344 245.229 205.344 245.858 cv
205.344 246.318 li
205.344 246.946 204.821 247.456 204.176 247.456 cv
cp
288.932 251.115 mo
288.287 251.115 287.764 250.606 287.764 249.977 cv
287.764 249.518 li
287.764 248.889 288.287 248.379 288.932 248.379 cv
289.578 248.379 290.101 248.889 290.101 249.518 cv
290.101 249.977 li
290.101 250.606 289.578 251.115 288.932 251.115 cv
cp
204.176 251.134 mo
203.53 251.134 203.007 250.625 203.007 249.996 cv
203.007 249.536 li
203.007 248.908 203.53 248.398 204.176 248.398 cv
204.821 248.398 205.344 248.908 205.344 249.536 cv
205.344 249.996 li
205.344 250.625 204.821 251.134 204.176 251.134 cv
cp
288.932 254.794 mo
288.287 254.794 287.764 254.285 287.764 253.656 cv
287.764 253.196 li
287.764 252.567 288.287 252.058 288.932 252.058 cv
289.578 252.058 290.101 252.567 290.101 253.196 cv
290.101 253.656 li
290.101 254.285 289.578 254.794 288.932 254.794 cv
cp
204.176 254.812 mo
203.53 254.812 203.007 254.303 203.007 253.674 cv
203.007 253.215 li
203.007 252.586 203.53 252.077 204.176 252.077 cv
204.821 252.077 205.344 252.586 205.344 253.215 cv
205.344 253.674 li
205.344 254.303 204.821 254.812 204.176 254.812 cv
cp
288.932 258.472 mo
288.287 258.472 287.764 257.963 287.764 257.334 cv
287.764 256.874 li
287.764 256.246 288.287 255.736 288.932 255.736 cv
289.578 255.736 290.101 256.246 290.101 256.874 cv
290.101 257.334 li
290.101 257.963 289.578 258.472 288.932 258.472 cv
cp
204.176 258.491 mo
203.53 258.491 203.007 257.981 203.007 257.353 cv
203.007 256.893 li
203.007 256.264 203.53 255.755 204.176 255.755 cv
204.821 255.755 205.344 256.264 205.344 256.893 cv
205.344 257.353 li
205.344 257.981 204.821 258.491 204.176 258.491 cv
cp
288.404 262.077 mo
288.242 262.077 288.077 262.044 287.919 261.974 cv
287.332 261.713 287.074 261.038 287.342 260.466 cv
287.394 260.354 287.442 260.241 287.485 260.125 cv
287.706 259.534 288.377 259.23 288.982 259.443 cv
289.589 259.658 289.902 260.311 289.682 260.901 cv
289.617 261.075 289.546 261.245 289.468 261.412 cv
289.271 261.83 288.847 262.077 288.404 262.077 cv
cp
204.711 262.093 mo
204.269 262.093 203.846 261.847 203.649 261.43 cv
203.571 261.264 203.499 261.095 203.434 260.922 cv
203.211 260.332 203.522 259.678 204.128 259.461 cv
204.736 259.246 205.406 259.548 205.628 260.138 cv
205.672 260.254 205.72 260.368 205.772 260.479 cv
206.042 261.05 205.785 261.726 205.199 261.989 cv
205.041 262.059 204.875 262.093 204.711 262.093 cv
cp
285.898 264.748 mo
285.494 264.748 285.102 264.544 284.885 264.179 cv
284.562 263.634 284.754 262.938 285.312 262.624 cv
285.423 262.562 285.531 262.495 285.636 262.426 cv
286.169 262.07 286.896 262.203 287.261 262.722 cv
287.625 263.241 287.489 263.949 286.956 264.304 cv
286.802 264.407 286.644 264.504 286.482 264.595 cv
286.297 264.698 286.097 264.748 285.898 264.748 cv
cp
207.226 264.757 mo
207.029 264.757 206.829 264.708 206.646 264.606 cv
206.483 264.515 206.325 264.418 206.17 264.316 cv
205.636 263.963 205.497 263.255 205.86 262.735 cv
206.222 262.216 206.949 262.08 207.483 262.433 cv
207.589 262.503 207.697 262.569 207.809 262.631 cv
208.369 262.944 208.562 263.639 208.241 264.185 cv
208.025 264.551 207.631 264.757 207.226 264.757 cv
cp
210.858 265.573 mo
210.394 265.573 li
209.749 265.573 209.221 265.063 209.221 264.435 cv
209.221 263.806 209.74 263.297 210.385 263.297 cv
210.858 263.297 li
211.503 263.297 212.026 263.806 212.026 264.435 cv
212.026 265.063 211.503 265.573 210.858 265.573 cv
cp
214.635 265.573 mo
214.163 265.573 li
213.517 265.573 212.994 265.063 212.994 264.435 cv
212.994 263.806 213.517 263.297 214.163 263.297 cv
214.635 263.297 li
215.28 263.297 215.803 263.806 215.803 264.435 cv
215.803 265.063 215.28 265.573 214.635 265.573 cv
cp
218.412 265.573 mo
217.94 265.573 li
217.294 265.573 216.771 265.063 216.771 264.435 cv
216.771 263.806 217.294 263.297 217.94 263.297 cv
218.412 263.297 li
219.057 263.297 219.58 263.806 219.58 264.435 cv
219.58 265.063 219.057 265.573 218.412 265.573 cv
cp
222.189 265.573 mo
221.717 265.573 li
221.071 265.573 220.548 265.063 220.548 264.435 cv
220.548 263.806 221.071 263.297 221.717 263.297 cv
222.189 263.297 li
222.834 263.297 223.358 263.806 223.358 264.435 cv
223.358 265.063 222.834 265.573 222.189 265.573 cv
cp
225.966 265.573 mo
225.494 265.573 li
224.848 265.573 224.325 265.063 224.325 264.435 cv
224.325 263.806 224.848 263.297 225.494 263.297 cv
225.966 263.297 li
226.612 263.297 227.135 263.806 227.135 264.435 cv
227.135 265.063 226.612 265.573 225.966 265.573 cv
cp
229.743 265.573 mo
229.271 265.573 li
228.626 265.573 228.102 265.063 228.102 264.435 cv
228.102 263.806 228.626 263.297 229.271 263.297 cv
229.743 263.297 li
230.389 263.297 230.912 263.806 230.912 264.435 cv
230.912 265.063 230.389 265.573 229.743 265.573 cv
cp
233.521 265.573 mo
233.048 265.573 li
232.403 265.573 231.88 265.063 231.88 264.435 cv
231.88 263.806 232.403 263.297 233.048 263.297 cv
233.521 263.297 li
234.166 263.297 234.689 263.806 234.689 264.435 cv
234.689 265.063 234.166 265.573 233.521 265.573 cv
cp
237.298 265.573 mo
236.826 265.573 li
236.18 265.573 235.657 265.063 235.657 264.435 cv
235.657 263.806 236.18 263.297 236.826 263.297 cv
237.298 263.297 li
237.943 263.297 238.466 263.806 238.466 264.435 cv
238.466 265.063 237.943 265.573 237.298 265.573 cv
cp
241.075 265.573 mo
240.603 265.573 li
239.957 265.573 239.434 265.063 239.434 264.435 cv
239.434 263.806 239.957 263.297 240.603 263.297 cv
241.075 263.297 li
241.72 263.297 242.243 263.806 242.243 264.435 cv
242.243 265.063 241.72 265.573 241.075 265.573 cv
cp
244.852 265.573 mo
244.38 265.573 li
243.734 265.573 243.211 265.063 243.211 264.435 cv
243.211 263.806 243.734 263.297 244.38 263.297 cv
244.852 263.297 li
245.497 263.297 246.021 263.806 246.021 264.435 cv
246.021 265.063 245.497 265.573 244.852 265.573 cv
cp
248.629 265.573 mo
248.157 265.573 li
247.511 265.573 246.988 265.063 246.988 264.435 cv
246.988 263.806 247.511 263.297 248.157 263.297 cv
248.629 263.297 li
249.275 263.297 249.798 263.806 249.798 264.435 cv
249.798 265.063 249.275 265.573 248.629 265.573 cv
cp
252.406 265.573 mo
251.934 265.573 li
251.289 265.573 250.765 265.063 250.765 264.435 cv
250.765 263.806 251.289 263.297 251.934 263.297 cv
252.406 263.297 li
253.052 263.297 253.575 263.806 253.575 264.435 cv
253.575 265.063 253.052 265.573 252.406 265.573 cv
cp
256.183 265.573 mo
255.711 265.573 li
255.066 265.573 254.543 265.063 254.543 264.435 cv
254.543 263.806 255.066 263.297 255.711 263.297 cv
256.183 263.297 li
256.829 263.297 257.352 263.806 257.352 264.435 cv
257.352 265.063 256.829 265.573 256.183 265.573 cv
cp
259.961 265.573 mo
259.488 265.573 li
258.843 265.573 258.32 265.063 258.32 264.435 cv
258.32 263.806 258.843 263.297 259.488 263.297 cv
259.961 263.297 li
260.606 263.297 261.129 263.806 261.129 264.435 cv
261.129 265.063 260.606 265.573 259.961 265.573 cv
cp
263.738 265.573 mo
263.265 265.573 li
262.62 265.573 262.097 265.063 262.097 264.435 cv
262.097 263.806 262.62 263.297 263.265 263.297 cv
263.738 263.297 li
264.383 263.297 264.906 263.806 264.906 264.435 cv
264.906 265.063 264.383 265.573 263.738 265.573 cv
cp
267.515 265.573 mo
267.043 265.573 li
266.397 265.573 265.874 265.063 265.874 264.435 cv
265.874 263.806 266.397 263.297 267.043 263.297 cv
267.515 263.297 li
268.16 263.297 268.684 263.806 268.684 264.435 cv
268.684 265.063 268.16 265.573 267.515 265.573 cv
cp
271.292 265.573 mo
270.82 265.573 li
270.174 265.573 269.651 265.063 269.651 264.435 cv
269.651 263.806 270.174 263.297 270.82 263.297 cv
271.292 263.297 li
271.938 263.297 272.461 263.806 272.461 264.435 cv
272.461 265.063 271.938 265.573 271.292 265.573 cv
cp
275.069 265.573 mo
274.597 265.573 li
273.952 265.573 273.428 265.063 273.428 264.435 cv
273.428 263.806 273.952 263.297 274.597 263.297 cv
275.069 263.297 li
275.715 263.297 276.238 263.806 276.238 264.435 cv
276.238 265.063 275.715 265.573 275.069 265.573 cv
cp
278.936 265.573 mo
278.464 265.573 li
277.819 265.573 277.296 265.063 277.296 264.435 cv
277.296 263.806 277.819 263.297 278.464 263.297 cv
278.936 263.297 li
279.582 263.297 280.105 263.806 280.105 264.435 cv
280.105 265.063 279.582 265.573 278.936 265.573 cv
cp
282.742 265.573 mo
282.241 265.573 li
281.596 265.573 281.073 265.063 281.073 264.435 cv
281.073 263.806 281.596 263.297 282.241 263.297 cv
282.713 263.297 li
283.359 263.297 283.896 263.806 283.896 264.435 cv
283.896 265.063 283.387 265.573 282.742 265.573 cv
cp
.490196 .278431 .105882 rgb
f
212.972 199.575 mo
212.505 199.575 li
212.247 199.575 212.035 199.371 212.035 199.12 cv
212.035 198.868 212.242 198.664 212.5 198.664 cv
212.972 198.664 li
213.23 198.664 213.44 198.868 213.44 199.12 cv
213.44 199.371 213.23 199.575 212.972 199.575 cv
cp
216.749 199.575 mo
216.277 199.575 li
216.019 199.575 215.81 199.371 215.81 199.12 cv
215.81 198.868 216.019 198.664 216.277 198.664 cv
216.749 198.664 li
217.008 198.664 217.217 198.868 217.217 199.12 cv
217.217 199.371 217.008 199.575 216.749 199.575 cv
cp
220.527 199.575 mo
220.054 199.575 li
219.796 199.575 219.587 199.371 219.587 199.12 cv
219.587 198.868 219.796 198.664 220.054 198.664 cv
220.527 198.664 li
220.785 198.664 220.994 198.868 220.994 199.12 cv
220.994 199.371 220.785 199.575 220.527 199.575 cv
cp
224.304 199.575 mo
223.832 199.575 li
223.573 199.575 223.364 199.371 223.364 199.12 cv
223.364 198.868 223.573 198.664 223.832 198.664 cv
224.304 198.664 li
224.562 198.664 224.771 198.868 224.771 199.12 cv
224.771 199.371 224.562 199.575 224.304 199.575 cv
cp
228.081 199.575 mo
227.609 199.575 li
227.351 199.575 227.141 199.371 227.141 199.12 cv
227.141 198.868 227.351 198.664 227.609 198.664 cv
228.081 198.664 li
228.339 198.664 228.548 198.868 228.548 199.12 cv
228.548 199.371 228.339 199.575 228.081 199.575 cv
cp
231.858 199.575 mo
231.386 199.575 li
231.128 199.575 230.919 199.371 230.919 199.12 cv
230.919 198.868 231.128 198.664 231.386 198.664 cv
231.858 198.664 li
232.116 198.664 232.325 198.868 232.325 199.12 cv
232.325 199.371 232.116 199.575 231.858 199.575 cv
cp
235.635 199.575 mo
235.163 199.575 li
234.905 199.575 234.696 199.371 234.696 199.12 cv
234.696 198.868 234.905 198.664 235.163 198.664 cv
235.635 198.664 li
235.893 198.664 236.103 198.868 236.103 199.12 cv
236.103 199.371 235.893 199.575 235.635 199.575 cv
cp
239.412 199.575 mo
238.94 199.575 li
238.682 199.575 238.473 199.371 238.473 199.12 cv
238.473 198.868 238.682 198.664 238.94 198.664 cv
239.412 198.664 li
239.671 198.664 239.88 198.868 239.88 199.12 cv
239.88 199.371 239.671 199.575 239.412 199.575 cv
cp
243.19 199.575 mo
242.717 199.575 li
242.459 199.575 242.25 199.371 242.25 199.12 cv
242.25 198.868 242.459 198.664 242.717 198.664 cv
243.19 198.664 li
243.448 198.664 243.657 198.868 243.657 199.12 cv
243.657 199.371 243.448 199.575 243.19 199.575 cv
cp
246.967 199.575 mo
246.495 199.575 li
246.236 199.575 246.027 199.371 246.027 199.12 cv
246.027 198.868 246.236 198.664 246.495 198.664 cv
246.967 198.664 li
247.225 198.664 247.434 198.868 247.434 199.12 cv
247.434 199.371 247.225 199.575 246.967 199.575 cv
cp
250.744 199.575 mo
250.272 199.575 li
250.014 199.575 249.804 199.371 249.804 199.12 cv
249.804 198.868 250.014 198.664 250.272 198.664 cv
250.744 198.664 li
251.002 198.664 251.211 198.868 251.211 199.12 cv
251.211 199.371 251.002 199.575 250.744 199.575 cv
cp
254.521 199.575 mo
254.049 199.575 li
253.791 199.575 253.581 199.371 253.581 199.12 cv
253.581 198.868 253.791 198.664 254.049 198.664 cv
254.521 198.664 li
254.779 198.664 254.988 198.868 254.988 199.12 cv
254.988 199.371 254.779 199.575 254.521 199.575 cv
cp
258.298 199.575 mo
257.826 199.575 li
257.568 199.575 257.359 199.371 257.359 199.12 cv
257.359 198.868 257.568 198.664 257.826 198.664 cv
258.298 198.664 li
258.556 198.664 258.766 198.868 258.766 199.12 cv
258.766 199.371 258.556 199.575 258.298 199.575 cv
cp
262.075 199.575 mo
261.603 199.575 li
261.345 199.575 261.136 199.371 261.136 199.12 cv
261.136 198.868 261.345 198.664 261.603 198.664 cv
262.075 198.664 li
262.334 198.664 262.543 198.868 262.543 199.12 cv
262.543 199.371 262.334 199.575 262.075 199.575 cv
cp
265.852 199.575 mo
265.38 199.575 li
265.122 199.575 264.913 199.371 264.913 199.12 cv
264.913 198.868 265.122 198.664 265.38 198.664 cv
265.852 198.664 li
266.111 198.664 266.32 198.868 266.32 199.12 cv
266.32 199.371 266.111 199.575 265.852 199.575 cv
cp
269.63 199.575 mo
269.158 199.575 li
268.899 199.575 268.69 199.371 268.69 199.12 cv
268.69 198.868 268.899 198.664 269.158 198.664 cv
269.63 198.664 li
269.888 198.664 270.097 198.868 270.097 199.12 cv
270.097 199.371 269.888 199.575 269.63 199.575 cv
cp
273.407 199.575 mo
272.935 199.575 li
272.676 199.575 272.467 199.371 272.467 199.12 cv
272.467 198.868 272.676 198.664 272.935 198.664 cv
273.407 198.664 li
273.665 198.664 273.874 198.868 273.874 199.12 cv
273.874 199.371 273.665 199.575 273.407 199.575 cv
cp
277.184 199.575 mo
276.712 199.575 li
276.454 199.575 276.244 199.371 276.244 199.12 cv
276.244 198.868 276.454 198.664 276.712 198.664 cv
277.184 198.664 li
277.442 198.664 277.651 198.868 277.651 199.12 cv
277.651 199.371 277.442 199.575 277.184 199.575 cv
cp
280.704 199.575 mo
280.232 199.575 li
279.974 199.575 279.764 199.371 279.764 199.12 cv
279.764 198.868 279.974 198.664 280.232 198.664 cv
280.704 198.664 li
280.962 198.664 281.171 198.868 281.171 199.12 cv
281.171 199.371 280.962 199.575 280.704 199.575 cv
cp
284.367 200.34 mo
284.302 200.34 284.236 200.327 284.173 200.298 cv
284.038 200.238 283.902 200.182 283.763 200.129 cv
283.522 200.037 283.404 199.773 283.498 199.539 cv
283.593 199.305 283.863 199.189 284.104 199.281 cv
284.259 199.341 284.413 199.404 284.563 199.471 cv
284.797 199.576 284.9 199.846 284.792 200.075 cv
284.714 200.242 284.544 200.34 284.367 200.34 cv
cp
208.839 200.349 mo
208.662 200.349 208.493 200.251 208.414 200.084 cv
208.306 199.856 208.408 199.586 208.642 199.48 cv
208.793 199.412 208.946 199.349 209.101 199.289 cv
209.342 199.197 209.613 199.312 209.707 199.546 cv
209.802 199.78 209.683 200.045 209.443 200.136 cv
209.305 200.189 209.168 200.246 209.034 200.307 cv
208.971 200.335 208.904 200.349 208.839 200.349 cv
cp
287.319 202.582 mo
287.181 202.582 287.043 202.522 286.951 202.407 cv
286.86 202.294 286.765 202.184 286.667 202.077 cv
286.495 201.889 286.512 201.602 286.704 201.434 cv
286.897 201.267 287.192 201.283 287.364 201.47 cv
287.476 201.592 287.584 201.717 287.687 201.846 cv
287.846 202.043 287.81 202.33 287.607 202.485 cv
287.522 202.55 287.42 202.582 287.319 202.582 cv
cp
205.894 202.597 mo
205.794 202.597 205.692 202.565 205.607 202.5 cv
205.403 202.345 205.367 202.059 205.526 201.861 cv
205.629 201.733 205.736 201.609 205.847 201.487 cv
206.018 201.299 206.313 201.281 206.507 201.449 cv
206.7 201.615 206.717 201.903 206.546 202.091 cv
206.448 202.199 206.353 202.309 206.263 202.422 cv
206.171 202.537 206.033 202.597 205.894 202.597 cv
cp
288.767 205.928 mo
288.534 205.928 288.333 205.759 288.303 205.529 cv
288.285 205.386 288.262 205.245 288.235 205.106 cv
288.185 204.859 288.35 204.62 288.604 204.572 cv
288.859 204.523 289.103 204.686 289.152 204.932 cv
289.184 205.092 289.21 205.254 289.231 205.417 cv
289.263 205.666 289.081 205.894 288.825 205.925 cv
288.805 205.927 288.786 205.928 288.767 205.928 cv
cp
204.456 205.947 mo
204.438 205.947 204.419 205.945 204.401 205.943 cv
204.144 205.914 203.961 205.687 203.992 205.438 cv
204.012 205.273 204.038 205.111 204.069 204.951 cv
204.118 204.704 204.363 204.543 204.617 204.59 cv
204.87 204.638 205.036 204.877 204.987 205.124 cv
204.96 205.263 204.937 205.403 204.92 205.545 cv
204.892 205.777 204.69 205.947 204.456 205.947 cv
cp
288.817 209.604 mo
288.559 209.604 288.35 209.4 288.35 209.149 cv
288.35 208.689 li
288.35 208.438 288.559 208.234 288.817 208.234 cv
289.076 208.234 289.285 208.438 289.285 208.689 cv
289.285 209.149 li
289.285 209.4 289.076 209.604 288.817 209.604 cv
cp
204.408 209.623 mo
204.15 209.623 203.941 209.419 203.941 209.167 cv
203.941 208.708 li
203.941 208.456 204.15 208.252 204.408 208.252 cv
204.666 208.252 204.876 208.456 204.876 208.708 cv
204.876 209.167 li
204.876 209.419 204.666 209.623 204.408 209.623 cv
cp
288.817 213.283 mo
288.559 213.283 288.35 213.079 288.35 212.827 cv
288.35 212.367 li
288.35 212.116 288.559 211.912 288.817 211.912 cv
289.076 211.912 289.285 212.116 289.285 212.367 cv
289.285 212.827 li
289.285 213.079 289.076 213.283 288.817 213.283 cv
cp
204.408 213.301 mo
204.15 213.301 203.941 213.097 203.941 212.846 cv
203.941 212.386 li
203.941 212.135 204.15 211.931 204.408 211.931 cv
204.666 211.931 204.876 212.135 204.876 212.386 cv
204.876 212.846 li
204.876 213.097 204.666 213.301 204.408 213.301 cv
cp
288.817 216.961 mo
288.559 216.961 288.35 216.757 288.35 216.506 cv
288.35 216.046 li
288.35 215.795 288.559 215.591 288.817 215.591 cv
289.076 215.591 289.285 215.795 289.285 216.046 cv
289.285 216.506 li
289.285 216.757 289.076 216.961 288.817 216.961 cv
cp
204.408 216.98 mo
204.15 216.98 203.941 216.776 203.941 216.525 cv
203.941 216.065 li
203.941 215.813 204.15 215.609 204.408 215.609 cv
204.666 215.609 204.876 215.813 204.876 216.065 cv
204.876 216.525 li
204.876 216.776 204.666 216.98 204.408 216.98 cv
cp
288.817 220.64 mo
288.559 220.64 288.35 220.436 288.35 220.184 cv
288.35 219.724 li
288.35 219.473 288.559 219.269 288.817 219.269 cv
289.076 219.269 289.285 219.473 289.285 219.724 cv
289.285 220.184 li
289.285 220.436 289.076 220.64 288.817 220.64 cv
cp
204.408 220.658 mo
204.15 220.658 203.941 220.454 203.941 220.203 cv
203.941 219.743 li
203.941 219.492 204.15 219.288 204.408 219.288 cv
204.666 219.288 204.876 219.492 204.876 219.743 cv
204.876 220.203 li
204.876 220.454 204.666 220.658 204.408 220.658 cv
cp
288.817 224.318 mo
288.559 224.318 288.35 224.114 288.35 223.863 cv
288.35 223.403 li
288.35 223.152 288.559 222.948 288.817 222.948 cv
289.076 222.948 289.285 223.152 289.285 223.403 cv
289.285 223.863 li
289.285 224.114 289.076 224.318 288.817 224.318 cv
cp
204.408 224.337 mo
204.15 224.337 203.941 224.133 203.941 223.881 cv
203.941 223.422 li
203.941 223.17 204.15 222.966 204.408 222.966 cv
204.666 222.966 204.876 223.17 204.876 223.422 cv
204.876 223.881 li
204.876 224.133 204.666 224.337 204.408 224.337 cv
cp
288.817 227.996 mo
288.559 227.996 288.35 227.792 288.35 227.541 cv
288.35 227.081 li
288.35 226.83 288.559 226.626 288.817 226.626 cv
289.076 226.626 289.285 226.83 289.285 227.081 cv
289.285 227.541 li
289.285 227.792 289.076 227.996 288.817 227.996 cv
cp
204.408 228.015 mo
204.15 228.015 203.941 227.811 203.941 227.56 cv
203.941 227.1 li
203.941 226.848 204.15 226.645 204.408 226.645 cv
204.666 226.645 204.876 226.848 204.876 227.1 cv
204.876 227.56 li
204.876 227.811 204.666 228.015 204.408 228.015 cv
cp
288.817 231.675 mo
288.559 231.675 288.35 231.471 288.35 231.22 cv
288.35 230.76 li
288.35 230.508 288.559 230.305 288.817 230.305 cv
289.076 230.305 289.285 230.508 289.285 230.76 cv
289.285 231.22 li
289.285 231.471 289.076 231.675 288.817 231.675 cv
cp
204.408 231.693 mo
204.15 231.693 203.941 231.49 203.941 231.238 cv
203.941 230.778 li
203.941 230.527 204.15 230.323 204.408 230.323 cv
204.666 230.323 204.876 230.527 204.876 230.778 cv
204.876 231.238 li
204.876 231.49 204.666 231.693 204.408 231.693 cv
cp
288.817 235.353 mo
288.559 235.353 288.35 235.15 288.35 234.898 cv
288.35 234.438 li
288.35 234.187 288.559 233.983 288.817 233.983 cv
289.076 233.983 289.285 234.187 289.285 234.438 cv
289.285 234.898 li
289.285 235.15 289.076 235.353 288.817 235.353 cv
cp
204.408 235.372 mo
204.15 235.372 203.941 235.168 203.941 234.917 cv
203.941 234.457 li
203.941 234.206 204.15 234.002 204.408 234.002 cv
204.666 234.002 204.876 234.206 204.876 234.457 cv
204.876 234.917 li
204.876 235.168 204.666 235.372 204.408 235.372 cv
cp
288.817 239.032 mo
288.559 239.032 288.35 238.828 288.35 238.577 cv
288.35 238.117 li
288.35 237.865 288.559 237.661 288.817 237.661 cv
289.076 237.661 289.285 237.865 289.285 238.117 cv
289.285 238.577 li
289.285 238.828 289.076 239.032 288.817 239.032 cv
cp
204.408 239.05 mo
204.15 239.05 203.941 238.846 203.941 238.595 cv
203.941 238.135 li
203.941 237.884 204.15 237.68 204.408 237.68 cv
204.666 237.68 204.876 237.884 204.876 238.135 cv
204.876 238.595 li
204.876 238.846 204.666 239.05 204.408 239.05 cv
cp
288.817 242.71 mo
288.559 242.71 288.35 242.506 288.35 242.255 cv
288.35 241.795 li
288.35 241.544 288.559 241.34 288.817 241.34 cv
289.076 241.34 289.285 241.544 289.285 241.795 cv
289.285 242.255 li
289.285 242.506 289.076 242.71 288.817 242.71 cv
cp
204.408 242.729 mo
204.15 242.729 203.941 242.525 203.941 242.273 cv
203.941 241.814 li
203.941 241.562 204.15 241.358 204.408 241.358 cv
204.666 241.358 204.876 241.562 204.876 241.814 cv
204.876 242.273 li
204.876 242.525 204.666 242.729 204.408 242.729 cv
cp
288.817 246.389 mo
288.559 246.389 288.35 246.185 288.35 245.933 cv
288.35 245.474 li
288.35 245.222 288.559 245.018 288.817 245.018 cv
289.076 245.018 289.285 245.222 289.285 245.474 cv
289.285 245.933 li
289.285 246.185 289.076 246.389 288.817 246.389 cv
cp
204.408 246.407 mo
204.15 246.407 203.941 246.203 203.941 245.952 cv
203.941 245.492 li
203.941 245.241 204.15 245.037 204.408 245.037 cv
204.666 245.037 204.876 245.241 204.876 245.492 cv
204.876 245.952 li
204.876 246.203 204.666 246.407 204.408 246.407 cv
cp
288.817 250.067 mo
288.559 250.067 288.35 249.863 288.35 249.612 cv
288.35 249.152 li
288.35 248.9 288.559 248.697 288.817 248.697 cv
289.076 248.697 289.285 248.9 289.285 249.152 cv
289.285 249.612 li
289.285 249.863 289.076 250.067 288.817 250.067 cv
cp
204.408 250.086 mo
204.15 250.086 203.941 249.882 203.941 249.63 cv
203.941 249.171 li
203.941 248.919 204.15 248.715 204.408 248.715 cv
204.666 248.715 204.876 248.919 204.876 249.171 cv
204.876 249.63 li
204.876 249.882 204.666 250.086 204.408 250.086 cv
cp
288.817 253.745 mo
288.559 253.745 288.35 253.542 288.35 253.29 cv
288.35 252.83 li
288.35 252.579 288.559 252.375 288.817 252.375 cv
289.076 252.375 289.285 252.579 289.285 252.83 cv
289.285 253.29 li
289.285 253.542 289.076 253.745 288.817 253.745 cv
cp
204.408 253.764 mo
204.15 253.764 203.941 253.56 203.941 253.309 cv
203.941 252.849 li
203.941 252.598 204.15 252.394 204.408 252.394 cv
204.666 252.394 204.876 252.598 204.876 252.849 cv
204.876 253.309 li
204.876 253.56 204.666 253.764 204.408 253.764 cv
cp
288.817 257.424 mo
288.559 257.424 288.35 257.22 288.35 256.969 cv
288.35 256.509 li
288.35 256.258 288.559 256.054 288.817 256.054 cv
289.076 256.054 289.285 256.258 289.285 256.509 cv
289.285 256.969 li
289.285 257.22 289.076 257.424 288.817 257.424 cv
cp
204.408 257.443 mo
204.15 257.443 203.941 257.239 203.941 256.987 cv
203.941 256.528 li
203.941 256.276 204.15 256.072 204.408 256.072 cv
204.666 256.072 204.876 256.276 204.876 256.528 cv
204.876 256.987 li
204.876 257.239 204.666 257.443 204.408 257.443 cv
cp
288.29 261.029 mo
288.225 261.029 288.159 261.015 288.096 260.987 cv
287.861 260.883 287.757 260.613 287.865 260.384 cv
287.925 260.256 287.98 260.125 288.029 259.992 cv
288.117 259.756 288.386 259.635 288.628 259.72 cv
288.871 259.806 288.996 260.067 288.908 260.303 cv
288.85 260.459 288.786 260.612 288.715 260.762 cv
288.637 260.93 288.467 261.029 288.29 261.029 cv
cp
204.943 261.044 mo
204.766 261.044 204.597 260.946 204.518 260.779 cv
204.448 260.63 204.383 260.477 204.324 260.321 cv
204.236 260.085 204.36 259.824 204.602 259.737 cv
204.844 259.651 205.113 259.772 205.202 260.008 cv
205.252 260.141 205.307 260.271 205.368 260.399 cv
205.476 260.627 205.373 260.898 205.138 261.003 cv
205.075 261.031 205.009 261.044 204.943 261.044 cv
cp
285.783 263.699 mo
285.621 263.699 285.464 263.618 285.378 263.471 cv
285.248 263.254 285.325 262.975 285.549 262.85 cv
285.675 262.779 285.798 262.703 285.917 262.624 cv
286.131 262.481 286.421 262.535 286.567 262.742 cv
286.713 262.95 286.659 263.233 286.446 263.375 cv
286.306 263.468 286.163 263.555 286.016 263.638 cv
285.943 263.68 285.862 263.699 285.783 263.699 cv
cp
207.459 263.708 mo
207.38 263.708 207.301 263.689 207.227 263.648 cv
207.08 263.566 206.936 263.478 206.797 263.385 cv
206.583 263.244 206.527 262.961 206.672 262.753 cv
206.818 262.545 207.109 262.491 207.322 262.632 cv
207.442 262.712 207.566 262.787 207.692 262.858 cv
207.916 262.983 207.994 263.261 207.865 263.479 cv
207.779 263.626 207.621 263.708 207.459 263.708 cv
cp
211.09 264.524 mo
210.627 264.524 li
210.369 264.524 210.155 264.32 210.155 264.069 cv
210.155 263.818 210.36 263.614 210.618 263.614 cv
211.09 263.614 li
211.348 263.614 211.557 263.818 211.557 264.069 cv
211.557 264.32 211.348 264.524 211.09 264.524 cv
cp
214.867 264.524 mo
214.395 264.524 li
214.137 264.524 213.927 264.32 213.927 264.069 cv
213.927 263.818 214.137 263.614 214.395 263.614 cv
214.867 263.614 li
215.125 263.614 215.335 263.818 215.335 264.069 cv
215.335 264.32 215.125 264.524 214.867 264.524 cv
cp
218.644 264.524 mo
218.172 264.524 li
217.914 264.524 217.705 264.32 217.705 264.069 cv
217.705 263.818 217.914 263.614 218.172 263.614 cv
218.644 263.614 li
218.902 263.614 219.112 263.818 219.112 264.069 cv
219.112 264.32 218.902 264.524 218.644 264.524 cv
cp
222.421 264.524 mo
221.949 264.524 li
221.691 264.524 221.482 264.32 221.482 264.069 cv
221.482 263.818 221.691 263.614 221.949 263.614 cv
222.421 263.614 li
222.679 263.614 222.889 263.818 222.889 264.069 cv
222.889 264.32 222.679 264.524 222.421 264.524 cv
cp
226.198 264.524 mo
225.726 264.524 li
225.468 264.524 225.259 264.32 225.259 264.069 cv
225.259 263.818 225.468 263.614 225.726 263.614 cv
226.198 263.614 li
226.457 263.614 226.666 263.818 226.666 264.069 cv
226.666 264.32 226.457 264.524 226.198 264.524 cv
cp
229.976 264.524 mo
229.503 264.524 li
229.245 264.524 229.036 264.32 229.036 264.069 cv
229.036 263.818 229.245 263.614 229.503 263.614 cv
229.976 263.614 li
230.234 263.614 230.443 263.818 230.443 264.069 cv
230.443 264.32 230.234 264.524 229.976 264.524 cv
cp
233.753 264.524 mo
233.281 264.524 li
233.023 264.524 232.813 264.32 232.813 264.069 cv
232.813 263.818 233.023 263.614 233.281 263.614 cv
233.753 263.614 li
234.011 263.614 234.22 263.818 234.22 264.069 cv
234.22 264.32 234.011 264.524 233.753 264.524 cv
cp
237.53 264.524 mo
237.058 264.524 li
236.8 264.524 236.59 264.32 236.59 264.069 cv
236.59 263.818 236.8 263.614 237.058 263.614 cv
237.53 263.614 li
237.788 263.614 237.997 263.818 237.997 264.069 cv
237.997 264.32 237.788 264.524 237.53 264.524 cv
cp
241.307 264.524 mo
240.835 264.524 li
240.577 264.524 240.368 264.32 240.368 264.069 cv
240.368 263.818 240.577 263.614 240.835 263.614 cv
241.307 263.614 li
241.565 263.614 241.775 263.818 241.775 264.069 cv
241.775 264.32 241.565 264.524 241.307 264.524 cv
cp
245.084 264.524 mo
244.612 264.524 li
244.354 264.524 244.145 264.32 244.145 264.069 cv
244.145 263.818 244.354 263.614 244.612 263.614 cv
245.084 263.614 li
245.342 263.614 245.552 263.818 245.552 264.069 cv
245.552 264.32 245.342 264.524 245.084 264.524 cv
cp
248.861 264.524 mo
248.389 264.524 li
248.131 264.524 247.922 264.32 247.922 264.069 cv
247.922 263.818 248.131 263.614 248.389 263.614 cv
248.861 263.614 li
249.12 263.614 249.329 263.818 249.329 264.069 cv
249.329 264.32 249.12 264.524 248.861 264.524 cv
cp
252.639 264.524 mo
252.166 264.524 li
251.908 264.524 251.699 264.32 251.699 264.069 cv
251.699 263.818 251.908 263.614 252.166 263.614 cv
252.639 263.614 li
252.897 263.614 253.106 263.818 253.106 264.069 cv
253.106 264.32 252.897 264.524 252.639 264.524 cv
cp
256.416 264.524 mo
255.944 264.524 li
255.686 264.524 255.476 264.32 255.476 264.069 cv
255.476 263.818 255.686 263.614 255.944 263.614 cv
256.416 263.614 li
256.674 263.614 256.883 263.818 256.883 264.069 cv
256.883 264.32 256.674 264.524 256.416 264.524 cv
cp
260.193 264.524 mo
259.721 264.524 li
259.462 264.524 259.253 264.32 259.253 264.069 cv
259.253 263.818 259.462 263.614 259.721 263.614 cv
260.193 263.614 li
260.451 263.614 260.66 263.818 260.66 264.069 cv
260.66 264.32 260.451 264.524 260.193 264.524 cv
cp
263.97 264.524 mo
263.498 264.524 li
263.24 264.524 263.03 264.32 263.03 264.069 cv
263.03 263.818 263.24 263.614 263.498 263.614 cv
263.97 263.614 li
264.228 263.614 264.438 263.818 264.438 264.069 cv
264.438 264.32 264.228 264.524 263.97 264.524 cv
cp
267.747 264.524 mo
267.275 264.524 li
267.017 264.524 266.808 264.32 266.808 264.069 cv
266.808 263.818 267.017 263.614 267.275 263.614 cv
267.747 263.614 li
268.005 263.614 268.215 263.818 268.215 264.069 cv
268.215 264.32 268.005 264.524 267.747 264.524 cv
cp
271.524 264.524 mo
271.052 264.524 li
270.794 264.524 270.585 264.32 270.585 264.069 cv
270.585 263.818 270.794 263.614 271.052 263.614 cv
271.524 263.614 li
271.783 263.614 271.992 263.818 271.992 264.069 cv
271.992 264.32 271.783 264.524 271.524 264.524 cv
cp
275.301 264.524 mo
274.829 264.524 li
274.571 264.524 274.362 264.32 274.362 264.069 cv
274.362 263.818 274.571 263.614 274.829 263.614 cv
275.301 263.614 li
275.56 263.614 275.769 263.818 275.769 264.069 cv
275.769 264.32 275.56 264.524 275.301 264.524 cv
cp
278.991 264.524 mo
278.49 264.524 li
278.232 264.524 278.023 264.32 278.023 264.069 cv
278.023 263.818 278.232 263.614 278.49 263.614 cv
278.962 263.614 li
279.22 263.614 279.444 263.818 279.444 264.069 cv
279.444 264.32 279.249 264.524 278.991 264.524 cv
cp
282.627 264.524 mo
282.127 264.524 li
281.868 264.524 281.659 264.32 281.659 264.069 cv
281.659 263.818 281.868 263.614 282.127 263.614 cv
282.599 263.614 li
282.857 263.614 283.081 263.818 283.081 264.069 cv
283.081 264.32 282.885 264.524 282.627 264.524 cv
cp
.698039 .458824 .278431 rgb
f
186.398 223.012 mo
183.298 223.012 179.563 223.68 175.621 224.462 cv
168.055 225.963 160.667 227.521 160.667 227.521 cv
181.595 265.582 li
181.595 265.582 183.364 323.031 183.364 328.423 cv
197.845 319.559 li
199.848 318.36 203.054 317.228 203.054 314.351 cv
203.054 244.297 li
203.054 232.542 198.153 223.012 186.398 223.012 cv
cp
.756863 .396078 .0313726 rgb
f
186.398 223.012 mo
182.898 223.012 179.624 223.667 176.643 224.261 cv
170.941 225.396 166.801 226.263 162.742 227.107 cv
166.43 226.378 175.573 226.693 182.985 236.166 cv
184.845 238.543 187.243 243.963 187.243 248.447 cv
187.243 274.512 187.22 321.889 187.22 326.043 cv
197.845 319.559 li
199.997 318.236 203.054 317.228 203.054 314.351 cv
203.054 244.297 li
203.054 232.542 198.153 223.012 186.398 223.012 cv
cp
.898039 .501961 .145098 rgb
f
187.23 299.422 mo
187.23 299.422 187.22 324.145 187.22 326.043 cv
197.845 319.559 li
199.997 318.236 203.054 317.228 203.054 314.351 cv
203.054 296.008 li
187.23 299.422 li
cp
.678431 .360784 .0431373 rgb
f
187.22 323.852 mo
187.22 324.732 187.22 325.704 187.22 326.043 cv
197.845 319.559 li
199.605 318.477 201.97 317.605 202.773 315.75 cv
201.499 316.326 192.521 321.45 187.22 323.852 cv
cp
.607843 .305882 .0392157 rgb
f
171.649 227.45 mo
175.017 228.163 179.077 230.281 181.86 233.648 cv
184.871 232.376 194.267 227.651 195.521 226.794 cv
194.264 224.846 190.108 223.365 186.981 223.365 cv
184.976 223.677 175.44 226.611 171.649 227.45 cv
cp
.968627 .631373 .223529 rgb
f
163.972 227.279 mo
151.587 227.279 141.546 237.32 141.546 249.705 cv
141.546 262.091 151.587 272.131 163.972 272.131 cv
165.949 272.131 169.691 271.191 169.691 278.14 cv
169.691 323.514 li
169.691 326.544 172.148 329.001 175.179 329.001 cv
180.91 329.001 li
183.941 329.001 186.398 326.544 186.398 323.514 cv
186.398 249.705 li
186.398 237.32 176.358 227.279 163.972 227.279 cv
cp
.94902 .556863 0 rgb
f
163.972 227.279 mo
157.321 227.279 151.347 230.175 147.24 234.773 cv
149.719 232.392 153.064 228.285 165.431 228.96 cv
172.389 229.339 180.642 234.708 182.568 237.167 cv
178.538 231.201 171.713 227.279 163.972 227.279 cv
cp
.968627 .631373 .223529 rgb
f
165.11 269.49 mo
152.725 269.49 146.649 263.947 145.376 262.243 cv
149.406 268.209 156.231 272.131 163.972 272.131 cv
165.949 272.131 169.691 271.191 169.691 278.14 cv
169.691 323.514 li
169.691 326.544 172.148 329.001 175.179 329.001 cv
175.179 329.001 173.434 327.323 173.434 324.292 cv
173.434 266.4 li
172.372 267.614 170.186 269.49 165.11 269.49 cv
cp
.807843 .435294 .0352941 rgb
f
166.065 270.805 mo
155.642 270.805 153.382 269.19 151.46 268.319 cv
155.034 270.726 159.339 272.131 163.972 272.131 cv
165.949 272.131 169.691 271.191 169.691 278.14 cv
169.691 278.14 170.724 275.951 170.724 273.918 cv
170.724 271.266 169.279 270.805 166.065 270.805 cv
cp
.678431 .360784 .0431373 rgb
f
181.14 324.621 mo
180.889 324.621 180.685 324.417 180.685 324.165 cv
180.685 249.098 li
180.685 239.883 173.188 232.385 163.972 232.385 cv
154.757 232.385 147.259 239.883 147.259 249.098 cv
147.259 258.314 154.757 265.811 163.972 265.811 cv
170.924 265.811 174.303 261.123 174.303 251.478 cv
174.303 247.088 171.552 240.555 163.972 240.555 cv
162.454 240.555 154.88 240.995 154.88 249.66 cv
154.88 251.859 154.88 257.702 163.972 257.702 cv
164.224 257.702 164.427 257.906 164.427 258.158 cv
164.427 258.409 164.224 258.613 163.972 258.613 cv
153.969 258.613 153.969 251.874 153.969 249.66 cv
153.969 248.635 154.25 239.645 163.972 239.645 cv
172.219 239.645 175.213 246.722 175.213 251.478 cv
175.213 261.735 171.536 266.721 163.972 266.721 cv
154.255 266.721 146.349 258.816 146.349 249.098 cv
146.349 239.381 154.255 231.475 163.972 231.475 cv
173.69 231.475 181.595 239.381 181.595 249.098 cv
181.595 324.165 li
181.595 324.417 181.392 324.621 181.14 324.621 cv
cp
.737255 .4 0 rgb
f
181.14 325.303 mo
180.512 325.303 180.002 324.794 180.002 324.165 cv
180.002 323.938 li
180.002 323.309 180.512 322.8 181.14 322.8 cv
181.769 322.8 182.278 323.309 182.278 323.938 cv
182.278 324.165 li
182.278 324.794 181.769 325.303 181.14 325.303 cv
cp
.490196 .278431 .105882 rgb
f
181.14 318.4 mo
180.512 318.4 180.002 317.891 180.002 317.262 cv
180.002 316.817 li
180.002 316.188 180.512 315.679 181.14 315.679 cv
181.769 315.679 182.278 316.188 182.278 316.817 cv
182.278 317.262 li
182.278 317.891 181.769 318.4 181.14 318.4 cv
cp
181.14 321.96 mo
180.512 321.96 180.002 321.451 180.002 320.822 cv
180.002 320.377 li
180.002 319.749 180.512 319.239 181.14 319.239 cv
181.769 319.239 182.278 319.749 182.278 320.377 cv
182.278 320.822 li
182.278 321.451 181.769 321.96 181.14 321.96 cv
cp
f
162.536 233.127 mo
161.949 233.127 161.451 232.677 161.403 232.082 cv
161.352 231.455 161.818 230.906 162.445 230.855 cv
162.601 230.842 162.759 230.831 162.916 230.822 cv
163.545 230.793 164.082 231.266 164.117 231.893 cv
164.153 232.521 163.673 233.059 163.046 233.094 cv
162.907 233.102 162.768 233.112 162.63 233.123 cv
162.598 233.126 162.567 233.127 162.536 233.127 cv
cp
166.532 233.257 mo
166.476 233.257 166.42 233.253 166.363 233.245 cv
166.226 233.224 166.088 233.206 165.95 233.189 cv
165.326 233.112 164.883 232.544 164.96 231.92 cv
165.037 231.296 165.601 230.85 166.229 230.93 cv
166.386 230.949 166.542 230.97 166.698 230.993 cv
167.32 231.086 167.749 231.665 167.656 232.287 cv
167.572 232.852 167.086 233.257 166.532 233.257 cv
cp
159.045 233.786 mo
158.555 233.786 158.102 233.466 157.955 232.972 cv
157.776 232.37 158.119 231.736 158.721 231.557 cv
158.872 231.512 159.023 231.469 159.176 231.427 cv
159.782 231.262 160.408 231.621 160.572 232.227 cv
160.737 232.834 160.378 233.459 159.772 233.624 cv
159.637 233.66 159.504 233.698 159.371 233.738 cv
159.262 233.77 159.153 233.786 159.045 233.786 cv
cp
169.97 234.145 mo
169.838 234.145 169.703 234.122 169.572 234.073 cv
169.443 234.025 169.313 233.978 169.182 233.933 cv
168.588 233.729 168.271 233.082 168.475 232.487 cv
168.679 231.893 169.326 231.576 169.921 231.78 cv
170.071 231.832 170.22 231.885 170.369 231.941 cv
170.957 232.161 171.257 232.816 171.037 233.405 cv
170.866 233.863 170.432 234.145 169.97 234.145 cv
cp
155.766 235.154 mo
155.363 235.154 154.973 234.939 154.766 234.561 cv
154.465 234.01 154.667 233.318 155.219 233.017 cv
155.359 232.94 155.499 232.866 155.641 232.794 cv
156.199 232.507 156.886 232.728 157.172 233.288 cv
157.459 233.848 157.237 234.533 156.678 234.82 cv
156.554 234.883 156.432 234.947 156.311 235.014 cv
156.138 235.109 155.95 235.154 155.766 235.154 cv
cp
173.15 235.726 mo
172.942 235.726 172.731 235.669 172.542 235.549 cv
172.425 235.475 172.307 235.402 172.188 235.331 cv
171.649 235.008 171.473 234.309 171.796 233.77 cv
172.119 233.23 172.818 233.055 173.357 233.378 cv
173.493 233.459 173.627 233.542 173.76 233.626 cv
174.291 233.962 174.449 234.665 174.112 235.196 cv
173.896 235.538 173.527 235.726 173.15 235.726 cv
cp
152.838 237.168 mo
152.516 237.168 152.197 237.033 151.972 236.769 cv
151.564 236.292 151.62 235.573 152.098 235.165 cv
152.219 235.062 152.341 234.961 152.464 234.861 cv
152.953 234.465 153.669 234.542 154.064 235.03 cv
154.46 235.518 154.384 236.235 153.896 236.63 cv
153.788 236.718 153.682 236.806 153.576 236.896 cv
153.362 237.079 153.099 237.168 152.838 237.168 cv
cp
175.94 237.927 mo
175.654 237.927 175.368 237.82 175.146 237.605 cv
175.047 237.508 174.947 237.413 174.845 237.319 cv
174.383 236.893 174.354 236.173 174.781 235.711 cv
175.207 235.249 175.927 235.221 176.389 235.646 cv
176.505 235.754 176.62 235.863 176.733 235.973 cv
177.184 236.412 177.194 237.132 176.756 237.583 cv
176.533 237.812 176.236 237.927 175.94 237.927 cv
cp
150.385 239.74 mo
150.142 239.74 149.897 239.663 149.69 239.502 cv
149.192 239.118 149.101 238.403 149.485 237.906 cv
149.582 237.781 149.68 237.657 149.78 237.534 cv
150.177 237.047 150.894 236.974 151.381 237.372 cv
151.869 237.769 151.941 238.486 151.544 238.973 cv
151.457 239.08 151.371 239.188 151.286 239.298 cv
151.062 239.588 150.725 239.74 150.385 239.74 cv
cp
178.221 240.654 mo
177.854 240.654 177.495 240.478 177.275 240.151 cv
177.198 240.036 177.119 239.923 177.039 239.81 cv
176.674 239.298 176.794 238.587 177.306 238.223 cv
177.817 237.858 178.528 237.977 178.893 238.49 cv
178.985 238.619 179.075 238.749 179.163 238.88 cv
179.514 239.402 179.376 240.109 178.855 240.46 cv
178.66 240.591 178.439 240.654 178.221 240.654 cv
cp
162.387 241.329 mo
161.818 241.329 161.327 240.903 161.258 240.324 cv
161.185 239.7 161.631 239.134 162.255 239.06 cv
162.413 239.042 162.573 239.026 162.737 239.012 cv
163.362 238.962 163.913 239.426 163.965 240.052 cv
164.017 240.678 163.551 241.228 162.925 241.28 cv
162.788 241.292 162.654 241.305 162.522 241.321 cv
162.477 241.326 162.432 241.329 162.387 241.329 cv
cp
166.373 241.464 mo
166.3 241.464 166.225 241.456 166.151 241.442 cv
166.021 241.416 165.89 241.393 165.757 241.372 cv
165.136 241.274 164.712 240.692 164.81 240.071 cv
164.907 239.449 165.49 239.025 166.111 239.123 cv
166.274 239.149 166.434 239.177 166.593 239.209 cv
167.209 239.331 167.61 239.93 167.488 240.546 cv
167.381 241.088 166.905 241.464 166.373 241.464 cv
cp
159.002 242.341 mo
158.594 242.341 158.199 242.12 157.995 241.734 cv
157.702 241.178 157.914 240.489 158.47 240.196 cv
158.617 240.119 158.767 240.044 158.921 239.973 cv
159.49 239.709 160.168 239.956 160.432 240.527 cv
160.697 241.097 160.448 241.774 159.878 242.038 cv
159.76 242.093 159.645 242.15 159.532 242.209 cv
159.363 242.298 159.181 242.341 159.002 242.341 cv
cp
169.669 242.74 mo
169.465 242.74 169.258 242.685 169.072 242.569 cv
168.962 242.501 168.849 242.435 168.734 242.372 cv
168.185 242.066 167.987 241.374 168.292 240.824 cv
168.597 240.275 169.289 240.077 169.84 240.382 cv
169.986 240.463 170.129 240.547 170.269 240.633 cv
170.803 240.964 170.969 241.665 170.638 242.2 cv
170.423 242.548 170.051 242.74 169.669 242.74 cv
cp
148.513 242.758 mo
148.346 242.758 148.177 242.722 148.017 242.644 cv
147.451 242.369 147.216 241.688 147.49 241.123 cv
147.559 240.982 147.629 240.841 147.701 240.702 cv
147.99 240.143 148.676 239.924 149.235 240.212 cv
149.793 240.5 150.012 241.187 149.724 241.745 cv
149.66 241.868 149.598 241.993 149.537 242.117 cv
149.341 242.523 148.935 242.758 148.513 242.758 cv
cp
179.89 243.792 mo
179.441 243.792 179.015 243.524 178.835 243.082 cv
178.783 242.953 178.73 242.825 178.674 242.699 cv
178.422 242.123 178.685 241.452 179.261 241.2 cv
179.836 240.948 180.508 241.211 180.759 241.787 cv
180.823 241.932 180.885 242.079 180.944 242.226 cv
181.181 242.809 180.9 243.472 180.318 243.708 cv
180.178 243.765 180.033 243.792 179.89 243.792 cv
cp
156.333 244.647 mo
156.099 244.647 155.863 244.576 155.66 244.426 cv
155.154 244.055 155.044 243.342 155.416 242.836 cv
155.516 242.7 155.619 242.566 155.728 242.435 cv
156.127 241.949 156.845 241.88 157.33 242.279 cv
157.815 242.678 157.885 243.396 157.485 243.881 cv
157.404 243.98 157.326 244.081 157.251 244.183 cv
157.028 244.486 156.683 244.647 156.333 244.647 cv
cp
172.281 245.128 mo
171.938 245.128 171.599 244.973 171.375 244.68 cv
171.295 244.574 171.213 244.471 171.128 244.368 cv
170.726 243.884 170.793 243.167 171.277 242.766 cv
171.762 242.364 172.479 242.432 172.88 242.915 cv
172.985 243.042 173.087 243.17 173.186 243.3 cv
173.566 243.8 173.47 244.514 172.97 244.895 cv
172.764 245.052 172.522 245.128 172.281 245.128 cv
cp
147.306 246.1 mo
147.216 246.1 147.125 246.09 147.033 246.067 cv
146.423 245.916 146.05 245.3 146.201 244.689 cv
146.239 244.535 146.279 244.382 146.321 244.229 cv
146.488 243.623 147.115 243.268 147.721 243.434 cv
148.326 243.601 148.682 244.228 148.515 244.834 cv
148.479 244.967 148.444 245.1 148.411 245.234 cv
148.283 245.753 147.818 246.1 147.306 246.1 cv
cp
180.872 247.207 mo
180.331 247.207 179.851 246.82 179.753 246.268 cv
179.729 246.132 179.703 245.996 179.675 245.861 cv
179.549 245.245 179.945 244.644 180.561 244.517 cv
181.178 244.39 181.779 244.788 181.905 245.403 cv
181.937 245.558 181.966 245.714 181.994 245.87 cv
182.104 246.489 181.692 247.08 181.073 247.19 cv
181.005 247.202 180.939 247.207 180.872 247.207 cv
cp
154.827 247.852 mo
154.729 247.852 154.628 247.84 154.528 247.812 cv
153.922 247.647 153.564 247.022 153.729 246.415 cv
153.771 246.26 153.817 246.103 153.866 245.945 cv
154.055 245.346 154.695 245.012 155.294 245.201 cv
155.893 245.39 156.226 246.029 156.038 246.628 cv
155.997 246.757 155.96 246.886 155.925 247.013 cv
155.787 247.519 155.328 247.852 154.827 247.852 cv
cp
173.963 248.252 mo
173.498 248.252 173.061 247.965 172.893 247.503 cv
172.847 247.376 172.798 247.249 172.747 247.122 cv
172.513 246.539 172.796 245.876 173.38 245.642 cv
173.963 245.407 174.625 245.691 174.86 246.274 cv
174.92 246.424 174.977 246.574 175.032 246.725 cv
175.247 247.316 174.942 247.969 174.352 248.184 cv
174.223 248.23 174.092 248.252 173.963 248.252 cv
cp
146.815 249.619 mo
146.802 249.619 146.788 249.619 146.774 249.618 cv
146.146 249.596 145.655 249.068 145.677 248.44 cv
145.683 248.281 145.691 248.123 145.7 247.966 cv
145.739 247.339 146.275 246.857 146.907 246.9 cv
147.534 246.939 148.011 247.479 147.972 248.107 cv
147.964 248.244 147.957 248.383 147.952 248.522 cv
147.93 249.136 147.425 249.619 146.815 249.619 cv
cp
181.14 250.751 mo
180.512 250.751 180.002 250.241 180.002 249.613 cv
180.002 249.168 li
180.002 248.539 180.512 248.03 181.14 248.03 cv
181.769 248.03 182.278 248.539 182.278 249.168 cv
182.278 249.613 li
182.278 250.241 181.769 250.751 181.14 250.751 cv
cp
154.432 251.382 mo
153.818 251.382 153.312 250.892 153.295 250.275 cv
153.29 250.113 153.288 249.956 153.287 249.805 cv
153.283 249.176 153.789 248.664 154.418 248.66 cv
155.038 248.661 155.559 249.162 155.563 249.791 cv
155.564 249.926 155.566 250.067 155.57 250.212 cv
155.587 250.841 155.092 251.364 154.464 251.381 cv
154.453 251.381 154.442 251.382 154.432 251.382 cv
cp
174.72 251.722 mo
174.133 251.722 173.634 251.27 173.587 250.674 cv
173.577 250.542 173.563 250.407 173.548 250.27 cv
173.476 249.645 173.925 249.081 174.55 249.01 cv
175.173 248.938 175.738 249.387 175.809 250.012 cv
175.828 250.175 175.843 250.336 175.856 250.494 cv
175.906 251.121 175.438 251.669 174.812 251.719 cv
174.781 251.721 174.751 251.722 174.72 251.722 cv
cp
147.051 253.164 mo
146.508 253.164 146.027 252.773 145.931 252.219 cv
145.904 252.063 145.88 251.907 145.857 251.75 cv
145.767 251.128 146.198 250.55 146.82 250.46 cv
147.442 250.369 148.019 250.801 148.109 251.423 cv
148.129 251.56 148.151 251.697 148.174 251.833 cv
148.281 252.452 147.865 253.041 147.246 253.147 cv
147.18 253.158 147.115 253.164 147.051 253.164 cv
cp
181.14 254.311 mo
180.512 254.311 180.002 253.802 180.002 253.173 cv
180.002 252.728 li
180.002 252.1 180.512 251.59 181.14 251.59 cv
181.769 251.59 182.278 252.1 182.278 252.728 cv
182.278 253.173 li
182.278 253.802 181.769 254.311 181.14 254.311 cv
cp
155.092 254.863 mo
154.646 254.863 154.222 254.598 154.041 254.16 cv
153.975 254.001 153.914 253.84 153.858 253.68 cv
153.653 253.086 153.968 252.438 154.562 252.233 cv
155.157 252.028 155.805 252.343 156.01 252.937 cv
156.05 253.054 156.095 253.171 156.143 253.288 cv
156.384 253.869 156.109 254.535 155.528 254.775 cv
155.385 254.835 155.238 254.863 155.092 254.863 cv
cp
174.667 255.281 mo
174.64 255.281 174.612 255.28 174.584 255.278 cv
173.957 255.232 173.486 254.687 173.531 254.061 cv
173.542 253.918 173.551 253.775 173.56 253.631 cv
173.597 253.003 174.139 252.523 174.763 252.563 cv
175.391 252.6 175.869 253.139 175.832 253.766 cv
175.823 253.92 175.812 254.073 175.801 254.225 cv
175.758 254.824 175.259 255.281 174.667 255.281 cv
cp
148.016 256.585 mo
147.564 256.585 147.136 256.314 146.959 255.867 cv
146.9 255.721 146.843 255.573 146.789 255.424 cv
146.571 254.834 146.873 254.18 147.462 253.962 cv
148.052 253.745 148.707 254.046 148.924 254.636 cv
148.972 254.767 149.022 254.897 149.074 255.026 cv
149.306 255.61 149.021 256.272 148.437 256.504 cv
148.299 256.559 148.156 256.585 148.016 256.585 cv
cp
157.275 257.609 mo
157.046 257.609 156.815 257.541 156.615 257.398 cv
156.471 257.296 156.334 257.191 156.202 257.083 cv
155.715 256.686 155.643 255.969 156.041 255.482 cv
156.438 254.995 157.156 254.923 157.642 255.32 cv
157.736 255.397 157.834 255.471 157.936 255.544 cv
158.448 255.909 158.567 256.62 158.202 257.132 cv
157.98 257.443 157.63 257.609 157.275 257.609 cv
cp
181.14 257.872 mo
180.512 257.872 180.002 257.362 180.002 256.734 cv
180.002 256.289 li
180.002 255.66 180.512 255.151 181.14 255.151 cv
181.769 255.151 182.278 255.66 182.278 256.289 cv
182.278 256.734 li
182.278 257.362 181.769 257.872 181.14 257.872 cv
cp
174.174 258.804 mo
174.093 258.804 174.01 258.796 173.928 258.777 cv
173.314 258.642 172.926 258.034 173.062 257.421 cv
173.092 257.285 173.12 257.149 173.148 257.011 cv
173.269 256.393 173.87 255.993 174.484 256.114 cv
175.101 256.235 175.502 256.834 175.381 257.45 cv
175.35 257.606 175.318 257.759 175.284 257.912 cv
175.167 258.443 174.697 258.804 174.174 258.804 cv
cp
160.536 258.967 mo
160.456 258.967 160.376 258.959 160.294 258.941 cv
160.132 258.906 159.974 258.869 159.82 258.829 cv
159.211 258.674 158.844 258.054 159 257.445 cv
159.156 256.836 159.778 256.47 160.384 256.625 cv
160.512 256.657 160.642 256.688 160.776 256.716 cv
161.39 256.849 161.78 257.455 161.647 258.07 cv
161.532 258.603 161.06 258.967 160.536 258.967 cv
cp
149.668 259.733 mo
149.3 259.733 148.938 259.554 148.719 259.224 cv
148.632 259.092 148.546 258.96 148.462 258.826 cv
148.127 258.294 148.287 257.592 148.82 257.257 cv
149.352 256.922 150.054 257.082 150.389 257.614 cv
150.463 257.732 150.539 257.849 150.616 257.965 cv
150.963 258.489 150.82 259.195 150.297 259.543 cv
150.103 259.671 149.884 259.733 149.668 259.733 cv
cp
181.14 261.432 mo
180.512 261.432 180.002 260.923 180.002 260.294 cv
180.002 259.849 li
180.002 259.22 180.512 258.711 181.14 258.711 cv
181.769 258.711 182.278 259.22 182.278 259.849 cv
182.278 260.294 li
182.278 260.923 181.769 261.432 181.14 261.432 cv
cp
173.035 262.169 mo
172.868 262.169 172.697 262.131 172.536 262.052 cv
171.972 261.776 171.738 261.095 172.014 260.53 cv
172.073 260.41 172.129 260.289 172.185 260.165 cv
172.44 259.59 173.112 259.331 173.687 259.587 cv
174.261 259.842 174.52 260.515 174.264 261.089 cv
174.198 261.238 174.129 261.386 174.059 261.53 cv
173.861 261.934 173.456 262.169 173.035 262.169 cv
cp
151.93 262.473 mo
151.642 262.473 151.353 262.364 151.131 262.145 cv
151.019 262.035 150.908 261.922 150.798 261.809 cv
150.362 261.356 150.375 260.636 150.827 260.2 cv
151.28 259.763 152 259.777 152.436 260.228 cv
152.532 260.328 152.63 260.427 152.729 260.524 cv
153.177 260.965 153.182 261.686 152.741 262.133 cv
152.518 262.359 152.224 262.473 151.93 262.473 cv
cp
154.704 264.691 mo
154.493 264.691 154.279 264.632 154.088 264.509 cv
153.956 264.424 153.825 264.338 153.695 264.249 cv
153.175 263.896 153.04 263.189 153.393 262.669 cv
153.746 262.149 154.454 262.013 154.974 262.366 cv
155.089 262.444 155.205 262.521 155.322 262.596 cv
155.85 262.937 156.002 263.641 155.661 264.169 cv
155.444 264.507 155.078 264.691 154.704 264.691 cv
cp
181.14 264.993 mo
180.512 264.993 180.002 264.483 180.002 263.854 cv
180.002 263.409 li
180.002 262.781 180.512 262.272 181.14 262.272 cv
181.769 262.272 182.278 262.781 182.278 263.409 cv
182.278 263.854 li
182.278 264.483 181.769 264.993 181.14 264.993 cv
cp
170.953 265.025 mo
170.646 265.025 170.34 264.901 170.116 264.657 cv
169.69 264.195 169.72 263.475 170.182 263.049 cv
170.277 262.962 170.369 262.873 170.458 262.782 cv
170.898 262.333 171.618 262.325 172.068 262.764 cv
172.517 263.204 172.524 263.925 172.085 264.374 cv
171.968 264.494 171.847 264.611 171.724 264.724 cv
171.505 264.926 171.229 265.025 170.953 265.025 cv
cp
157.877 266.291 mo
157.742 266.291 157.605 266.267 157.471 266.216 cv
157.324 266.16 157.177 266.102 157.031 266.042 cv
156.45 265.804 156.172 265.139 156.41 264.558 cv
156.649 263.976 157.313 263.697 157.895 263.937 cv
158.023 263.989 158.153 264.04 158.283 264.09 cv
158.87 264.314 159.165 264.971 158.941 265.559 cv
158.767 266.012 158.335 266.291 157.877 266.291 cv
cp
167.909 266.812 mo
167.435 266.812 166.993 266.514 166.832 266.04 cv
166.629 265.445 166.948 264.799 167.543 264.596 cv
167.667 264.554 167.789 264.509 167.909 264.462 cv
168.492 264.23 169.154 264.518 169.385 265.103 cv
169.616 265.687 169.329 266.348 168.744 266.579 cv
168.591 266.639 168.435 266.697 168.276 266.751 cv
168.154 266.792 168.031 266.812 167.909 266.812 cv
cp
161.313 267.2 mo
161.255 267.2 161.196 267.195 161.137 267.186 cv
160.98 267.161 160.825 267.135 160.67 267.107 cv
160.051 266.995 159.641 266.402 159.753 265.784 cv
159.866 265.165 160.459 264.755 161.077 264.867 cv
161.213 264.892 161.35 264.915 161.487 264.937 cv
162.108 265.034 162.533 265.615 162.437 266.237 cv
162.349 266.798 161.865 267.2 161.313 267.2 cv
cp
164.415 267.398 mo
163.801 267.398 163.295 266.909 163.278 266.292 cv
163.26 265.664 163.755 265.14 164.383 265.122 cv
164.522 265.118 164.659 265.113 164.794 265.105 cv
165.422 265.066 165.959 265.547 165.996 266.175 cv
166.032 266.803 165.553 267.341 164.925 267.377 cv
164.768 267.386 164.609 267.393 164.447 267.398 cv
164.437 267.398 164.426 267.398 164.415 267.398 cv
cp
181.14 268.553 mo
180.512 268.553 180.002 268.044 180.002 267.415 cv
180.002 266.97 li
180.002 266.341 180.512 265.832 181.14 265.832 cv
181.769 265.832 182.278 266.341 182.278 266.97 cv
182.278 267.415 li
182.278 268.044 181.769 268.553 181.14 268.553 cv
cp
181.14 272.114 mo
180.512 272.114 180.002 271.604 180.002 270.976 cv
180.002 270.53 li
180.002 269.902 180.512 269.392 181.14 269.392 cv
181.769 269.392 182.278 269.902 182.278 270.53 cv
182.278 270.976 li
182.278 271.604 181.769 272.114 181.14 272.114 cv
cp
181.14 275.674 mo
180.512 275.674 180.002 275.165 180.002 274.536 cv
180.002 274.091 li
180.002 273.462 180.512 272.953 181.14 272.953 cv
181.769 272.953 182.278 273.462 182.278 274.091 cv
182.278 274.536 li
182.278 275.165 181.769 275.674 181.14 275.674 cv
cp
181.14 279.235 mo
180.512 279.235 180.002 278.725 180.002 278.097 cv
180.002 277.652 li
180.002 277.023 180.512 276.513 181.14 276.513 cv
181.769 276.513 182.278 277.023 182.278 277.652 cv
182.278 278.097 li
182.278 278.725 181.769 279.235 181.14 279.235 cv
cp
181.14 282.795 mo
180.512 282.795 180.002 282.286 180.002 281.657 cv
180.002 281.212 li
180.002 280.583 180.512 280.074 181.14 280.074 cv
181.769 280.074 182.278 280.583 182.278 281.212 cv
182.278 281.657 li
182.278 282.286 181.769 282.795 181.14 282.795 cv
cp
181.14 286.356 mo
180.512 286.356 180.002 285.846 180.002 285.217 cv
180.002 284.772 li
180.002 284.144 180.512 283.634 181.14 283.634 cv
181.769 283.634 182.278 284.144 182.278 284.772 cv
182.278 285.217 li
182.278 285.846 181.769 286.356 181.14 286.356 cv
cp
181.14 289.916 mo
180.512 289.916 180.002 289.407 180.002 288.778 cv
180.002 288.333 li
180.002 287.704 180.512 287.195 181.14 287.195 cv
181.769 287.195 182.278 287.704 182.278 288.333 cv
182.278 288.778 li
182.278 289.407 181.769 289.916 181.14 289.916 cv
cp
181.14 293.477 mo
180.512 293.477 180.002 292.967 180.002 292.338 cv
180.002 291.893 li
180.002 291.265 180.512 290.755 181.14 290.755 cv
181.769 290.755 182.278 291.265 182.278 291.893 cv
182.278 292.338 li
182.278 292.967 181.769 293.477 181.14 293.477 cv
cp
181.14 297.037 mo
180.512 297.037 180.002 296.527 180.002 295.899 cv
180.002 295.454 li
180.002 294.825 180.512 294.316 181.14 294.316 cv
181.769 294.316 182.278 294.825 182.278 295.454 cv
182.278 295.899 li
182.278 296.527 181.769 297.037 181.14 297.037 cv
cp
181.14 300.598 mo
180.512 300.598 180.002 300.088 180.002 299.46 cv
180.002 299.014 li
180.002 298.386 180.512 297.876 181.14 297.876 cv
181.769 297.876 182.278 298.386 182.278 299.014 cv
182.278 299.46 li
182.278 300.088 181.769 300.598 181.14 300.598 cv
cp
181.14 304.158 mo
180.512 304.158 180.002 303.649 180.002 303.02 cv
180.002 302.575 li
180.002 301.946 180.512 301.437 181.14 301.437 cv
181.769 301.437 182.278 301.946 182.278 302.575 cv
182.278 303.02 li
182.278 303.649 181.769 304.158 181.14 304.158 cv
cp
181.14 307.719 mo
180.512 307.719 180.002 307.209 180.002 306.581 cv
180.002 306.135 li
180.002 305.507 180.512 304.997 181.14 304.997 cv
181.769 304.997 182.278 305.507 182.278 306.135 cv
182.278 306.581 li
182.278 307.209 181.769 307.719 181.14 307.719 cv
cp
181.14 311.279 mo
180.512 311.279 180.002 310.77 180.002 310.141 cv
180.002 309.696 li
180.002 309.067 180.512 308.558 181.14 308.558 cv
181.769 308.558 182.278 309.067 182.278 309.696 cv
182.278 310.141 li
182.278 310.77 181.769 311.279 181.14 311.279 cv
cp
181.14 314.84 mo
180.512 314.84 180.002 314.33 180.002 313.701 cv
180.002 313.256 li
180.002 312.628 180.512 312.118 181.14 312.118 cv
181.769 312.118 182.278 312.628 182.278 313.256 cv
182.278 313.701 li
182.278 314.33 181.769 314.84 181.14 314.84 cv
cp
f
163.972 259.296 mo
163.733 259.294 li
163.104 259.289 162.599 258.775 162.605 258.146 cv
162.611 257.521 163.119 257.018 163.743 257.018 cv
163.746 257.018 163.75 257.018 163.753 257.018 cv
163.972 257.02 li
164.601 257.02 165.11 257.529 165.11 258.158 cv
165.11 258.786 164.601 259.296 163.972 259.296 cv
cp
f
164.773 257.829 mo
164.773 257.578 164.57 257.374 164.318 257.374 cv
164.093 257.373 li
164.092 257.373 164.09 257.373 164.089 257.373 cv
163.84 257.373 163.636 257.574 163.634 257.824 cv
163.632 258.076 163.834 258.281 164.085 258.283 cv
164.318 258.284 li
164.57 258.284 164.773 258.081 164.773 257.829 cv
cp
162.92 232.115 mo
163.064 232.103 163.208 232.093 163.353 232.085 cv
163.604 232.07 163.796 231.855 163.782 231.604 cv
163.768 231.353 163.551 231.166 163.301 231.175 cv
163.149 231.184 162.997 231.195 162.846 231.207 cv
162.596 231.228 162.409 231.447 162.43 231.698 cv
162.449 231.936 162.648 232.116 162.883 232.116 cv
162.895 232.116 162.908 232.116 162.92 232.115 cv
cp
167.327 231.858 mo
167.364 231.609 167.192 231.378 166.944 231.341 cv
166.794 231.318 166.643 231.298 166.492 231.279 cv
166.243 231.251 166.015 231.426 165.984 231.675 cv
165.953 231.925 166.13 232.152 166.38 232.183 cv
166.524 232.201 166.667 232.22 166.809 232.241 cv
166.832 232.245 166.855 232.246 166.877 232.246 cv
167.099 232.246 167.293 232.084 167.327 231.858 cv
cp
159.522 232.755 mo
159.66 232.714 159.799 232.674 159.939 232.637 cv
160.182 232.571 160.325 232.32 160.259 232.078 cv
160.194 231.836 159.943 231.694 159.701 231.758 cv
159.554 231.798 159.407 231.839 159.262 231.883 cv
159.021 231.954 158.884 232.208 158.956 232.449 cv
159.015 232.647 159.196 232.774 159.392 232.774 cv
159.435 232.774 159.479 232.768 159.522 232.755 cv
cp
170.743 232.838 mo
170.831 232.602 170.712 232.34 170.476 232.252 cv
170.333 232.199 170.19 232.148 170.046 232.098 cv
169.808 232.016 169.549 232.143 169.467 232.381 cv
169.386 232.619 169.512 232.878 169.75 232.959 cv
169.887 233.006 170.023 233.055 170.158 233.105 cv
170.21 233.125 170.264 233.134 170.317 233.134 cv
170.501 233.134 170.675 233.021 170.743 232.838 cv
cp
156.329 234.086 mo
156.456 234.017 156.584 233.95 156.713 233.884 cv
156.936 233.769 157.025 233.495 156.91 233.271 cv
156.796 233.047 156.522 232.959 156.298 233.073 cv
156.162 233.143 156.027 233.214 155.892 233.288 cv
155.672 233.408 155.591 233.685 155.711 233.905 cv
155.794 234.057 155.95 234.142 156.111 234.142 cv
156.185 234.142 156.26 234.124 156.329 234.086 cv
cp
173.882 234.503 mo
174.016 234.29 173.953 234.009 173.741 233.874 cv
173.613 233.793 173.484 233.714 173.353 233.635 cv
173.137 233.506 172.857 233.576 172.728 233.792 cv
172.599 234.008 172.67 234.288 172.885 234.417 cv
173.009 234.491 173.132 234.566 173.254 234.644 cv
173.329 234.691 173.414 234.714 173.497 234.714 cv
173.648 234.714 173.795 234.639 173.882 234.503 cv
cp
153.479 236.048 mo
153.588 235.955 153.7 235.862 153.812 235.771 cv
154.007 235.613 154.038 235.327 153.879 235.131 cv
153.721 234.936 153.434 234.905 153.239 235.064 cv
153.121 235.16 153.003 235.257 152.888 235.356 cv
152.696 235.519 152.674 235.807 152.837 235.998 cv
152.927 236.103 153.055 236.157 153.184 236.157 cv
153.288 236.157 153.393 236.122 153.479 236.048 cv
cp
176.612 236.778 mo
176.788 236.598 176.784 236.31 176.603 236.134 cv
176.494 236.028 176.384 235.923 176.272 235.82 cv
176.087 235.65 175.799 235.662 175.629 235.846 cv
175.458 236.031 175.47 236.319 175.654 236.489 cv
175.761 236.587 175.865 236.686 175.969 236.787 cv
176.057 236.873 176.172 236.916 176.286 236.916 cv
176.405 236.916 176.523 236.87 176.612 236.778 cv
cp
151.092 238.552 mo
151.18 238.438 151.27 238.325 151.361 238.213 cv
151.52 238.018 151.491 237.732 151.296 237.573 cv
151.101 237.414 150.815 237.443 150.656 237.638 cv
150.56 237.755 150.465 237.875 150.371 237.995 cv
150.218 238.194 150.255 238.48 150.453 238.634 cv
150.536 238.698 150.634 238.729 150.732 238.729 cv
150.868 238.729 151.002 238.668 151.092 238.552 cv
cp
178.82 239.565 mo
179.028 239.425 179.084 239.142 178.943 238.933 cv
178.858 238.807 178.771 238.682 178.683 238.557 cv
178.537 238.353 178.253 238.305 178.048 238.451 cv
177.843 238.596 177.795 238.88 177.941 239.085 cv
178.025 239.203 178.107 239.322 178.188 239.442 cv
178.276 239.572 178.419 239.643 178.566 239.643 cv
178.653 239.643 178.742 239.618 178.82 239.565 cv
cp
162.788 240.314 mo
162.928 240.298 163.07 240.283 163.214 240.271 cv
163.465 240.251 163.651 240.031 163.63 239.78 cv
163.609 239.53 163.391 239.341 163.139 239.364 cv
162.984 239.377 162.831 239.392 162.681 239.41 cv
162.431 239.44 162.253 239.666 162.282 239.916 cv
162.31 240.147 162.506 240.318 162.734 240.318 cv
162.752 240.318 162.77 240.317 162.788 240.314 cv
cp
167.164 240.085 mo
167.213 239.839 167.053 239.599 166.806 239.55 cv
166.656 239.521 166.505 239.494 166.35 239.47 cv
166.104 239.432 165.869 239.6 165.83 239.849 cv
165.791 240.097 165.961 240.33 166.209 240.369 cv
166.351 240.391 166.491 240.416 166.629 240.443 cv
166.659 240.449 166.689 240.452 166.718 240.452 cv
166.931 240.452 167.121 240.302 167.164 240.085 cv
cp
159.56 241.277 mo
159.682 241.212 159.808 241.15 159.937 241.09 cv
160.165 240.984 160.265 240.714 160.159 240.486 cv
160.053 240.258 159.783 240.159 159.554 240.264 cv
159.411 240.331 159.271 240.4 159.135 240.472 cv
158.913 240.589 158.828 240.864 158.945 241.087 cv
159.027 241.241 159.184 241.329 159.348 241.329 cv
159.42 241.329 159.492 241.313 159.56 241.277 cv
cp
170.403 241.512 mo
170.536 241.299 170.469 241.018 170.256 240.886 cv
170.124 240.805 169.99 240.726 169.854 240.65 cv
169.634 240.528 169.357 240.607 169.235 240.827 cv
169.113 241.047 169.192 241.324 169.412 241.446 cv
169.536 241.515 169.658 241.587 169.777 241.66 cv
169.852 241.706 169.934 241.728 170.016 241.728 cv
170.168 241.728 170.317 241.652 170.403 241.512 cv
cp
149.269 241.491 mo
149.333 241.361 149.397 241.232 149.463 241.104 cv
149.579 240.88 149.491 240.606 149.267 240.491 cv
149.044 240.376 148.769 240.463 148.654 240.686 cv
148.585 240.821 148.517 240.956 148.451 241.093 cv
148.341 241.319 148.435 241.592 148.661 241.701 cv
148.725 241.732 148.793 241.747 148.86 241.747 cv
149.028 241.747 149.191 241.653 149.269 241.491 cv
cp
180.407 242.748 mo
180.64 242.653 180.752 242.387 180.658 242.155 cv
180.6 242.013 180.541 241.872 180.48 241.732 cv
180.379 241.501 180.111 241.396 179.881 241.497 cv
179.65 241.598 179.545 241.866 179.646 242.097 cv
179.704 242.229 179.76 242.363 179.814 242.497 cv
179.886 242.674 180.056 242.781 180.236 242.781 cv
180.293 242.781 180.351 242.77 180.407 242.748 cv
cp
157.046 243.451 mo
157.129 243.339 157.215 243.228 157.304 243.119 cv
157.464 242.925 157.436 242.638 157.242 242.478 cv
157.048 242.319 156.761 242.346 156.601 242.54 cv
156.501 242.662 156.405 242.786 156.313 242.911 cv
156.164 243.113 156.207 243.398 156.41 243.547 cv
156.491 243.607 156.585 243.636 156.679 243.636 cv
156.819 243.636 156.957 243.572 157.046 243.451 cv
cp
172.902 244.024 mo
173.102 243.872 173.141 243.586 172.989 243.386 cv
172.895 243.263 172.799 243.142 172.7 243.023 cv
172.54 242.829 172.253 242.803 172.059 242.963 cv
171.866 243.123 171.839 243.41 171.999 243.604 cv
172.09 243.713 172.179 243.825 172.264 243.938 cv
172.354 244.055 172.49 244.117 172.627 244.117 cv
172.723 244.117 172.82 244.087 172.902 244.024 cv
cp
148.094 244.743 mo
148.128 244.602 148.165 244.463 148.203 244.324 cv
148.27 244.082 148.128 243.831 147.885 243.764 cv
147.643 243.696 147.392 243.84 147.326 244.082 cv
147.285 244.229 147.246 244.376 147.21 244.525 cv
147.15 244.769 147.299 245.016 147.543 245.076 cv
147.579 245.085 147.616 245.089 147.652 245.089 cv
147.857 245.089 148.043 244.95 148.094 244.743 cv
cp
181.3 246.189 mo
181.547 246.145 181.712 245.909 181.668 245.661 cv
181.641 245.511 181.613 245.361 181.582 245.212 cv
181.531 244.966 181.292 244.807 181.044 244.858 cv
180.798 244.908 180.639 245.149 180.69 245.395 cv
180.719 245.537 180.746 245.678 180.772 245.821 cv
180.811 246.041 181.003 246.196 181.219 246.196 cv
181.246 246.196 181.272 246.194 181.3 246.189 cv
cp
155.612 246.505 mo
155.649 246.37 155.689 246.233 155.732 246.095 cv
155.808 245.855 155.674 245.6 155.435 245.524 cv
155.195 245.449 154.939 245.582 154.863 245.822 cv
154.817 245.971 154.773 246.119 154.733 246.266 cv
154.667 246.509 154.811 246.759 155.053 246.825 cv
155.093 246.836 155.133 246.841 155.173 246.841 cv
155.373 246.841 155.557 246.708 155.612 246.505 cv
cp
174.464 247.213 mo
174.701 247.127 174.822 246.866 174.737 246.63 cv
174.684 246.487 174.629 246.343 174.572 246.2 cv
174.478 245.967 174.213 245.854 173.98 245.947 cv
173.747 246.041 173.633 246.306 173.727 246.539 cv
173.781 246.673 173.832 246.807 173.881 246.941 cv
173.948 247.126 174.123 247.241 174.309 247.241 cv
174.36 247.241 174.413 247.232 174.464 247.213 cv
cp
147.616 248.169 mo
147.621 248.024 147.628 247.88 147.637 247.736 cv
147.653 247.485 147.462 247.269 147.211 247.253 cv
146.965 247.24 146.744 247.429 146.728 247.68 cv
146.719 247.831 146.712 247.983 146.706 248.136 cv
146.697 248.387 146.893 248.598 147.145 248.607 cv
147.15 248.608 147.156 248.608 147.161 248.608 cv
147.405 248.608 147.607 248.414 147.616 248.169 cv
cp
181.941 249.284 mo
181.941 248.839 li
181.941 248.588 181.738 248.384 181.486 248.384 cv
181.235 248.384 181.031 248.588 181.031 248.839 cv
181.031 249.284 li
181.031 249.536 181.235 249.74 181.486 249.74 cv
181.738 249.74 181.941 249.536 181.941 249.284 cv
cp
154.791 250.37 mo
155.042 250.363 155.24 250.154 155.233 249.903 cv
155.229 249.752 155.227 249.607 155.226 249.467 cv
155.225 249.216 155.021 249.014 154.771 249.014 cv
154.77 249.014 154.769 249.014 154.768 249.014 cv
154.517 249.016 154.314 249.221 154.316 249.473 cv
154.317 249.618 154.319 249.77 154.323 249.928 cv
154.33 250.175 154.533 250.37 154.778 250.37 cv
154.782 250.37 154.787 250.37 154.791 250.37 cv
cp
175.104 250.71 mo
175.354 250.69 175.541 250.471 175.522 250.22 cv
175.51 250.069 175.495 249.916 175.477 249.761 cv
175.448 249.511 175.223 249.33 174.973 249.36 cv
174.723 249.389 174.544 249.614 174.572 249.864 cv
174.589 250.009 174.603 250.152 174.614 250.292 cv
174.633 250.53 174.832 250.711 175.067 250.711 cv
175.079 250.711 175.092 250.711 175.104 250.71 cv
cp
147.476 252.146 mo
147.724 252.103 147.89 251.868 147.847 251.62 cv
147.823 251.478 147.8 251.336 147.78 251.193 cv
147.744 250.944 147.513 250.773 147.264 250.807 cv
147.015 250.844 146.843 251.075 146.879 251.323 cv
146.901 251.475 146.924 251.625 146.95 251.775 cv
146.988 251.996 147.181 252.153 147.398 252.153 cv
147.424 252.153 147.45 252.151 147.476 252.146 cv
cp
181.941 252.845 mo
181.941 252.4 li
181.941 252.148 181.738 251.945 181.486 251.945 cv
181.235 251.945 181.031 252.148 181.031 252.4 cv
181.031 252.845 li
181.031 253.096 181.235 253.3 181.486 253.3 cv
181.738 253.3 181.941 253.096 181.941 252.845 cv
cp
155.613 253.816 mo
155.845 253.72 155.955 253.454 155.859 253.221 cv
155.805 253.092 155.755 252.962 155.71 252.831 cv
155.628 252.594 155.368 252.468 155.131 252.55 cv
154.894 252.632 154.768 252.891 154.85 253.129 cv
154.901 253.276 154.957 253.423 155.018 253.57 cv
155.09 253.745 155.26 253.851 155.438 253.851 cv
155.496 253.851 155.555 253.84 155.613 253.816 cv
cp
175.466 253.847 mo
175.477 253.698 175.487 253.548 175.496 253.397 cv
175.511 253.146 175.32 252.931 175.069 252.916 cv
174.819 252.896 174.602 253.092 174.587 253.343 cv
174.578 253.49 174.569 253.636 174.558 253.781 cv
174.54 254.032 174.729 254.25 174.979 254.268 cv
174.99 254.269 175.001 254.269 175.013 254.269 cv
175.249 254.269 175.449 254.087 175.466 253.847 cv
cp
148.531 255.542 mo
148.764 255.449 148.878 255.184 148.785 254.95 cv
148.732 254.816 148.68 254.68 148.629 254.544 cv
148.543 254.308 148.28 254.187 148.045 254.275 cv
147.809 254.362 147.688 254.624 147.775 254.859 cv
147.828 255.003 147.883 255.145 147.939 255.287 cv
148.01 255.465 148.181 255.574 148.363 255.574 cv
148.418 255.574 148.475 255.564 148.531 255.542 cv
cp
157.992 256.407 mo
158.138 256.203 158.091 255.918 157.886 255.773 cv
157.771 255.691 157.661 255.607 157.556 255.521 cv
157.362 255.362 157.075 255.391 156.916 255.586 cv
156.757 255.781 156.786 256.068 156.98 256.226 cv
157.101 256.325 157.226 256.42 157.357 256.514 cv
157.437 256.571 157.53 256.599 157.621 256.599 cv
157.763 256.599 157.903 256.532 157.992 256.407 cv
cp
181.941 256.405 mo
181.941 255.96 li
181.941 255.709 181.738 255.505 181.486 255.505 cv
181.235 255.505 181.031 255.709 181.031 255.96 cv
181.031 256.405 li
181.031 256.657 181.235 256.861 181.486 256.861 cv
181.738 256.861 181.941 256.657 181.941 256.405 cv
cp
174.964 257.436 mo
174.996 257.289 175.027 257.14 175.057 256.99 cv
175.105 256.743 174.945 256.504 174.698 256.456 cv
174.449 256.405 174.212 256.568 174.163 256.814 cv
174.135 256.957 174.106 257.099 174.075 257.24 cv
174.02 257.485 174.176 257.728 174.421 257.782 cv
174.454 257.79 174.487 257.793 174.52 257.793 cv
174.729 257.793 174.917 257.648 174.964 257.436 cv
cp
161.326 257.597 mo
161.379 257.351 161.223 257.109 160.977 257.056 cv
160.835 257.025 160.697 256.992 160.561 256.958 cv
160.316 256.894 160.07 257.042 160.007 257.286 cv
159.945 257.529 160.092 257.777 160.336 257.84 cv
160.482 257.877 160.631 257.912 160.785 257.945 cv
160.817 257.952 160.85 257.956 160.882 257.956 cv
161.091 257.956 161.28 257.81 161.326 257.597 cv
cp
150.265 258.645 mo
150.475 258.506 150.532 258.224 150.393 258.014 cv
150.313 257.894 150.234 257.772 150.157 257.65 cv
150.023 257.437 149.742 257.373 149.529 257.507 cv
149.316 257.641 149.252 257.922 149.386 258.134 cv
149.467 258.263 149.55 258.391 149.634 258.518 cv
149.722 258.65 149.866 258.721 150.014 258.721 cv
150.1 258.721 150.188 258.697 150.265 258.645 cv
cp
181.941 259.966 mo
181.941 259.521 li
181.941 259.269 181.738 259.066 181.486 259.066 cv
181.235 259.066 181.031 259.269 181.031 259.521 cv
181.031 259.966 li
181.031 260.217 181.235 260.421 181.486 260.421 cv
181.738 260.421 181.941 260.217 181.941 259.966 cv
cp
173.791 260.902 mo
173.859 260.765 173.923 260.625 173.986 260.484 cv
174.089 260.254 173.985 259.985 173.755 259.883 cv
173.526 259.78 173.257 259.884 173.155 260.114 cv
173.096 260.245 173.036 260.375 172.973 260.502 cv
172.863 260.728 172.957 261.001 173.182 261.111 cv
173.247 261.142 173.315 261.157 173.382 261.157 cv
173.55 261.157 173.712 261.064 173.791 260.902 cv
cp
152.6 261.326 mo
152.777 261.147 152.775 260.859 152.596 260.682 cv
152.493 260.581 152.391 260.478 152.291 260.374 cv
152.116 260.194 151.828 260.189 151.647 260.363 cv
151.466 260.537 151.461 260.826 151.636 261.007 cv
151.741 261.116 151.848 261.224 151.957 261.331 cv
152.045 261.418 152.161 261.462 152.276 261.462 cv
152.394 261.462 152.511 261.416 152.6 261.326 cv
cp
155.434 263.471 mo
155.57 263.26 155.509 262.978 155.298 262.842 cv
155.176 262.763 155.056 262.684 154.936 262.603 cv
154.729 262.462 154.446 262.516 154.304 262.724 cv
154.163 262.932 154.217 263.215 154.425 263.356 cv
154.55 263.441 154.677 263.525 154.804 263.607 cv
154.881 263.656 154.966 263.68 155.051 263.68 cv
155.2 263.68 155.347 263.606 155.434 263.471 cv
cp
181.941 263.526 mo
181.941 263.081 li
181.941 262.83 181.738 262.626 181.486 262.626 cv
181.235 262.626 181.031 262.83 181.031 263.081 cv
181.031 263.526 li
181.031 263.778 181.235 263.982 181.486 263.982 cv
181.738 263.982 181.941 263.778 181.941 263.526 cv
cp
171.607 263.893 mo
171.722 263.788 171.834 263.679 171.943 263.568 cv
172.119 263.388 172.116 263.1 171.936 262.924 cv
171.756 262.748 171.468 262.752 171.292 262.931 cv
171.194 263.031 171.094 263.128 170.991 263.223 cv
170.806 263.393 170.794 263.682 170.964 263.866 cv
171.054 263.964 171.176 264.013 171.299 264.013 cv
171.409 264.013 171.52 263.974 171.607 263.893 cv
cp
158.648 264.987 mo
158.738 264.752 158.62 264.489 158.385 264.399 cv
158.25 264.348 158.115 264.295 157.982 264.24 cv
157.75 264.145 157.483 264.256 157.388 264.488 cv
157.293 264.721 157.404 264.987 157.636 265.082 cv
157.777 265.14 157.918 265.196 158.061 265.25 cv
158.114 265.271 158.169 265.28 158.223 265.28 cv
158.406 265.28 158.579 265.168 158.648 264.987 cv
cp
168.402 265.776 mo
168.551 265.726 168.697 265.672 168.84 265.616 cv
169.074 265.523 169.188 265.259 169.096 265.025 cv
169.004 264.792 168.74 264.677 168.505 264.769 cv
168.376 264.82 168.244 264.869 168.109 264.914 cv
167.871 264.995 167.743 265.254 167.824 265.492 cv
167.889 265.681 168.066 265.801 168.255 265.801 cv
168.304 265.801 168.353 265.793 168.402 265.776 cv
cp
162.108 265.803 mo
162.147 265.555 161.977 265.322 161.728 265.283 cv
161.585 265.261 161.442 265.237 161.301 265.211 cv
161.053 265.165 160.816 265.33 160.771 265.577 cv
160.727 265.825 160.891 266.062 161.138 266.107 cv
161.287 266.134 161.437 266.159 161.588 266.183 cv
161.612 266.186 161.635 266.188 161.659 266.188 cv
161.879 266.188 162.073 266.027 162.108 265.803 cv
cp
164.774 266.387 mo
164.929 266.383 165.081 266.376 165.232 266.367 cv
165.483 266.353 165.675 266.137 165.66 265.886 cv
165.646 265.635 165.428 265.446 165.179 265.458 cv
165.038 265.466 164.894 265.473 164.749 265.477 cv
164.497 265.484 164.299 265.693 164.307 265.945 cv
164.313 266.192 164.516 266.387 164.761 266.387 cv
164.766 266.387 164.77 266.387 164.774 266.387 cv
cp
181.941 267.087 mo
181.941 266.642 li
181.941 266.39 181.738 266.186 181.486 266.186 cv
181.235 266.186 181.031 266.39 181.031 266.642 cv
181.031 267.087 li
181.031 267.338 181.235 267.542 181.486 267.542 cv
181.738 267.542 181.941 267.338 181.941 267.087 cv
cp
181.941 270.647 mo
181.941 270.202 li
181.941 269.951 181.738 269.747 181.486 269.747 cv
181.235 269.747 181.031 269.951 181.031 270.202 cv
181.031 270.647 li
181.031 270.899 181.235 271.103 181.486 271.103 cv
181.738 271.103 181.941 270.899 181.941 270.647 cv
cp
181.941 274.208 mo
181.941 273.763 li
181.941 273.511 181.738 273.308 181.486 273.308 cv
181.235 273.308 181.031 273.511 181.031 273.763 cv
181.031 274.208 li
181.031 274.459 181.235 274.663 181.486 274.663 cv
181.738 274.663 181.941 274.459 181.941 274.208 cv
cp
181.941 277.768 mo
181.941 277.323 li
181.941 277.072 181.738 276.868 181.486 276.868 cv
181.235 276.868 181.031 277.072 181.031 277.323 cv
181.031 277.768 li
181.031 278.02 181.235 278.224 181.486 278.224 cv
181.738 278.224 181.941 278.02 181.941 277.768 cv
cp
181.941 281.329 mo
181.941 280.884 li
181.941 280.632 181.738 280.428 181.486 280.428 cv
181.235 280.428 181.031 280.632 181.031 280.884 cv
181.031 281.329 li
181.031 281.58 181.235 281.784 181.486 281.784 cv
181.738 281.784 181.941 281.58 181.941 281.329 cv
cp
181.941 284.889 mo
181.941 284.444 li
181.941 284.193 181.738 283.989 181.486 283.989 cv
181.235 283.989 181.031 284.193 181.031 284.444 cv
181.031 284.889 li
181.031 285.141 181.235 285.344 181.486 285.344 cv
181.738 285.344 181.941 285.141 181.941 284.889 cv
cp
181.941 288.45 mo
181.941 288.005 li
181.941 287.753 181.738 287.549 181.486 287.549 cv
181.235 287.549 181.031 287.753 181.031 288.005 cv
181.031 288.45 li
181.031 288.701 181.235 288.905 181.486 288.905 cv
181.738 288.905 181.941 288.701 181.941 288.45 cv
cp
181.941 292.01 mo
181.941 291.565 li
181.941 291.314 181.738 291.11 181.486 291.11 cv
181.235 291.11 181.031 291.314 181.031 291.565 cv
181.031 292.01 li
181.031 292.262 181.235 292.465 181.486 292.465 cv
181.738 292.465 181.941 292.262 181.941 292.01 cv
cp
181.941 295.571 mo
181.941 295.126 li
181.941 294.874 181.738 294.67 181.486 294.67 cv
181.235 294.67 181.031 294.874 181.031 295.126 cv
181.031 295.571 li
181.031 295.822 181.235 296.026 181.486 296.026 cv
181.738 296.026 181.941 295.822 181.941 295.571 cv
cp
181.941 299.131 mo
181.941 298.686 li
181.941 298.435 181.738 298.231 181.486 298.231 cv
181.235 298.231 181.031 298.435 181.031 298.686 cv
181.031 299.131 li
181.031 299.383 181.235 299.586 181.486 299.586 cv
181.738 299.586 181.941 299.383 181.941 299.131 cv
cp
181.941 302.692 mo
181.941 302.246 li
181.941 301.995 181.738 301.791 181.486 301.791 cv
181.235 301.791 181.031 301.995 181.031 302.246 cv
181.031 302.692 li
181.031 302.943 181.235 303.147 181.486 303.147 cv
181.738 303.147 181.941 302.943 181.941 302.692 cv
cp
181.941 306.252 mo
181.941 305.807 li
181.941 305.556 181.738 305.352 181.486 305.352 cv
181.235 305.352 181.031 305.556 181.031 305.807 cv
181.031 306.252 li
181.031 306.504 181.235 306.707 181.486 306.707 cv
181.738 306.707 181.941 306.504 181.941 306.252 cv
cp
181.941 309.813 mo
181.941 309.368 li
181.941 309.116 181.738 308.912 181.486 308.912 cv
181.235 308.912 181.031 309.116 181.031 309.368 cv
181.031 309.813 li
181.031 310.064 181.235 310.268 181.486 310.268 cv
181.738 310.268 181.941 310.064 181.941 309.813 cv
cp
181.941 313.373 mo
181.941 312.928 li
181.941 312.677 181.738 312.473 181.486 312.473 cv
181.235 312.473 181.031 312.677 181.031 312.928 cv
181.031 313.373 li
181.031 313.625 181.235 313.828 181.486 313.828 cv
181.738 313.828 181.941 313.625 181.941 313.373 cv
cp
181.941 316.934 mo
181.941 316.489 li
181.941 316.237 181.738 316.033 181.486 316.033 cv
181.235 316.033 181.031 316.237 181.031 316.489 cv
181.031 316.934 li
181.031 317.185 181.235 317.389 181.486 317.389 cv
181.738 317.389 181.941 317.185 181.941 316.934 cv
cp
181.941 320.494 mo
181.941 320.049 li
181.941 319.798 181.738 319.594 181.486 319.594 cv
181.235 319.594 181.031 319.798 181.031 320.049 cv
181.031 320.494 li
181.031 320.745 181.235 320.949 181.486 320.949 cv
181.738 320.949 181.941 320.745 181.941 320.494 cv
cp
181.486 324.292 mo
181.235 324.292 181.031 324.089 181.031 323.837 cv
181.031 323.609 li
181.031 323.358 181.235 323.154 181.486 323.154 cv
181.738 323.154 181.941 323.358 181.941 323.609 cv
181.941 323.837 li
181.941 324.089 181.738 324.292 181.486 324.292 cv
cp
.698039 .458824 .278431 rgb
f
306.757 223.012 mo
309.856 223.012 313.592 223.68 317.533 224.462 cv
325.099 225.963 332.488 227.521 332.488 227.521 cv
311.559 265.582 li
311.559 265.582 309.79 323.031 309.79 328.423 cv
295.309 319.559 li
293.307 318.36 290.101 317.228 290.101 314.351 cv
290.101 244.297 li
290.101 232.542 295.001 223.012 306.757 223.012 cv
cp
.756863 .396078 .0313726 rgb
f
306.757 223.012 mo
310.257 223.012 313.53 223.667 316.511 224.261 cv
322.213 225.396 326.353 226.263 330.412 227.107 cv
326.724 226.378 317.581 226.693 310.169 236.166 cv
308.31 238.543 305.912 243.963 305.912 248.447 cv
305.912 274.512 305.934 321.889 305.934 326.043 cv
295.309 319.559 li
293.157 318.236 290.101 317.228 290.101 314.351 cv
290.101 244.297 li
290.101 232.542 295.001 223.012 306.757 223.012 cv
cp
.898039 .501961 .145098 rgb
f
305.925 299.422 mo
305.925 299.422 305.934 324.145 305.934 326.043 cv
295.309 319.559 li
293.157 318.236 290.101 317.228 290.101 314.351 cv
290.101 296.008 li
305.925 299.422 li
cp
.678431 .360784 .0431373 rgb
f
305.934 323.852 mo
305.934 324.732 305.934 325.704 305.934 326.043 cv
295.309 319.559 li
293.549 318.477 291.185 317.605 290.381 315.75 cv
291.655 316.326 300.633 321.45 305.934 323.852 cv
cp
.607843 .305882 .0392157 rgb
f
321.505 227.45 mo
318.137 228.163 314.077 230.281 311.294 233.648 cv
308.284 232.376 298.888 227.651 297.633 226.794 cv
298.89 224.846 303.046 223.365 306.174 223.365 cv
308.178 223.677 317.714 226.611 321.505 227.45 cv
cp
.968627 .631373 .223529 rgb
f
329.182 227.279 mo
341.568 227.279 351.608 237.32 351.608 249.705 cv
351.608 262.091 341.568 272.131 329.182 272.131 cv
327.205 272.131 323.463 271.191 323.463 278.14 cv
323.463 323.514 li
323.463 326.544 321.006 329.001 317.975 329.001 cv
312.244 329.001 li
309.213 329.001 306.757 326.544 306.757 323.514 cv
306.757 249.705 li
306.757 237.32 316.797 227.279 329.182 227.279 cv
cp
.94902 .556863 0 rgb
f
329.182 227.279 mo
335.833 227.279 341.808 230.175 345.914 234.773 cv
343.436 232.392 340.09 228.285 327.723 228.96 cv
320.765 229.339 312.512 234.708 310.587 237.167 cv
314.617 231.201 321.441 227.279 329.182 227.279 cv
cp
.968627 .631373 .223529 rgb
f
328.044 269.49 mo
340.429 269.49 346.505 263.947 347.778 262.243 cv
343.748 268.209 336.923 272.131 329.182 272.131 cv
327.205 272.131 323.463 271.191 323.463 278.14 cv
323.463 323.514 li
323.463 326.544 321.006 329.001 317.975 329.001 cv
317.975 329.001 319.72 327.323 319.72 324.292 cv
319.72 266.4 li
320.782 267.614 322.969 269.49 328.044 269.49 cv
cp
.807843 .435294 .0352941 rgb
f
327.09 270.805 mo
337.512 270.805 339.772 269.19 341.694 268.319 cv
338.12 270.726 333.815 272.131 329.182 272.131 cv
327.205 272.131 323.463 271.191 323.463 278.14 cv
323.463 278.14 322.43 275.951 322.43 273.918 cv
322.43 271.266 323.875 270.805 327.09 270.805 cv
cp
.678431 .360784 .0431373 rgb
f
312.014 324.621 mo
312.266 324.621 312.469 324.417 312.469 324.165 cv
312.469 249.098 li
312.469 239.883 319.967 232.385 329.182 232.385 cv
338.398 232.385 345.895 239.883 345.895 249.098 cv
345.895 258.314 338.398 265.811 329.182 265.811 cv
322.231 265.811 318.852 261.123 318.852 251.478 cv
318.852 247.088 321.603 240.555 329.182 240.555 cv
330.701 240.555 338.275 240.995 338.275 249.66 cv
338.275 251.859 338.275 257.702 329.182 257.702 cv
328.931 257.702 328.727 257.906 328.727 258.158 cv
328.727 258.409 328.931 258.613 329.182 258.613 cv
339.185 258.613 339.185 251.874 339.185 249.66 cv
339.185 248.635 338.904 239.645 329.182 239.645 cv
320.935 239.645 317.941 246.722 317.941 251.478 cv
317.941 261.735 321.618 266.721 329.182 266.721 cv
338.9 266.721 346.806 258.816 346.806 249.098 cv
346.806 239.381 338.9 231.475 329.182 231.475 cv
319.465 231.475 311.559 239.381 311.559 249.098 cv
311.559 324.165 li
311.559 324.417 311.763 324.621 312.014 324.621 cv
cp
.737255 .4 0 rgb
f
312.014 325.303 mo
312.643 325.303 313.152 324.794 313.152 324.165 cv
313.152 323.938 li
313.152 323.309 312.643 322.8 312.014 322.8 cv
311.386 322.8 310.876 323.309 310.876 323.938 cv
310.876 324.165 li
310.876 324.794 311.386 325.303 312.014 325.303 cv
cp
.490196 .278431 .105882 rgb
f
310.876 317.262 mo
310.876 316.817 li
310.876 316.188 311.386 315.679 312.014 315.679 cv
312.643 315.679 313.152 316.188 313.152 316.817 cv
313.152 317.262 li
313.152 317.891 312.643 318.4 312.014 318.4 cv
311.386 318.4 310.876 317.891 310.876 317.262 cv
cp
310.876 320.822 mo
310.876 320.377 li
310.876 319.749 311.386 319.239 312.014 319.239 cv
312.643 319.239 313.152 319.749 313.152 320.377 cv
313.152 320.822 li
313.152 321.451 312.643 321.96 312.014 321.96 cv
311.386 321.96 310.876 321.451 310.876 320.822 cv
cp
f
330.525 233.123 mo
330.387 233.112 330.248 233.102 330.109 233.094 cv
329.481 233.059 329.001 232.521 329.037 231.893 cv
329.073 231.266 329.61 230.793 330.238 230.822 cv
330.396 230.831 330.553 230.842 330.71 230.855 cv
331.336 230.906 331.803 231.455 331.751 232.082 cv
331.703 232.677 331.205 233.127 330.619 233.127 cv
330.587 233.127 330.556 233.126 330.525 233.123 cv
cp
325.498 232.287 mo
325.406 231.665 325.835 231.086 326.456 230.993 cv
326.612 230.97 326.768 230.949 326.925 230.93 cv
327.553 230.85 328.117 231.296 328.194 231.92 cv
328.271 232.544 327.828 233.112 327.204 233.189 cv
327.066 233.206 326.928 233.224 326.792 233.245 cv
326.735 233.253 326.678 233.257 326.623 233.257 cv
326.068 233.257 325.582 232.852 325.498 232.287 cv
cp
333.784 233.738 mo
333.651 233.698 333.517 233.66 333.383 233.624 cv
332.776 233.459 332.418 232.834 332.582 232.227 cv
332.747 231.621 333.373 231.262 333.979 231.427 cv
334.131 231.469 334.283 231.512 334.433 231.557 cv
335.036 231.736 335.379 232.37 335.199 232.972 cv
335.052 233.466 334.599 233.786 334.109 233.786 cv
334.001 233.786 333.892 233.77 333.784 233.738 cv
cp
322.118 233.405 mo
321.898 232.816 322.197 232.161 322.786 231.941 cv
322.934 231.885 323.083 231.832 323.233 231.78 cv
323.829 231.576 324.475 231.893 324.679 232.487 cv
324.883 233.082 324.567 233.729 323.972 233.933 cv
323.841 233.978 323.711 234.025 323.582 234.073 cv
323.451 234.122 323.316 234.145 323.184 234.145 cv
322.723 234.145 322.289 233.863 322.118 233.405 cv
cp
336.843 235.014 mo
336.722 234.947 336.6 234.883 336.477 234.82 cv
335.917 234.533 335.696 233.848 335.982 233.288 cv
336.269 232.728 336.955 232.507 337.514 232.794 cv
337.655 232.866 337.796 232.94 337.936 233.017 cv
338.487 233.318 338.69 234.01 338.388 234.561 cv
338.181 234.939 337.791 235.154 337.388 235.154 cv
337.204 235.154 337.017 235.109 336.843 235.014 cv
cp
319.042 235.196 mo
318.706 234.665 318.863 233.962 319.394 233.626 cv
319.528 233.542 319.662 233.459 319.797 233.378 cv
320.337 233.055 321.036 233.23 321.358 233.77 cv
321.681 234.309 321.506 235.008 320.966 235.331 cv
320.847 235.402 320.729 235.475 320.612 235.549 cv
320.424 235.669 320.213 235.726 320.005 235.726 cv
319.628 235.726 319.259 235.538 319.042 235.196 cv
cp
339.578 236.896 mo
339.473 236.806 339.366 236.718 339.259 236.63 cv
338.77 236.235 338.695 235.518 339.09 235.03 cv
339.486 234.542 340.202 234.465 340.691 234.861 cv
340.814 234.961 340.936 235.062 341.056 235.165 cv
341.534 235.573 341.591 236.292 341.182 236.769 cv
340.957 237.033 340.638 237.168 340.317 237.168 cv
340.055 237.168 339.792 237.079 339.578 236.896 cv
cp
316.399 237.583 mo
315.96 237.132 315.97 236.412 316.421 235.973 cv
316.534 235.863 316.649 235.754 316.766 235.646 cv
317.227 235.221 317.948 235.249 318.374 235.711 cv
318.8 236.173 318.771 236.893 318.309 237.319 cv
318.207 237.413 318.107 237.508 318.008 237.605 cv
317.787 237.82 317.501 237.927 317.214 237.927 cv
316.918 237.927 316.622 237.812 316.399 237.583 cv
cp
341.869 239.298 mo
341.784 239.188 341.698 239.08 341.611 238.973 cv
341.213 238.486 341.286 237.769 341.773 237.372 cv
342.261 236.974 342.977 237.047 343.374 237.534 cv
343.474 237.657 343.573 237.781 343.669 237.906 cv
344.054 238.403 343.962 239.118 343.465 239.502 cv
343.258 239.663 343.013 239.74 342.77 239.74 cv
342.429 239.74 342.093 239.588 341.869 239.298 cv
cp
314.299 240.46 mo
313.778 240.109 313.64 239.402 313.991 238.88 cv
314.079 238.749 314.169 238.619 314.261 238.49 cv
314.626 237.977 315.337 237.858 315.849 238.223 cv
316.361 238.587 316.48 239.298 316.116 239.81 cv
316.035 239.923 315.956 240.036 315.879 240.151 cv
315.659 240.478 315.3 240.654 314.934 240.654 cv
314.715 240.654 314.494 240.591 314.299 240.46 cv
cp
330.633 241.321 mo
330.501 241.305 330.366 241.292 330.23 241.28 cv
329.603 241.228 329.137 240.678 329.19 240.052 cv
329.241 239.426 329.792 238.962 330.418 239.012 cv
330.581 239.026 330.741 239.042 330.899 239.06 cv
331.524 239.134 331.97 239.7 331.896 240.324 cv
331.828 240.903 331.336 241.329 330.767 241.329 cv
330.723 241.329 330.678 241.326 330.633 241.321 cv
cp
325.666 240.546 mo
325.544 239.93 325.945 239.331 326.562 239.209 cv
326.72 239.177 326.88 239.149 327.044 239.123 cv
327.664 239.025 328.247 239.449 328.345 240.071 cv
328.442 240.692 328.019 241.274 327.398 241.372 cv
327.264 241.393 327.133 241.416 327.004 241.442 cv
326.929 241.456 326.855 241.464 326.781 241.464 cv
326.249 241.464 325.774 241.088 325.666 240.546 cv
cp
333.622 242.209 mo
333.51 242.15 333.395 242.093 333.276 242.038 cv
332.706 241.774 332.458 241.097 332.722 240.527 cv
332.987 239.956 333.664 239.709 334.233 239.973 cv
334.387 240.044 334.538 240.119 334.684 240.196 cv
335.24 240.489 335.453 241.178 335.16 241.734 cv
334.956 242.12 334.561 242.341 334.152 242.341 cv
333.973 242.341 333.791 242.298 333.622 242.209 cv
cp
322.516 242.2 mo
322.186 241.665 322.351 240.964 322.886 240.633 cv
323.026 240.547 323.169 240.463 323.315 240.382 cv
323.865 240.077 324.557 240.275 324.862 240.824 cv
325.168 241.374 324.97 242.066 324.42 242.372 cv
324.305 242.435 324.193 242.501 324.082 242.569 cv
323.896 242.685 323.689 242.74 323.485 242.74 cv
323.104 242.74 322.731 242.548 322.516 242.2 cv
cp
343.617 242.117 mo
343.556 241.993 343.494 241.868 343.43 241.745 cv
343.142 241.187 343.361 240.5 343.92 240.212 cv
344.478 239.924 345.165 240.143 345.453 240.702 cv
345.525 240.841 345.595 240.982 345.664 241.123 cv
345.939 241.688 345.703 242.369 345.138 242.644 cv
344.978 242.722 344.808 242.758 344.641 242.758 cv
344.219 242.758 343.814 242.523 343.617 242.117 cv
cp
312.837 243.708 mo
312.254 243.472 311.974 242.809 312.21 242.226 cv
312.27 242.079 312.331 241.932 312.395 241.787 cv
312.647 241.211 313.318 240.948 313.894 241.2 cv
314.47 241.452 314.732 242.123 314.48 242.699 cv
314.425 242.825 314.371 242.953 314.319 243.082 cv
314.14 243.524 313.714 243.792 313.264 243.792 cv
313.122 243.792 312.977 243.765 312.837 243.708 cv
cp
335.903 244.183 mo
335.829 244.081 335.751 243.98 335.669 243.881 cv
335.27 243.396 335.339 242.678 335.825 242.279 cv
336.31 241.88 337.027 241.949 337.427 242.435 cv
337.535 242.566 337.639 242.7 337.738 242.836 cv
338.11 243.342 338.001 244.055 337.494 244.426 cv
337.291 244.576 337.056 244.647 336.822 244.647 cv
336.472 244.647 336.126 244.486 335.903 244.183 cv
cp
320.184 244.895 mo
319.684 244.514 319.588 243.8 319.969 243.3 cv
320.068 243.17 320.17 243.042 320.275 242.915 cv
320.676 242.432 321.393 242.364 321.877 242.766 cv
322.361 243.167 322.428 243.884 322.027 244.368 cv
321.942 244.471 321.859 244.574 321.779 244.68 cv
321.555 244.973 321.216 245.128 320.873 245.128 cv
320.633 245.128 320.39 245.052 320.184 244.895 cv
cp
344.744 245.234 mo
344.711 245.1 344.676 244.967 344.639 244.834 cv
344.472 244.228 344.828 243.601 345.434 243.434 cv
346.039 243.268 346.666 243.623 346.834 244.229 cv
346.876 244.382 346.916 244.535 346.954 244.689 cv
347.104 245.3 346.732 245.916 346.121 246.067 cv
346.03 246.09 345.938 246.1 345.848 246.1 cv
345.337 246.1 344.872 245.753 344.744 245.234 cv
cp
312.082 247.19 mo
311.463 247.08 311.05 246.489 311.16 245.87 cv
311.188 245.714 311.218 245.558 311.25 245.403 cv
311.376 244.788 311.976 244.39 312.593 244.517 cv
313.209 244.644 313.606 245.245 313.479 245.861 cv
313.452 245.996 313.426 246.132 313.401 246.268 cv
313.303 246.82 312.823 247.207 312.282 247.207 cv
312.216 247.207 312.149 247.202 312.082 247.19 cv
cp
337.23 247.013 mo
337.195 246.886 337.158 246.757 337.117 246.628 cv
336.928 246.029 337.261 245.39 337.861 245.201 cv
338.46 245.012 339.099 245.346 339.288 245.945 cv
339.338 246.103 339.383 246.26 339.426 246.415 cv
339.591 247.022 339.233 247.647 338.626 247.812 cv
338.526 247.84 338.426 247.852 338.327 247.852 cv
337.826 247.852 337.367 247.519 337.23 247.013 cv
cp
318.803 248.184 mo
318.212 247.969 317.908 247.316 318.122 246.725 cv
318.177 246.574 318.235 246.424 318.295 246.274 cv
318.529 245.691 319.191 245.407 319.775 245.642 cv
320.358 245.876 320.641 246.539 320.407 247.122 cv
320.356 247.249 320.308 247.376 320.261 247.503 cv
320.093 247.965 319.657 248.252 319.192 248.252 cv
319.062 248.252 318.931 248.23 318.803 248.184 cv
cp
345.202 248.522 mo
345.197 248.383 345.191 248.244 345.182 248.107 cv
345.143 247.479 345.621 246.939 346.248 246.9 cv
346.879 246.857 347.415 247.339 347.454 247.966 cv
347.464 248.123 347.471 248.281 347.477 248.44 cv
347.499 249.068 347.008 249.596 346.381 249.618 cv
346.367 249.619 346.353 249.619 346.339 249.619 cv
345.729 249.619 345.224 249.136 345.202 248.522 cv
cp
310.876 249.613 mo
310.876 249.168 li
310.876 248.539 311.386 248.03 312.014 248.03 cv
312.643 248.03 313.152 248.539 313.152 249.168 cv
313.152 249.613 li
313.152 250.241 312.643 250.751 312.014 250.751 cv
311.386 250.751 310.876 250.241 310.876 249.613 cv
cp
338.691 251.381 mo
338.063 251.364 337.567 250.841 337.585 250.212 cv
337.589 250.067 337.591 249.926 337.591 249.791 cv
337.595 249.162 338.116 248.661 338.737 248.66 cv
339.365 248.664 339.872 249.176 339.868 249.805 cv
339.867 249.956 339.864 250.113 339.86 250.275 cv
339.843 250.892 339.337 251.382 338.723 251.382 cv
338.712 251.382 338.701 251.381 338.691 251.381 cv
cp
318.343 251.719 mo
317.716 251.669 317.248 251.121 317.298 250.494 cv
317.311 250.336 317.326 250.175 317.345 250.012 cv
317.417 249.387 317.981 248.938 318.605 249.01 cv
319.229 249.081 319.678 249.645 319.607 250.27 cv
319.591 250.407 319.578 250.542 319.567 250.674 cv
319.52 251.27 319.022 251.722 318.434 251.722 cv
318.404 251.722 318.373 251.721 318.343 251.719 cv
cp
345.909 253.147 mo
345.289 253.041 344.873 252.452 344.98 251.833 cv
345.004 251.697 345.025 251.56 345.045 251.423 cv
345.136 250.801 345.713 250.369 346.335 250.46 cv
346.957 250.55 347.388 251.128 347.298 251.75 cv
347.275 251.907 347.25 252.063 347.223 252.219 cv
347.128 252.773 346.647 253.164 346.103 253.164 cv
346.039 253.164 345.974 253.158 345.909 253.147 cv
cp
310.876 253.173 mo
310.876 252.728 li
310.876 252.1 311.386 251.59 312.014 251.59 cv
312.643 251.59 313.152 252.1 313.152 252.728 cv
313.152 253.173 li
313.152 253.802 312.643 254.311 312.014 254.311 cv
311.386 254.311 310.876 253.802 310.876 253.173 cv
cp
337.626 254.775 mo
337.046 254.535 336.77 253.869 337.011 253.288 cv
337.06 253.171 337.104 253.054 337.145 252.937 cv
337.35 252.343 337.998 252.028 338.592 252.233 cv
339.186 252.438 339.501 253.086 339.296 253.68 cv
339.241 253.84 339.18 254.001 339.114 254.16 cv
338.932 254.598 338.508 254.863 338.062 254.863 cv
337.917 254.863 337.769 254.835 337.626 254.775 cv
cp
317.353 254.225 mo
317.342 254.073 317.332 253.92 317.323 253.766 cv
317.285 253.139 317.763 252.6 318.391 252.563 cv
319.016 252.523 319.558 253.003 319.595 253.631 cv
319.604 253.775 319.613 253.918 319.623 254.061 cv
319.669 254.687 319.197 255.232 318.57 255.278 cv
318.542 255.28 318.515 255.281 318.487 255.281 cv
317.896 255.281 317.397 254.824 317.353 254.225 cv
cp
344.718 256.504 mo
344.134 256.272 343.848 255.61 344.081 255.026 cv
344.132 254.897 344.182 254.767 344.23 254.636 cv
344.448 254.046 345.102 253.745 345.692 253.962 cv
346.282 254.18 346.583 254.834 346.366 255.424 cv
346.311 255.573 346.254 255.721 346.196 255.867 cv
346.018 256.314 345.59 256.585 345.138 256.585 cv
344.998 256.585 344.855 256.559 344.718 256.504 cv
cp
334.952 257.132 mo
334.587 256.62 334.707 255.909 335.219 255.544 cv
335.321 255.471 335.419 255.397 335.512 255.32 cv
335.999 254.923 336.716 254.995 337.114 255.482 cv
337.511 255.969 337.439 256.686 336.952 257.083 cv
336.82 257.191 336.683 257.296 336.539 257.398 cv
336.339 257.541 336.108 257.609 335.88 257.609 cv
335.524 257.609 335.174 257.443 334.952 257.132 cv
cp
310.876 256.734 mo
310.876 256.289 li
310.876 255.66 311.386 255.151 312.014 255.151 cv
312.643 255.151 313.152 255.66 313.152 256.289 cv
313.152 256.734 li
313.152 257.362 312.643 257.872 312.014 257.872 cv
311.386 257.872 310.876 257.362 310.876 256.734 cv
cp
317.87 257.912 mo
317.836 257.759 317.804 257.606 317.774 257.45 cv
317.652 256.834 318.054 256.235 318.67 256.114 cv
319.284 255.993 319.885 256.393 320.007 257.011 cv
320.034 257.149 320.063 257.285 320.092 257.421 cv
320.228 258.034 319.84 258.642 319.227 258.777 cv
319.144 258.796 319.061 258.804 318.98 258.804 cv
318.458 258.804 317.987 258.443 317.87 257.912 cv
cp
331.507 258.07 mo
331.374 257.455 331.764 256.849 332.378 256.716 cv
332.512 256.688 332.643 256.657 332.77 256.625 cv
333.376 256.47 333.999 256.836 334.155 257.445 cv
334.31 258.054 333.943 258.674 333.334 258.829 cv
333.18 258.869 333.022 258.906 332.86 258.941 cv
332.779 258.959 332.698 258.967 332.618 258.967 cv
332.094 258.967 331.622 258.603 331.507 258.07 cv
cp
342.858 259.543 mo
342.334 259.195 342.191 258.489 342.539 257.965 cv
342.616 257.849 342.691 257.732 342.766 257.614 cv
343.1 257.082 343.803 256.922 344.335 257.257 cv
344.867 257.592 345.027 258.294 344.692 258.826 cv
344.608 258.96 344.523 259.092 344.435 259.224 cv
344.216 259.554 343.855 259.733 343.486 259.733 cv
343.27 259.733 343.051 259.671 342.858 259.543 cv
cp
310.876 260.294 mo
310.876 259.849 li
310.876 259.22 311.386 258.711 312.014 258.711 cv
312.643 258.711 313.152 259.22 313.152 259.849 cv
313.152 260.294 li
313.152 260.923 312.643 261.432 312.014 261.432 cv
311.386 261.432 310.876 260.923 310.876 260.294 cv
cp
319.096 261.53 mo
319.025 261.386 318.956 261.238 318.89 261.089 cv
318.635 260.515 318.893 259.842 319.468 259.587 cv
320.042 259.331 320.715 259.59 320.97 260.165 cv
321.025 260.289 321.082 260.41 321.14 260.53 cv
321.417 261.095 321.183 261.776 320.618 262.052 cv
320.457 262.131 320.287 262.169 320.119 262.169 cv
319.698 262.169 319.293 261.934 319.096 261.53 cv
cp
340.414 262.133 mo
339.972 261.686 339.978 260.965 340.426 260.524 cv
340.524 260.427 340.622 260.328 340.718 260.228 cv
341.155 259.777 341.875 259.763 342.328 260.2 cv
342.78 260.636 342.793 261.356 342.356 261.809 cv
342.247 261.922 342.135 262.035 342.023 262.145 cv
341.801 262.364 341.513 262.473 341.224 262.473 cv
340.93 262.473 340.636 262.359 340.414 262.133 cv
cp
337.493 264.169 mo
337.152 263.641 337.304 262.937 337.833 262.596 cv
337.95 262.521 338.066 262.444 338.181 262.366 cv
338.7 262.013 339.409 262.149 339.762 262.669 cv
340.115 263.189 339.979 263.896 339.459 264.249 cv
339.329 264.338 339.198 264.424 339.066 264.509 cv
338.875 264.632 338.662 264.691 338.451 264.691 cv
338.077 264.691 337.711 264.507 337.493 264.169 cv
cp
310.876 263.854 mo
310.876 263.409 li
310.876 262.781 311.386 262.272 312.014 262.272 cv
312.643 262.272 313.152 262.781 313.152 263.409 cv
313.152 263.854 li
313.152 264.483 312.643 264.993 312.014 264.993 cv
311.386 264.993 310.876 264.483 310.876 263.854 cv
cp
321.431 264.724 mo
321.307 264.611 321.187 264.494 321.07 264.374 cv
320.63 263.925 320.638 263.204 321.087 262.764 cv
321.536 262.325 322.256 262.333 322.696 262.782 cv
322.786 262.873 322.878 262.962 322.972 263.049 cv
323.435 263.475 323.465 264.195 323.039 264.657 cv
322.815 264.901 322.508 265.025 322.201 265.025 cv
321.926 265.025 321.649 264.926 321.431 264.724 cv
cp
334.214 265.559 mo
333.99 264.971 334.284 264.314 334.872 264.09 cv
335.002 264.04 335.131 263.989 335.259 263.937 cv
335.841 263.697 336.506 263.976 336.744 264.558 cv
336.983 265.139 336.705 265.804 336.123 266.042 cv
335.977 266.102 335.83 266.16 335.683 266.216 cv
335.549 266.267 335.412 266.291 335.278 266.291 cv
334.819 266.291 334.387 266.012 334.214 265.559 cv
cp
324.879 266.751 mo
324.719 266.697 324.563 266.639 324.41 266.579 cv
323.825 266.348 323.539 265.687 323.769 265.103 cv
324 264.518 324.662 264.23 325.246 264.462 cv
325.365 264.509 325.487 264.554 325.612 264.596 cv
326.207 264.799 326.525 265.445 326.323 266.04 cv
326.162 266.514 325.719 266.812 325.245 266.812 cv
325.124 266.812 325 266.792 324.879 266.751 cv
cp
330.718 266.237 mo
330.621 265.615 331.046 265.034 331.667 264.937 cv
331.805 264.915 331.942 264.892 332.078 264.867 cv
332.696 264.755 333.289 265.165 333.401 265.784 cv
333.513 266.402 333.103 266.995 332.485 267.107 cv
332.33 267.135 332.174 267.161 332.018 267.186 cv
331.958 267.195 331.899 267.2 331.841 267.2 cv
331.29 267.2 330.805 266.798 330.718 266.237 cv
cp
328.707 267.398 mo
328.546 267.393 328.386 267.386 328.229 267.377 cv
327.602 267.341 327.122 266.803 327.159 266.175 cv
327.195 265.547 327.733 265.066 328.361 265.105 cv
328.496 265.113 328.632 265.118 328.771 265.122 cv
329.399 265.14 329.894 265.664 329.877 266.292 cv
329.859 266.909 329.353 267.398 328.74 267.398 cv
328.729 267.398 328.718 267.398 328.707 267.398 cv
cp
310.876 267.415 mo
310.876 266.97 li
310.876 266.341 311.386 265.832 312.014 265.832 cv
312.643 265.832 313.152 266.341 313.152 266.97 cv
313.152 267.415 li
313.152 268.044 312.643 268.553 312.014 268.553 cv
311.386 268.553 310.876 268.044 310.876 267.415 cv
cp
310.876 270.976 mo
310.876 270.53 li
310.876 269.902 311.386 269.392 312.014 269.392 cv
312.643 269.392 313.152 269.902 313.152 270.53 cv
313.152 270.976 li
313.152 271.604 312.643 272.114 312.014 272.114 cv
311.386 272.114 310.876 271.604 310.876 270.976 cv
cp
310.876 274.536 mo
310.876 274.091 li
310.876 273.462 311.386 272.953 312.014 272.953 cv
312.643 272.953 313.152 273.462 313.152 274.091 cv
313.152 274.536 li
313.152 275.165 312.643 275.674 312.014 275.674 cv
311.386 275.674 310.876 275.165 310.876 274.536 cv
cp
310.876 278.097 mo
310.876 277.652 li
310.876 277.023 311.386 276.513 312.014 276.513 cv
312.643 276.513 313.152 277.023 313.152 277.652 cv
313.152 278.097 li
313.152 278.725 312.643 279.235 312.014 279.235 cv
311.386 279.235 310.876 278.725 310.876 278.097 cv
cp
310.876 281.657 mo
310.876 281.212 li
310.876 280.583 311.386 280.074 312.014 280.074 cv
312.643 280.074 313.152 280.583 313.152 281.212 cv
313.152 281.657 li
313.152 282.286 312.643 282.795 312.014 282.795 cv
311.386 282.795 310.876 282.286 310.876 281.657 cv
cp
310.876 285.217 mo
310.876 284.772 li
310.876 284.144 311.386 283.634 312.014 283.634 cv
312.643 283.634 313.152 284.144 313.152 284.772 cv
313.152 285.217 li
313.152 285.846 312.643 286.356 312.014 286.356 cv
311.386 286.356 310.876 285.846 310.876 285.217 cv
cp
310.876 288.778 mo
310.876 288.333 li
310.876 287.704 311.386 287.195 312.014 287.195 cv
312.643 287.195 313.152 287.704 313.152 288.333 cv
313.152 288.778 li
313.152 289.407 312.643 289.916 312.014 289.916 cv
311.386 289.916 310.876 289.407 310.876 288.778 cv
cp
310.876 292.338 mo
310.876 291.893 li
310.876 291.265 311.386 290.755 312.014 290.755 cv
312.643 290.755 313.152 291.265 313.152 291.893 cv
313.152 292.338 li
313.152 292.967 312.643 293.477 312.014 293.477 cv
311.386 293.477 310.876 292.967 310.876 292.338 cv
cp
310.876 295.899 mo
310.876 295.454 li
310.876 294.825 311.386 294.316 312.014 294.316 cv
312.643 294.316 313.152 294.825 313.152 295.454 cv
313.152 295.899 li
313.152 296.527 312.643 297.037 312.014 297.037 cv
311.386 297.037 310.876 296.527 310.876 295.899 cv
cp
310.876 299.46 mo
310.876 299.014 li
310.876 298.386 311.386 297.876 312.014 297.876 cv
312.643 297.876 313.152 298.386 313.152 299.014 cv
313.152 299.46 li
313.152 300.088 312.643 300.598 312.014 300.598 cv
311.386 300.598 310.876 300.088 310.876 299.46 cv
cp
310.876 303.02 mo
310.876 302.575 li
310.876 301.946 311.386 301.437 312.014 301.437 cv
312.643 301.437 313.152 301.946 313.152 302.575 cv
313.152 303.02 li
313.152 303.649 312.643 304.158 312.014 304.158 cv
311.386 304.158 310.876 303.649 310.876 303.02 cv
cp
310.876 306.581 mo
310.876 306.135 li
310.876 305.507 311.386 304.997 312.014 304.997 cv
312.643 304.997 313.152 305.507 313.152 306.135 cv
313.152 306.581 li
313.152 307.209 312.643 307.719 312.014 307.719 cv
311.386 307.719 310.876 307.209 310.876 306.581 cv
cp
310.876 310.141 mo
310.876 309.696 li
310.876 309.067 311.386 308.558 312.014 308.558 cv
312.643 308.558 313.152 309.067 313.152 309.696 cv
313.152 310.141 li
313.152 310.77 312.643 311.279 312.014 311.279 cv
311.386 311.279 310.876 310.77 310.876 310.141 cv
cp
310.876 313.701 mo
310.876 313.256 li
310.876 312.628 311.386 312.118 312.014 312.118 cv
312.643 312.118 313.152 312.628 313.152 313.256 cv
313.152 313.701 li
313.152 314.33 312.643 314.84 312.014 314.84 cv
311.386 314.84 310.876 314.33 310.876 313.701 cv
cp
f
329.182 259.296 mo
329.421 259.294 li
330.05 259.289 330.555 258.775 330.549 258.146 cv
330.544 257.521 330.036 257.018 329.412 257.018 cv
329.408 257.018 329.405 257.018 329.401 257.018 cv
329.182 257.02 li
328.554 257.02 328.044 257.529 328.044 258.158 cv
328.044 258.786 328.554 259.296 329.182 259.296 cv
cp
f
328.836 258.284 mo
329.069 258.283 li
329.321 258.281 329.523 258.076 329.52 257.824 cv
329.518 257.574 329.315 257.373 329.065 257.373 cv
329.064 257.373 329.063 257.373 329.061 257.373 cv
328.836 257.374 li
328.585 257.374 328.381 257.578 328.381 257.829 cv
328.381 258.081 328.585 258.284 328.836 258.284 cv
cp
330.272 232.116 mo
330.506 232.116 330.705 231.936 330.725 231.698 cv
330.745 231.447 330.559 231.228 330.308 231.207 cv
330.157 231.195 330.005 231.184 329.853 231.175 cv
329.603 231.166 329.387 231.353 329.373 231.604 cv
329.358 231.855 329.55 232.07 329.801 232.085 cv
329.946 232.093 330.09 232.103 330.234 232.115 cv
330.247 232.116 330.259 232.116 330.272 232.116 cv
cp
326.277 232.246 mo
326.3 232.246 326.322 232.245 326.345 232.241 cv
326.487 232.22 326.631 232.201 326.774 232.183 cv
327.024 232.152 327.201 231.925 327.171 231.675 cv
327.139 231.426 326.911 231.251 326.663 231.279 cv
326.511 231.298 326.361 231.318 326.211 231.341 cv
325.962 231.378 325.791 231.609 325.828 231.858 cv
325.861 232.084 326.056 232.246 326.277 232.246 cv
cp
333.763 232.774 mo
333.959 232.774 334.14 232.647 334.199 232.449 cv
334.271 232.208 334.133 231.954 333.892 231.883 cv
333.747 231.839 333.601 231.798 333.454 231.758 cv
333.211 231.694 332.961 231.836 332.895 232.078 cv
332.829 232.32 332.973 232.571 333.215 232.637 cv
333.355 232.674 333.494 232.714 333.632 232.755 cv
333.676 232.768 333.72 232.774 333.763 232.774 cv
cp
322.838 233.134 mo
322.891 233.134 322.944 233.125 322.997 233.105 cv
323.132 233.055 323.268 233.006 323.404 232.959 cv
323.642 232.878 323.769 232.619 323.687 232.381 cv
323.605 232.143 323.347 232.016 323.109 232.098 cv
322.964 232.148 322.821 232.199 322.679 232.252 cv
322.443 232.34 322.323 232.602 322.411 232.838 cv
322.48 233.021 322.653 233.134 322.838 233.134 cv
cp
337.043 234.142 mo
337.204 234.142 337.36 234.057 337.443 233.905 cv
337.564 233.685 337.483 233.408 337.262 233.288 cv
337.128 233.214 336.993 233.143 336.857 233.073 cv
336.632 232.959 336.358 233.047 336.244 233.271 cv
336.129 233.495 336.218 233.769 336.442 233.884 cv
336.57 233.95 336.698 234.017 336.825 234.086 cv
336.894 234.124 336.969 234.142 337.043 234.142 cv
cp
319.658 234.714 mo
319.741 234.714 319.825 234.691 319.901 234.644 cv
320.022 234.566 320.145 234.491 320.269 234.417 cv
320.485 234.288 320.555 234.008 320.426 233.792 cv
320.297 233.576 320.018 233.506 319.802 233.635 cv
319.671 233.714 319.542 233.793 319.413 233.874 cv
319.201 234.009 319.138 234.29 319.273 234.503 cv
319.359 234.639 319.507 234.714 319.658 234.714 cv
cp
339.971 236.157 mo
340.099 236.157 340.227 236.103 340.317 235.998 cv
340.481 235.807 340.458 235.519 340.267 235.356 cv
340.151 235.257 340.034 235.16 339.915 235.064 cv
339.72 234.905 339.434 234.936 339.275 235.131 cv
339.117 235.327 339.147 235.613 339.343 235.771 cv
339.455 235.862 339.566 235.955 339.676 236.048 cv
339.761 236.122 339.866 236.157 339.971 236.157 cv
cp
316.868 236.916 mo
316.983 236.916 317.097 236.873 317.186 236.787 cv
317.289 236.686 317.394 236.587 317.5 236.489 cv
317.685 236.319 317.696 236.031 317.526 235.846 cv
317.356 235.662 317.067 235.65 316.883 235.82 cv
316.771 235.923 316.66 236.028 316.551 236.134 cv
316.371 236.31 316.367 236.598 316.542 236.778 cv
316.631 236.87 316.75 236.916 316.868 236.916 cv
cp
342.423 238.729 mo
342.52 238.729 342.618 238.698 342.701 238.634 cv
342.9 238.48 342.937 238.194 342.783 237.995 cv
342.69 237.875 342.595 237.755 342.499 237.638 cv
342.34 237.443 342.053 237.414 341.858 237.573 cv
341.664 237.732 341.634 238.018 341.793 238.213 cv
341.885 238.325 341.974 238.438 342.062 238.552 cv
342.152 238.668 342.287 238.729 342.423 238.729 cv
cp
314.588 239.643 mo
314.735 239.643 314.879 239.572 314.967 239.442 cv
315.047 239.322 315.129 239.203 315.213 239.085 cv
315.359 238.88 315.311 238.596 315.107 238.451 cv
314.902 238.305 314.618 238.353 314.472 238.557 cv
314.383 238.682 314.296 238.807 314.211 238.933 cv
314.071 239.142 314.126 239.425 314.335 239.565 cv
314.413 239.618 314.501 239.643 314.588 239.643 cv
cp
330.421 240.318 mo
330.648 240.318 330.845 240.147 330.872 239.916 cv
330.902 239.666 330.723 239.44 330.473 239.41 cv
330.323 239.392 330.171 239.377 330.015 239.364 cv
329.763 239.341 329.545 239.53 329.524 239.78 cv
329.503 240.031 329.689 240.251 329.94 240.271 cv
330.085 240.283 330.227 240.298 330.367 240.314 cv
330.385 240.317 330.403 240.318 330.421 240.318 cv
cp
326.436 240.452 mo
326.466 240.452 326.495 240.449 326.525 240.443 cv
326.663 240.416 326.803 240.391 326.945 240.369 cv
327.194 240.33 327.363 240.097 327.324 239.849 cv
327.285 239.6 327.05 239.432 326.804 239.47 cv
326.65 239.494 326.498 239.521 326.349 239.55 cv
326.102 239.599 325.941 239.839 325.99 240.085 cv
326.033 240.302 326.223 240.452 326.436 240.452 cv
cp
333.806 241.329 mo
333.97 241.329 334.128 241.241 334.209 241.087 cv
334.327 240.864 334.242 240.589 334.019 240.472 cv
333.883 240.4 333.743 240.331 333.6 240.264 cv
333.371 240.159 333.101 240.258 332.996 240.486 cv
332.89 240.714 332.989 240.984 333.217 241.09 cv
333.346 241.15 333.472 241.212 333.594 241.277 cv
333.662 241.313 333.735 241.329 333.806 241.329 cv
cp
323.139 241.728 mo
323.22 241.728 323.303 241.706 323.378 241.66 cv
323.497 241.587 323.618 241.515 323.743 241.446 cv
323.962 241.324 324.042 241.047 323.92 240.827 cv
323.797 240.607 323.521 240.528 323.301 240.65 cv
323.164 240.726 323.03 240.805 322.899 240.886 cv
322.685 241.018 322.619 241.299 322.751 241.512 cv
322.837 241.652 322.986 241.728 323.139 241.728 cv
cp
344.295 241.747 mo
344.362 241.747 344.429 241.732 344.493 241.701 cv
344.719 241.592 344.814 241.319 344.704 241.093 cv
344.638 240.956 344.57 240.821 344.5 240.686 cv
344.385 240.463 344.111 240.376 343.887 240.491 cv
343.664 240.606 343.576 240.88 343.691 241.104 cv
343.757 241.232 343.822 241.361 343.885 241.491 cv
343.964 241.653 344.126 241.747 344.295 241.747 cv
cp
312.918 242.781 mo
313.098 242.781 313.269 242.674 313.34 242.497 cv
313.395 242.363 313.451 242.229 313.509 242.097 cv
313.61 241.866 313.504 241.598 313.274 241.497 cv
313.044 241.396 312.775 241.501 312.675 241.732 cv
312.613 241.872 312.554 242.013 312.497 242.155 cv
312.402 242.387 312.514 242.653 312.747 242.748 cv
312.803 242.77 312.861 242.781 312.918 242.781 cv
cp
336.475 243.636 mo
336.569 243.636 336.663 243.607 336.745 243.547 cv
336.947 243.398 336.991 243.113 336.841 242.911 cv
336.749 242.786 336.653 242.662 336.553 242.54 cv
336.394 242.346 336.107 242.319 335.913 242.478 cv
335.718 242.638 335.69 242.925 335.85 243.119 cv
335.94 243.228 336.026 243.339 336.108 243.451 cv
336.198 243.572 336.336 243.636 336.475 243.636 cv
cp
320.528 244.117 mo
320.665 244.117 320.8 244.055 320.89 243.938 cv
320.976 243.825 321.064 243.713 321.155 243.604 cv
321.316 243.41 321.289 243.123 321.095 242.963 cv
320.902 242.803 320.614 242.829 320.454 243.023 cv
320.355 243.142 320.259 243.263 320.166 243.386 cv
320.013 243.586 320.052 243.872 320.252 244.024 cv
320.335 244.087 320.432 244.117 320.528 244.117 cv
cp
345.502 245.089 mo
345.538 245.089 345.575 245.085 345.611 245.076 cv
345.856 245.016 346.005 244.769 345.944 244.525 cv
345.908 244.376 345.869 244.229 345.829 244.082 cv
345.762 243.84 345.512 243.696 345.269 243.764 cv
345.027 243.831 344.884 244.082 344.951 244.324 cv
344.99 244.463 345.026 244.602 345.061 244.743 cv
345.112 244.95 345.298 245.089 345.502 245.089 cv
cp
311.935 246.196 mo
312.152 246.196 312.344 246.041 312.383 245.821 cv
312.408 245.678 312.435 245.537 312.464 245.395 cv
312.515 245.149 312.356 244.908 312.11 244.858 cv
311.863 244.807 311.623 244.966 311.573 245.212 cv
311.542 245.361 311.513 245.511 311.487 245.661 cv
311.443 245.909 311.607 246.145 311.855 246.189 cv
311.882 246.194 311.909 246.196 311.935 246.196 cv
cp
337.982 246.841 mo
338.021 246.841 338.061 246.836 338.101 246.825 cv
338.344 246.759 338.487 246.509 338.421 246.266 cv
338.381 246.119 338.338 245.971 338.291 245.822 cv
338.215 245.582 337.959 245.449 337.72 245.524 cv
337.48 245.6 337.347 245.855 337.422 246.095 cv
337.466 246.233 337.506 246.37 337.543 246.505 cv
337.598 246.708 337.781 246.841 337.982 246.841 cv
cp
318.846 247.241 mo
319.032 247.241 319.206 247.126 319.274 246.941 cv
319.322 246.807 319.374 246.673 319.427 246.539 cv
319.521 246.306 319.408 246.041 319.175 245.947 cv
318.941 245.854 318.676 245.967 318.582 246.2 cv
318.525 246.343 318.47 246.487 318.418 246.63 cv
318.332 246.866 318.454 247.127 318.69 247.213 cv
318.742 247.232 318.794 247.241 318.846 247.241 cv
cp
345.993 248.608 mo
345.998 248.608 346.004 248.608 346.01 248.607 cv
346.261 248.598 346.457 248.387 346.448 248.136 cv
346.443 247.983 346.435 247.831 346.426 247.68 cv
346.411 247.429 346.189 247.24 345.944 247.253 cv
345.693 247.269 345.502 247.485 345.517 247.736 cv
345.526 247.88 345.533 248.024 345.538 248.169 cv
345.547 248.414 345.749 248.608 345.993 248.608 cv
cp
311.668 249.74 mo
311.92 249.74 312.123 249.536 312.123 249.284 cv
312.123 248.839 li
312.123 248.588 311.92 248.384 311.668 248.384 cv
311.417 248.384 311.213 248.588 311.213 248.839 cv
311.213 249.284 li
311.213 249.536 311.417 249.74 311.668 249.74 cv
cp
338.376 250.37 mo
338.622 250.37 338.824 250.175 338.831 249.928 cv
338.836 249.77 338.838 249.618 338.839 249.473 cv
338.84 249.221 338.638 249.016 338.386 249.014 cv
338.385 249.014 338.384 249.014 338.384 249.014 cv
338.133 249.014 337.93 249.216 337.928 249.467 cv
337.927 249.607 337.925 249.752 337.921 249.903 cv
337.914 250.154 338.112 250.363 338.364 250.37 cv
338.368 250.37 338.372 250.37 338.376 250.37 cv
cp
318.087 250.711 mo
318.322 250.711 318.521 250.53 318.541 250.292 cv
318.552 250.152 318.565 250.009 318.582 249.864 cv
318.611 249.614 318.431 249.389 318.181 249.36 cv
317.932 249.33 317.706 249.511 317.677 249.761 cv
317.66 249.916 317.645 250.069 317.633 250.22 cv
317.613 250.471 317.8 250.69 318.051 250.71 cv
318.063 250.711 318.075 250.711 318.087 250.711 cv
cp
345.756 252.153 mo
345.974 252.153 346.166 251.996 346.204 251.775 cv
346.23 251.625 346.254 251.475 346.276 251.323 cv
346.312 251.075 346.139 250.844 345.891 250.807 cv
345.641 250.773 345.411 250.944 345.375 251.193 cv
345.354 251.336 345.332 251.478 345.307 251.62 cv
345.264 251.868 345.431 252.103 345.678 252.146 cv
345.705 252.151 345.731 252.153 345.756 252.153 cv
cp
311.668 253.3 mo
311.92 253.3 312.123 253.096 312.123 252.845 cv
312.123 252.4 li
312.123 252.148 311.92 251.945 311.668 251.945 cv
311.417 251.945 311.213 252.148 311.213 252.4 cv
311.213 252.845 li
311.213 253.096 311.417 253.3 311.668 253.3 cv
cp
337.716 253.851 mo
337.895 253.851 338.064 253.745 338.137 253.57 cv
338.198 253.423 338.254 253.276 338.305 253.129 cv
338.387 252.891 338.261 252.632 338.023 252.55 cv
337.786 252.468 337.526 252.594 337.444 252.831 cv
337.399 252.962 337.35 253.092 337.296 253.221 cv
337.2 253.454 337.31 253.72 337.542 253.816 cv
337.599 253.84 337.658 253.851 337.716 253.851 cv
cp
318.142 254.269 mo
318.153 254.269 318.164 254.269 318.175 254.268 cv
318.426 254.25 318.614 254.032 318.596 253.781 cv
318.586 253.636 318.576 253.49 318.567 253.343 cv
318.552 253.092 318.336 252.896 318.086 252.916 cv
317.835 252.931 317.643 253.146 317.659 253.397 cv
317.667 253.548 317.677 253.698 317.688 253.847 cv
317.706 254.087 317.905 254.269 318.142 254.269 cv
cp
344.792 255.574 mo
344.973 255.574 345.144 255.465 345.215 255.287 cv
345.271 255.145 345.326 255.003 345.379 254.859 cv
345.466 254.624 345.345 254.362 345.11 254.275 cv
344.874 254.187 344.612 254.308 344.525 254.544 cv
344.475 254.68 344.423 254.816 344.369 254.95 cv
344.276 255.184 344.39 255.449 344.624 255.542 cv
344.679 255.564 344.736 255.574 344.792 255.574 cv
cp
335.533 256.599 mo
335.625 256.599 335.717 256.571 335.797 256.514 cv
335.928 256.42 336.054 256.325 336.174 256.226 cv
336.369 256.068 336.398 255.781 336.239 255.586 cv
336.08 255.391 335.793 255.362 335.598 255.521 cv
335.493 255.607 335.383 255.691 335.269 255.773 cv
335.064 255.918 335.016 256.203 335.162 256.407 cv
335.251 256.532 335.391 256.599 335.533 256.599 cv
cp
311.668 256.861 mo
311.92 256.861 312.123 256.657 312.123 256.405 cv
312.123 255.96 li
312.123 255.709 311.92 255.505 311.668 255.505 cv
311.417 255.505 311.213 255.709 311.213 255.96 cv
311.213 256.405 li
311.213 256.657 311.417 256.861 311.668 256.861 cv
cp
318.635 257.793 mo
318.668 257.793 318.7 257.79 318.734 257.782 cv
318.979 257.728 319.134 257.485 319.08 257.24 cv
319.049 257.099 319.019 256.957 318.991 256.814 cv
318.942 256.568 318.705 256.405 318.456 256.456 cv
318.21 256.504 318.049 256.743 318.098 256.99 cv
318.127 257.14 318.158 257.289 318.191 257.436 cv
318.238 257.648 318.426 257.793 318.635 257.793 cv
cp
332.273 257.956 mo
332.305 257.956 332.337 257.952 332.369 257.945 cv
332.523 257.912 332.673 257.877 332.819 257.84 cv
333.062 257.777 333.209 257.529 333.147 257.286 cv
333.085 257.042 332.839 256.894 332.593 256.958 cv
332.458 256.992 332.319 257.025 332.177 257.056 cv
331.931 257.109 331.775 257.351 331.828 257.597 cv
331.874 257.81 332.063 257.956 332.273 257.956 cv
cp
343.141 258.721 mo
343.288 258.721 343.433 258.65 343.52 258.518 cv
343.605 258.391 343.687 258.263 343.768 258.134 cv
343.902 257.922 343.838 257.641 343.625 257.507 cv
343.413 257.373 343.131 257.437 342.997 257.65 cv
342.92 257.772 342.842 257.894 342.762 258.014 cv
342.623 258.224 342.68 258.506 342.889 258.645 cv
342.967 258.697 343.054 258.721 343.141 258.721 cv
cp
311.668 260.421 mo
311.92 260.421 312.123 260.217 312.123 259.966 cv
312.123 259.521 li
312.123 259.269 311.92 259.066 311.668 259.066 cv
311.417 259.066 311.213 259.269 311.213 259.521 cv
311.213 259.966 li
311.213 260.217 311.417 260.421 311.668 260.421 cv
cp
319.772 261.157 mo
319.84 261.157 319.908 261.142 319.972 261.111 cv
320.198 261.001 320.291 260.728 320.181 260.502 cv
320.119 260.375 320.058 260.245 320 260.114 cv
319.898 259.884 319.628 259.78 319.399 259.883 cv
319.169 259.985 319.066 260.254 319.168 260.484 cv
319.231 260.625 319.296 260.765 319.363 260.902 cv
319.442 261.064 319.604 261.157 319.772 261.157 cv
cp
340.878 261.462 mo
340.994 261.462 341.109 261.418 341.198 261.331 cv
341.306 261.224 341.413 261.116 341.519 261.007 cv
341.693 260.826 341.688 260.537 341.507 260.363 cv
341.326 260.189 341.038 260.194 340.864 260.374 cv
340.763 260.478 340.662 260.581 340.559 260.682 cv
340.38 260.859 340.377 261.147 340.554 261.326 cv
340.643 261.416 340.761 261.462 340.878 261.462 cv
cp
338.104 263.68 mo
338.188 263.68 338.274 263.656 338.35 263.607 cv
338.477 263.525 338.604 263.441 338.729 263.356 cv
338.938 263.215 338.992 262.932 338.851 262.724 cv
338.709 262.516 338.426 262.462 338.218 262.603 cv
338.099 262.684 337.978 262.763 337.857 262.842 cv
337.645 262.978 337.585 263.26 337.721 263.471 cv
337.808 263.606 337.954 263.68 338.104 263.68 cv
cp
311.668 263.982 mo
311.92 263.982 312.123 263.778 312.123 263.526 cv
312.123 263.081 li
312.123 262.83 311.92 262.626 311.668 262.626 cv
311.417 262.626 311.213 262.83 311.213 263.081 cv
311.213 263.526 li
311.213 263.778 311.417 263.982 311.668 263.982 cv
cp
321.855 264.013 mo
321.978 264.013 322.101 263.964 322.19 263.866 cv
322.361 263.682 322.349 263.393 322.164 263.223 cv
322.061 263.128 321.96 263.031 321.862 262.931 cv
321.686 262.752 321.398 262.748 321.218 262.924 cv
321.039 263.1 321.036 263.388 321.212 263.568 cv
321.32 263.679 321.432 263.788 321.547 263.893 cv
321.635 263.974 321.745 264.013 321.855 264.013 cv
cp
334.931 265.28 mo
334.985 265.28 335.04 265.271 335.094 265.25 cv
335.236 265.196 335.377 265.14 335.518 265.082 cv
335.751 264.987 335.862 264.721 335.767 264.488 cv
335.671 264.256 335.404 264.145 335.173 264.24 cv
335.039 264.295 334.904 264.348 334.769 264.399 cv
334.534 264.489 334.416 264.752 334.506 264.987 cv
334.575 265.168 334.748 265.28 334.931 265.28 cv
cp
324.899 265.801 mo
325.089 265.801 325.266 265.681 325.33 265.492 cv
325.411 265.254 325.284 264.995 325.046 264.914 cv
324.911 264.869 324.779 264.82 324.649 264.769 cv
324.414 264.677 324.151 264.792 324.058 265.025 cv
323.966 265.259 324.081 265.523 324.315 265.616 cv
324.458 265.672 324.604 265.726 324.753 265.776 cv
324.801 265.793 324.85 265.801 324.899 265.801 cv
cp
331.496 266.188 mo
331.519 266.188 331.543 266.186 331.566 266.183 cv
331.717 266.159 331.867 266.134 332.016 266.107 cv
332.264 266.062 332.428 265.825 332.383 265.577 cv
332.338 265.33 332.102 265.165 331.854 265.211 cv
331.712 265.237 331.569 265.261 331.426 265.283 cv
331.178 265.322 331.008 265.555 331.046 265.803 cv
331.082 266.027 331.275 266.188 331.496 266.188 cv
cp
328.393 266.387 mo
328.639 266.387 328.841 266.192 328.848 265.945 cv
328.855 265.693 328.657 265.484 328.406 265.477 cv
328.26 265.473 328.117 265.466 327.975 265.458 cv
327.726 265.446 327.508 265.635 327.494 265.886 cv
327.48 266.137 327.672 266.353 327.923 266.367 cv
328.073 266.376 328.225 266.383 328.38 266.387 cv
328.384 266.387 328.389 266.387 328.393 266.387 cv
cp
311.668 267.542 mo
311.92 267.542 312.123 267.338 312.123 267.087 cv
312.123 266.642 li
312.123 266.39 311.92 266.186 311.668 266.186 cv
311.417 266.186 311.213 266.39 311.213 266.642 cv
311.213 267.087 li
311.213 267.338 311.417 267.542 311.668 267.542 cv
cp
311.668 271.103 mo
311.92 271.103 312.123 270.899 312.123 270.647 cv
312.123 270.202 li
312.123 269.951 311.92 269.747 311.668 269.747 cv
311.417 269.747 311.213 269.951 311.213 270.202 cv
311.213 270.647 li
311.213 270.899 311.417 271.103 311.668 271.103 cv
cp
311.668 274.663 mo
311.92 274.663 312.123 274.459 312.123 274.208 cv
312.123 273.763 li
312.123 273.511 311.92 273.308 311.668 273.308 cv
311.417 273.308 311.213 273.511 311.213 273.763 cv
311.213 274.208 li
311.213 274.459 311.417 274.663 311.668 274.663 cv
cp
311.668 278.224 mo
311.92 278.224 312.123 278.02 312.123 277.768 cv
312.123 277.323 li
312.123 277.072 311.92 276.868 311.668 276.868 cv
311.417 276.868 311.213 277.072 311.213 277.323 cv
311.213 277.768 li
311.213 278.02 311.417 278.224 311.668 278.224 cv
cp
311.668 281.784 mo
311.92 281.784 312.123 281.58 312.123 281.329 cv
312.123 280.884 li
312.123 280.632 311.92 280.428 311.668 280.428 cv
311.417 280.428 311.213 280.632 311.213 280.884 cv
311.213 281.329 li
311.213 281.58 311.417 281.784 311.668 281.784 cv
cp
311.668 285.344 mo
311.92 285.344 312.123 285.141 312.123 284.889 cv
312.123 284.444 li
312.123 284.193 311.92 283.989 311.668 283.989 cv
311.417 283.989 311.213 284.193 311.213 284.444 cv
311.213 284.889 li
311.213 285.141 311.417 285.344 311.668 285.344 cv
cp
311.668 288.905 mo
311.92 288.905 312.123 288.701 312.123 288.45 cv
312.123 288.005 li
312.123 287.753 311.92 287.549 311.668 287.549 cv
311.417 287.549 311.213 287.753 311.213 288.005 cv
311.213 288.45 li
311.213 288.701 311.417 288.905 311.668 288.905 cv
cp
311.668 292.465 mo
311.92 292.465 312.123 292.262 312.123 292.01 cv
312.123 291.565 li
312.123 291.314 311.92 291.11 311.668 291.11 cv
311.417 291.11 311.213 291.314 311.213 291.565 cv
311.213 292.01 li
311.213 292.262 311.417 292.465 311.668 292.465 cv
cp
311.668 296.026 mo
311.92 296.026 312.123 295.822 312.123 295.571 cv
312.123 295.126 li
312.123 294.874 311.92 294.67 311.668 294.67 cv
311.417 294.67 311.213 294.874 311.213 295.126 cv
311.213 295.571 li
311.213 295.822 311.417 296.026 311.668 296.026 cv
cp
311.668 299.586 mo
311.92 299.586 312.123 299.383 312.123 299.131 cv
312.123 298.686 li
312.123 298.435 311.92 298.231 311.668 298.231 cv
311.417 298.231 311.213 298.435 311.213 298.686 cv
311.213 299.131 li
311.213 299.383 311.417 299.586 311.668 299.586 cv
cp
311.668 303.147 mo
311.92 303.147 312.123 302.943 312.123 302.692 cv
312.123 302.246 li
312.123 301.995 311.92 301.791 311.668 301.791 cv
311.417 301.791 311.213 301.995 311.213 302.246 cv
311.213 302.692 li
311.213 302.943 311.417 303.147 311.668 303.147 cv
cp
311.668 306.707 mo
311.92 306.707 312.123 306.504 312.123 306.252 cv
312.123 305.807 li
312.123 305.556 311.92 305.352 311.668 305.352 cv
311.417 305.352 311.213 305.556 311.213 305.807 cv
311.213 306.252 li
311.213 306.504 311.417 306.707 311.668 306.707 cv
cp
311.668 310.268 mo
311.92 310.268 312.123 310.064 312.123 309.813 cv
312.123 309.368 li
312.123 309.116 311.92 308.912 311.668 308.912 cv
311.417 308.912 311.213 309.116 311.213 309.368 cv
311.213 309.813 li
311.213 310.064 311.417 310.268 311.668 310.268 cv
cp
311.668 313.828 mo
311.92 313.828 312.123 313.625 312.123 313.373 cv
312.123 312.928 li
312.123 312.677 311.92 312.473 311.668 312.473 cv
311.417 312.473 311.213 312.677 311.213 312.928 cv
311.213 313.373 li
311.213 313.625 311.417 313.828 311.668 313.828 cv
cp
311.668 317.389 mo
311.92 317.389 312.123 317.185 312.123 316.934 cv
312.123 316.489 li
312.123 316.237 311.92 316.033 311.668 316.033 cv
311.417 316.033 311.213 316.237 311.213 316.489 cv
311.213 316.934 li
311.213 317.185 311.417 317.389 311.668 317.389 cv
cp
311.668 320.949 mo
311.92 320.949 312.123 320.745 312.123 320.494 cv
312.123 320.049 li
312.123 319.798 311.92 319.594 311.668 319.594 cv
311.417 319.594 311.213 319.798 311.213 320.049 cv
311.213 320.494 li
311.213 320.745 311.417 320.949 311.668 320.949 cv
cp
311.213 323.837 mo
311.213 323.609 li
311.213 323.358 311.417 323.154 311.668 323.154 cv
311.92 323.154 312.123 323.358 312.123 323.609 cv
312.123 323.837 li
312.123 324.089 311.92 324.292 311.668 324.292 cv
311.417 324.292 311.213 324.089 311.213 323.837 cv
cp
.698039 .458824 .278431 rgb
f
305.816 315.679 mo
187.227 315.679 li
187.227 295.553 li
305.816 295.553 li
305.816 315.679 li
cp
.807843 .435294 .0352941 rgb
f
300.606 312.959 mo
192.437 312.959 li
190.563 312.959 189.044 311.44 189.044 309.566 cv
189.044 295.553 li
303.999 295.553 li
303.999 309.566 li
303.999 311.44 302.48 312.959 300.606 312.959 cv
cp
.898039 .501961 .145098 rgb
f
295.187 307.817 mo
197.856 307.817 li
196.089 307.817 194.655 306.905 194.655 305.779 cv
194.655 298.732 li
194.655 297.976 195.268 297.363 196.025 297.363 cv
297.019 297.363 li
297.775 297.363 298.388 297.976 298.388 298.732 cv
298.388 305.779 li
298.388 306.905 296.955 307.817 295.187 307.817 cv
cp
.94902 .556863 0 rgb
f
294.406 306.997 mo
198.637 306.997 li
196.884 306.997 195.464 306.199 195.464 305.215 cv
195.464 302.426 li
195.464 301.923 195.868 301.515 196.366 301.515 cv
196.366 301.515 206.752 303.35 262.223 303.35 cv
267.87 303.35 296.677 301.515 296.677 301.515 cv
297.175 301.515 297.58 301.923 297.58 302.426 cv
297.58 305.215 li
297.58 306.199 296.159 306.997 294.406 306.997 cv
cp
.968627 .631373 .223529 rgb
f
306.178 315.859 mo
187.227 315.859 li
187.227 314.724 li
306.178 314.724 li
306.178 315.859 li
cp
.607843 .305882 .0392157 rgb
f
306.593 315.679 mo
305.763 315.679 li
305.763 293.641 li
306.593 293.641 li
306.593 315.679 li
cp
.678431 .360784 .0431373 rgb
f
297.194 310.455 mo
195.302 310.455 li
192.997 310.455 191.123 308.58 191.123 306.276 cv
191.123 295.553 li
191.123 295.301 191.326 295.098 191.578 295.098 cv
191.829 295.098 192.033 295.301 192.033 295.553 cv
192.033 306.276 li
192.033 308.078 193.499 309.544 195.302 309.544 cv
297.194 309.544 li
298.996 309.544 300.463 308.078 300.463 306.276 cv
300.463 295.553 li
300.463 295.301 300.667 295.098 300.918 295.098 cv
301.169 295.098 301.373 295.301 301.373 295.553 cv
301.373 306.276 li
301.373 308.58 299.499 310.455 297.194 310.455 cv
cp
.737255 .4 0 rgb
f
192.716 295.78 mo
192.716 295.553 li
192.716 294.924 192.206 294.415 191.578 294.415 cv
190.949 294.415 190.44 294.924 190.44 295.553 cv
190.44 295.78 li
190.44 296.409 190.949 296.918 191.578 296.918 cv
192.206 296.918 192.716 296.409 192.716 295.78 cv
cp
192.716 299.444 mo
192.716 298.988 li
192.716 298.359 192.206 297.849 191.578 297.849 cv
190.949 297.849 190.44 298.359 190.44 298.988 cv
190.44 299.444 li
190.44 300.073 190.949 300.582 191.578 300.582 cv
192.206 300.582 192.716 300.073 192.716 299.444 cv
cp
192.716 303.094 mo
192.716 302.638 li
192.716 302.009 192.206 301.5 191.578 301.5 cv
190.949 301.5 190.44 302.009 190.44 302.638 cv
190.44 303.094 li
190.44 303.723 190.949 304.232 191.578 304.232 cv
192.206 304.232 192.716 303.723 192.716 303.094 cv
cp
302.031 306.869 mo
302.055 306.673 302.067 306.474 302.067 306.276 cv
302.067 305.647 301.557 305.138 300.929 305.138 cv
300.3 305.138 299.791 305.647 299.791 306.276 cv
299.791 306.383 299.784 306.489 299.772 306.593 cv
299.695 307.217 300.139 307.784 300.763 307.861 cv
300.81 307.866 300.857 307.869 300.903 307.869 cv
301.47 307.869 301.96 307.446 302.031 306.869 cv
cp
191.748 307.872 mo
192.372 307.794 192.814 307.225 192.736 306.602 cv
192.723 306.497 192.716 306.391 192.716 306.283 cv
192.713 305.656 192.204 305.15 191.578 305.15 cv
191.576 305.15 191.574 305.15 191.573 305.15 cv
190.944 305.153 190.437 305.664 190.44 306.293 cv
190.441 306.491 190.453 306.69 190.478 306.884 cv
190.55 307.46 191.04 307.881 191.606 307.881 cv
191.653 307.881 191.7 307.878 191.748 307.872 cv
cp
299.401 310.614 mo
299.576 310.525 299.749 310.424 299.914 310.313 cv
300.436 309.963 300.575 309.256 300.225 308.734 cv
299.874 308.212 299.167 308.073 298.645 308.423 cv
298.558 308.482 298.467 308.536 298.372 308.584 cv
297.812 308.867 297.587 309.552 297.872 310.113 cv
298.072 310.509 298.472 310.737 298.888 310.737 cv
299.061 310.737 299.236 310.697 299.401 310.614 cv
cp
194.648 310.115 mo
194.93 309.553 194.703 308.869 194.142 308.588 cv
194.047 308.54 193.957 308.487 193.869 308.429 cv
193.347 308.08 192.64 308.221 192.291 308.743 cv
191.942 309.266 192.082 309.972 192.605 310.322 cv
192.77 310.432 192.943 310.533 193.121 310.622 cv
193.285 310.704 193.459 310.743 193.63 310.743 cv
194.047 310.743 194.449 310.513 194.648 310.115 cv
cp
198.357 310 mo
198.357 309.371 197.848 308.861 197.219 308.861 cv
196.763 308.861 li
196.135 308.861 195.625 309.371 195.625 310 cv
195.625 310.628 196.135 311.138 196.763 311.138 cv
197.219 311.138 li
197.848 311.138 198.357 310.628 198.357 310 cv
cp
202.008 310 mo
202.008 309.371 201.498 308.861 200.87 308.861 cv
200.413 308.861 li
199.785 308.861 199.275 309.371 199.275 310 cv
199.275 310.628 199.785 311.138 200.413 311.138 cv
200.87 311.138 li
201.498 311.138 202.008 310.628 202.008 310 cv
cp
205.658 310 mo
205.658 309.371 205.149 308.861 204.52 308.861 cv
204.064 308.861 li
203.435 308.861 202.926 309.371 202.926 310 cv
202.926 310.628 203.435 311.138 204.064 311.138 cv
204.52 311.138 li
205.149 311.138 205.658 310.628 205.658 310 cv
cp
209.308 310 mo
209.308 309.371 208.799 308.861 208.17 308.861 cv
207.714 308.861 li
207.085 308.861 206.576 309.371 206.576 310 cv
206.576 310.628 207.085 311.138 207.714 311.138 cv
208.17 311.138 li
208.799 311.138 209.308 310.628 209.308 310 cv
cp
212.958 310 mo
212.958 309.371 212.449 308.861 211.82 308.861 cv
211.364 308.861 li
210.736 308.861 210.226 309.371 210.226 310 cv
210.226 310.628 210.736 311.138 211.364 311.138 cv
211.82 311.138 li
212.449 311.138 212.958 310.628 212.958 310 cv
cp
216.609 310 mo
216.609 309.371 216.099 308.861 215.47 308.861 cv
215.014 308.861 li
214.386 308.861 213.876 309.371 213.876 310 cv
213.876 310.628 214.386 311.138 215.014 311.138 cv
215.47 311.138 li
216.099 311.138 216.609 310.628 216.609 310 cv
cp
220.259 310 mo
220.259 309.371 219.749 308.861 219.121 308.861 cv
218.664 308.861 li
218.036 308.861 217.526 309.371 217.526 310 cv
217.526 310.628 218.036 311.138 218.664 311.138 cv
219.121 311.138 li
219.749 311.138 220.259 310.628 220.259 310 cv
cp
223.909 310 mo
223.909 309.371 223.4 308.861 222.771 308.861 cv
222.315 308.861 li
221.686 308.861 221.177 309.371 221.177 310 cv
221.177 310.628 221.686 311.138 222.315 311.138 cv
222.771 311.138 li
223.4 311.138 223.909 310.628 223.909 310 cv
cp
227.559 310 mo
227.559 309.371 227.05 308.861 226.421 308.861 cv
225.965 308.861 li
225.336 308.861 224.827 309.371 224.827 310 cv
224.827 310.628 225.336 311.138 225.965 311.138 cv
226.421 311.138 li
227.05 311.138 227.559 310.628 227.559 310 cv
cp
231.209 310 mo
231.209 309.371 230.7 308.861 230.071 308.861 cv
229.615 308.861 li
228.987 308.861 228.477 309.371 228.477 310 cv
228.477 310.628 228.987 311.138 229.615 311.138 cv
230.071 311.138 li
230.7 311.138 231.209 310.628 231.209 310 cv
cp
234.86 310 mo
234.86 309.371 234.35 308.861 233.722 308.861 cv
233.265 308.861 li
232.637 308.861 232.127 309.371 232.127 310 cv
232.127 310.628 232.637 311.138 233.265 311.138 cv
233.722 311.138 li
234.35 311.138 234.86 310.628 234.86 310 cv
cp
238.51 310 mo
238.51 309.371 238 308.861 237.372 308.861 cv
236.915 308.861 li
236.287 308.861 235.777 309.371 235.777 310 cv
235.777 310.628 236.287 311.138 236.915 311.138 cv
237.372 311.138 li
238 311.138 238.51 310.628 238.51 310 cv
cp
242.16 310 mo
242.16 309.371 241.651 308.861 241.022 308.861 cv
240.566 308.861 li
239.937 308.861 239.428 309.371 239.428 310 cv
239.428 310.628 239.937 311.138 240.566 311.138 cv
241.022 311.138 li
241.651 311.138 242.16 310.628 242.16 310 cv
cp
245.81 310 mo
245.81 309.371 245.301 308.861 244.672 308.861 cv
244.216 308.861 li
243.587 308.861 243.078 309.371 243.078 310 cv
243.078 310.628 243.587 311.138 244.216 311.138 cv
244.672 311.138 li
245.301 311.138 245.81 310.628 245.81 310 cv
cp
249.46 310 mo
249.46 309.371 248.951 308.861 248.322 308.861 cv
247.866 308.861 li
247.238 308.861 246.728 309.371 246.728 310 cv
246.728 310.628 247.238 311.138 247.866 311.138 cv
248.322 311.138 li
248.951 311.138 249.46 310.628 249.46 310 cv
cp
253.111 310 mo
253.111 309.371 252.601 308.861 251.973 308.861 cv
251.516 308.861 li
250.888 308.861 250.378 309.371 250.378 310 cv
250.378 310.628 250.888 311.138 251.516 311.138 cv
251.973 311.138 li
252.601 311.138 253.111 310.628 253.111 310 cv
cp
256.761 310 mo
256.761 309.371 256.252 308.861 255.623 308.861 cv
255.167 308.861 li
254.538 308.861 254.028 309.371 254.028 310 cv
254.028 310.628 254.538 311.138 255.167 311.138 cv
255.623 311.138 li
256.252 311.138 256.761 310.628 256.761 310 cv
cp
260.411 310 mo
260.411 309.371 259.902 308.861 259.273 308.861 cv
258.817 308.861 li
258.188 308.861 257.679 309.371 257.679 310 cv
257.679 310.628 258.188 311.138 258.817 311.138 cv
259.273 311.138 li
259.902 311.138 260.411 310.628 260.411 310 cv
cp
264.061 310 mo
264.061 309.371 263.552 308.861 262.923 308.861 cv
262.467 308.861 li
261.838 308.861 261.329 309.371 261.329 310 cv
261.329 310.628 261.838 311.138 262.467 311.138 cv
262.923 311.138 li
263.552 311.138 264.061 310.628 264.061 310 cv
cp
267.712 310 mo
267.712 309.371 267.202 308.861 266.573 308.861 cv
266.117 308.861 li
265.489 308.861 264.979 309.371 264.979 310 cv
264.979 310.628 265.489 311.138 266.117 311.138 cv
266.573 311.138 li
267.202 311.138 267.712 310.628 267.712 310 cv
cp
271.362 310 mo
271.362 309.371 270.852 308.861 270.224 308.861 cv
269.767 308.861 li
269.139 308.861 268.629 309.371 268.629 310 cv
268.629 310.628 269.139 311.138 269.767 311.138 cv
270.224 311.138 li
270.852 311.138 271.362 310.628 271.362 310 cv
cp
275.012 310 mo
275.012 309.371 274.503 308.861 273.874 308.861 cv
273.418 308.861 li
272.789 308.861 272.28 309.371 272.28 310 cv
272.28 310.628 272.789 311.138 273.418 311.138 cv
273.874 311.138 li
274.503 311.138 275.012 310.628 275.012 310 cv
cp
278.662 310 mo
278.662 309.371 278.153 308.861 277.524 308.861 cv
277.068 308.861 li
276.439 308.861 275.93 309.371 275.93 310 cv
275.93 310.628 276.439 311.138 277.068 311.138 cv
277.524 311.138 li
278.153 311.138 278.662 310.628 278.662 310 cv
cp
282.312 310 mo
282.312 309.371 281.803 308.861 281.174 308.861 cv
280.718 308.861 li
280.09 308.861 279.58 309.371 279.58 310 cv
279.58 310.628 280.09 311.138 280.718 311.138 cv
281.174 311.138 li
281.803 311.138 282.312 310.628 282.312 310 cv
cp
285.963 310 mo
285.963 309.371 285.453 308.861 284.825 308.861 cv
284.368 308.861 li
283.74 308.861 283.23 309.371 283.23 310 cv
283.23 310.628 283.74 311.138 284.368 311.138 cv
284.825 311.138 li
285.453 311.138 285.963 310.628 285.963 310 cv
cp
289.613 310 mo
289.613 309.371 289.103 308.861 288.475 308.861 cv
288.018 308.861 li
287.39 308.861 286.88 309.371 286.88 310 cv
286.88 310.628 287.39 311.138 288.018 311.138 cv
288.475 311.138 li
289.103 311.138 289.613 310.628 289.613 310 cv
cp
293.263 310 mo
293.263 309.371 292.754 308.861 292.125 308.861 cv
291.669 308.861 li
291.04 308.861 290.531 309.371 290.531 310 cv
290.531 310.628 291.04 311.138 291.669 311.138 cv
292.125 311.138 li
292.754 311.138 293.263 310.628 293.263 310 cv
cp
296.895 310 mo
296.895 309.371 296.385 308.861 295.757 308.861 cv
295.3 308.861 li
294.672 308.861 294.162 309.371 294.162 310 cv
294.162 310.628 294.672 311.138 295.3 311.138 cv
295.757 311.138 li
296.385 311.138 296.895 310.628 296.895 310 cv
cp
302.067 299.431 mo
302.067 298.974 li
302.067 298.346 301.557 297.836 300.929 297.836 cv
300.3 297.836 299.791 298.346 299.791 298.974 cv
299.791 299.431 li
299.791 300.059 300.3 300.569 300.929 300.569 cv
301.557 300.569 302.067 300.059 302.067 299.431 cv
cp
302.067 303.081 mo
302.067 302.625 li
302.067 301.996 301.557 301.486 300.929 301.486 cv
300.3 301.486 299.791 301.996 299.791 302.625 cv
299.791 303.081 li
299.791 303.709 300.3 304.219 300.929 304.219 cv
301.557 304.219 302.067 303.709 302.067 303.081 cv
cp
300.929 296.918 mo
300.3 296.918 299.791 296.409 299.791 295.78 cv
299.791 295.553 li
299.791 294.924 300.3 294.415 300.929 294.415 cv
301.557 294.415 302.067 294.924 302.067 295.553 cv
302.067 295.78 li
302.067 296.409 301.557 296.918 300.929 296.918 cv
cp
.490196 .278431 .105882 rgb
f
192.35 299.148 mo
192.35 298.692 li
192.35 298.44 192.146 298.237 191.895 298.237 cv
191.643 298.237 191.439 298.44 191.439 298.692 cv
191.439 299.148 li
191.439 299.4 191.643 299.603 191.895 299.603 cv
192.146 299.603 192.35 299.4 192.35 299.148 cv
cp
192.35 302.798 mo
192.35 302.342 li
192.35 302.091 192.146 301.887 191.895 301.887 cv
191.643 301.887 191.439 302.091 191.439 302.342 cv
191.439 302.798 li
191.439 303.05 191.643 303.254 191.895 303.254 cv
192.146 303.254 192.35 303.05 192.35 302.798 cv
cp
301.482 306.49 mo
301.502 306.322 301.512 306.15 301.512 305.98 cv
301.512 305.728 301.309 305.525 301.057 305.525 cv
300.806 305.525 300.602 305.728 300.602 305.98 cv
300.602 306.115 300.594 306.249 300.578 306.38 cv
300.547 306.63 300.725 306.857 300.975 306.887 cv
300.993 306.889 301.012 306.89 301.03 306.89 cv
301.257 306.89 301.453 306.721 301.482 306.49 cv
cp
191.98 306.899 mo
192.23 306.868 192.407 306.64 192.375 306.391 cv
192.359 306.259 192.351 306.126 192.35 305.99 cv
192.349 305.74 192.145 305.537 191.895 305.537 cv
191.894 305.537 191.893 305.537 191.893 305.537 cv
191.641 305.538 191.438 305.743 191.439 305.994 cv
191.44 306.165 191.451 306.337 191.472 306.504 cv
191.501 306.734 191.697 306.903 191.923 306.903 cv
191.942 306.903 191.961 306.901 191.98 306.899 cv
cp
299.221 309.709 mo
299.372 309.633 299.52 309.546 299.662 309.45 cv
299.871 309.31 299.926 309.028 299.786 308.819 cv
299.646 308.61 299.363 308.553 299.154 308.695 cv
299.044 308.769 298.929 308.836 298.81 308.897 cv
298.585 309.01 298.495 309.284 298.609 309.509 cv
298.689 309.667 298.849 309.758 299.016 309.758 cv
299.085 309.758 299.155 309.742 299.221 309.709 cv
cp
194.355 309.513 mo
194.468 309.288 194.377 309.015 194.152 308.902 cv
194.032 308.842 193.917 308.775 193.807 308.701 cv
193.598 308.562 193.315 308.618 193.175 308.827 cv
193.036 309.036 193.092 309.318 193.301 309.458 cv
193.443 309.553 193.592 309.639 193.744 309.716 cv
193.809 309.749 193.879 309.764 193.948 309.764 cv
194.115 309.764 194.275 309.672 194.355 309.513 cv
cp
197.991 309.704 mo
197.991 309.452 197.788 309.249 197.536 309.249 cv
197.08 309.249 li
196.829 309.249 196.625 309.452 196.625 309.704 cv
196.625 309.955 196.829 310.159 197.08 310.159 cv
197.536 310.159 li
197.788 310.159 197.991 309.955 197.991 309.704 cv
cp
201.642 309.704 mo
201.642 309.452 201.438 309.249 201.187 309.249 cv
200.73 309.249 li
200.479 309.249 200.275 309.452 200.275 309.704 cv
200.275 309.955 200.479 310.159 200.73 310.159 cv
201.187 310.159 li
201.438 310.159 201.642 309.955 201.642 309.704 cv
cp
205.292 309.704 mo
205.292 309.452 205.088 309.249 204.837 309.249 cv
204.38 309.249 li
204.129 309.249 203.925 309.452 203.925 309.704 cv
203.925 309.955 204.129 310.159 204.38 310.159 cv
204.837 310.159 li
205.088 310.159 205.292 309.955 205.292 309.704 cv
cp
208.942 309.704 mo
208.942 309.452 208.738 309.249 208.487 309.249 cv
208.031 309.249 li
207.779 309.249 207.575 309.452 207.575 309.704 cv
207.575 309.955 207.779 310.159 208.031 310.159 cv
208.487 310.159 li
208.738 310.159 208.942 309.955 208.942 309.704 cv
cp
212.592 309.704 mo
212.592 309.452 212.388 309.249 212.137 309.249 cv
211.681 309.249 li
211.43 309.249 211.226 309.452 211.226 309.704 cv
211.226 309.955 211.43 310.159 211.681 310.159 cv
212.137 310.159 li
212.388 310.159 212.592 309.955 212.592 309.704 cv
cp
216.243 309.704 mo
216.243 309.452 216.039 309.249 215.787 309.249 cv
215.331 309.249 li
215.08 309.249 214.876 309.452 214.876 309.704 cv
214.876 309.955 215.08 310.159 215.331 310.159 cv
215.787 310.159 li
216.039 310.159 216.243 309.955 216.243 309.704 cv
cp
219.893 309.704 mo
219.893 309.452 219.689 309.249 219.438 309.249 cv
218.981 309.249 li
218.73 309.249 218.526 309.452 218.526 309.704 cv
218.526 309.955 218.73 310.159 218.981 310.159 cv
219.438 310.159 li
219.689 310.159 219.893 309.955 219.893 309.704 cv
cp
223.543 309.704 mo
223.543 309.452 223.339 309.249 223.088 309.249 cv
222.632 309.249 li
222.38 309.249 222.176 309.452 222.176 309.704 cv
222.176 309.955 222.38 310.159 222.632 310.159 cv
223.088 310.159 li
223.339 310.159 223.543 309.955 223.543 309.704 cv
cp
227.193 309.704 mo
227.193 309.452 226.99 309.249 226.738 309.249 cv
226.282 309.249 li
226.03 309.249 225.827 309.452 225.827 309.704 cv
225.827 309.955 226.03 310.159 226.282 310.159 cv
226.738 310.159 li
226.99 310.159 227.193 309.955 227.193 309.704 cv
cp
230.843 309.704 mo
230.843 309.452 230.64 309.249 230.388 309.249 cv
229.932 309.249 li
229.681 309.249 229.477 309.452 229.477 309.704 cv
229.477 309.955 229.681 310.159 229.932 310.159 cv
230.388 310.159 li
230.64 310.159 230.843 309.955 230.843 309.704 cv
cp
234.494 309.704 mo
234.494 309.452 234.29 309.249 234.038 309.249 cv
233.582 309.249 li
233.331 309.249 233.127 309.452 233.127 309.704 cv
233.127 309.955 233.331 310.159 233.582 310.159 cv
234.038 310.159 li
234.29 310.159 234.494 309.955 234.494 309.704 cv
cp
238.144 309.704 mo
238.144 309.452 237.94 309.249 237.689 309.249 cv
237.232 309.249 li
236.981 309.249 236.777 309.452 236.777 309.704 cv
236.777 309.955 236.981 310.159 237.232 310.159 cv
237.689 310.159 li
237.94 310.159 238.144 309.955 238.144 309.704 cv
cp
241.794 309.704 mo
241.794 309.452 241.59 309.249 241.339 309.249 cv
240.883 309.249 li
240.631 309.249 240.427 309.452 240.427 309.704 cv
240.427 309.955 240.631 310.159 240.883 310.159 cv
241.339 310.159 li
241.59 310.159 241.794 309.955 241.794 309.704 cv
cp
245.444 309.704 mo
245.444 309.452 245.24 309.249 244.989 309.249 cv
244.533 309.249 li
244.281 309.249 244.078 309.452 244.078 309.704 cv
244.078 309.955 244.281 310.159 244.533 310.159 cv
244.989 310.159 li
245.24 310.159 245.444 309.955 245.444 309.704 cv
cp
249.094 309.704 mo
249.094 309.452 248.891 309.249 248.639 309.249 cv
248.183 309.249 li
247.932 309.249 247.728 309.452 247.728 309.704 cv
247.728 309.955 247.932 310.159 248.183 310.159 cv
248.639 310.159 li
248.891 310.159 249.094 309.955 249.094 309.704 cv
cp
252.745 309.704 mo
252.745 309.452 252.541 309.249 252.289 309.249 cv
251.833 309.249 li
251.582 309.249 251.378 309.452 251.378 309.704 cv
251.378 309.955 251.582 310.159 251.833 310.159 cv
252.289 310.159 li
252.541 310.159 252.745 309.955 252.745 309.704 cv
cp
256.395 309.704 mo
256.395 309.452 256.191 309.249 255.94 309.249 cv
255.483 309.249 li
255.232 309.249 255.028 309.452 255.028 309.704 cv
255.028 309.955 255.232 310.159 255.483 310.159 cv
255.94 310.159 li
256.191 310.159 256.395 309.955 256.395 309.704 cv
cp
260.045 309.704 mo
260.045 309.452 259.841 309.249 259.59 309.249 cv
259.134 309.249 li
258.882 309.249 258.678 309.452 258.678 309.704 cv
258.678 309.955 258.882 310.159 259.134 310.159 cv
259.59 310.159 li
259.841 310.159 260.045 309.955 260.045 309.704 cv
cp
263.695 309.704 mo
263.695 309.452 263.491 309.249 263.24 309.249 cv
262.784 309.249 li
262.533 309.249 262.329 309.452 262.329 309.704 cv
262.329 309.955 262.533 310.159 262.784 310.159 cv
263.24 310.159 li
263.491 310.159 263.695 309.955 263.695 309.704 cv
cp
267.346 309.704 mo
267.346 309.452 267.142 309.249 266.89 309.249 cv
266.434 309.249 li
266.183 309.249 265.979 309.452 265.979 309.704 cv
265.979 309.955 266.183 310.159 266.434 310.159 cv
266.89 310.159 li
267.142 310.159 267.346 309.955 267.346 309.704 cv
cp
270.996 309.704 mo
270.996 309.452 270.792 309.249 270.541 309.249 cv
270.084 309.249 li
269.833 309.249 269.629 309.452 269.629 309.704 cv
269.629 309.955 269.833 310.159 270.084 310.159 cv
270.541 310.159 li
270.792 310.159 270.996 309.955 270.996 309.704 cv
cp
274.646 309.704 mo
274.646 309.452 274.442 309.249 274.191 309.249 cv
273.734 309.249 li
273.483 309.249 273.279 309.452 273.279 309.704 cv
273.279 309.955 273.483 310.159 273.734 310.159 cv
274.191 310.159 li
274.442 310.159 274.646 309.955 274.646 309.704 cv
cp
278.296 309.704 mo
278.296 309.452 278.092 309.249 277.841 309.249 cv
277.385 309.249 li
277.133 309.249 276.93 309.452 276.93 309.704 cv
276.93 309.955 277.133 310.159 277.385 310.159 cv
277.841 310.159 li
278.092 310.159 278.296 309.955 278.296 309.704 cv
cp
281.946 309.704 mo
281.946 309.452 281.743 309.249 281.491 309.249 cv
281.035 309.249 li
280.784 309.249 280.58 309.452 280.58 309.704 cv
280.58 309.955 280.784 310.159 281.035 310.159 cv
281.491 310.159 li
281.743 310.159 281.946 309.955 281.946 309.704 cv
cp
285.597 309.704 mo
285.597 309.452 285.393 309.249 285.141 309.249 cv
284.685 309.249 li
284.434 309.249 284.23 309.452 284.23 309.704 cv
284.23 309.955 284.434 310.159 284.685 310.159 cv
285.141 310.159 li
285.393 310.159 285.597 309.955 285.597 309.704 cv
cp
289.247 309.704 mo
289.247 309.452 289.043 309.249 288.792 309.249 cv
288.335 309.249 li
288.084 309.249 287.88 309.452 287.88 309.704 cv
287.88 309.955 288.084 310.159 288.335 310.159 cv
288.792 310.159 li
289.043 310.159 289.247 309.955 289.247 309.704 cv
cp
292.897 309.704 mo
292.897 309.452 292.693 309.249 292.442 309.249 cv
291.986 309.249 li
291.734 309.249 291.53 309.452 291.53 309.704 cv
291.53 309.955 291.734 310.159 291.986 310.159 cv
292.442 310.159 li
292.693 310.159 292.897 309.955 292.897 309.704 cv
cp
296.34 309.704 mo
296.34 309.452 296.136 309.249 295.885 309.249 cv
295.429 309.249 li
295.177 309.249 294.973 309.452 294.973 309.704 cv
294.973 309.955 295.177 310.159 295.429 310.159 cv
295.885 310.159 li
296.136 310.159 296.34 309.955 296.34 309.704 cv
cp
301.512 299.135 mo
301.512 298.678 li
301.512 298.427 301.309 298.223 301.057 298.223 cv
300.806 298.223 300.602 298.427 300.602 298.678 cv
300.602 299.135 li
300.602 299.386 300.806 299.59 301.057 299.59 cv
301.309 299.59 301.512 299.386 301.512 299.135 cv
cp
301.512 302.785 mo
301.512 302.329 li
301.512 302.077 301.309 301.874 301.057 301.874 cv
300.806 301.874 300.602 302.077 300.602 302.329 cv
300.602 302.785 li
300.602 303.036 300.806 303.24 301.057 303.24 cv
301.309 303.24 301.512 303.036 301.512 302.785 cv
cp
.698039 .458824 .278431 rgb
f
308.157 281.671 mo
185.324 281.671 li
181.569 281.671 185.28 278.209 192.134 274.697 cv
198.987 271.185 li
203.505 268.87 207.26 267.25 210.971 267.25 cv
282.51 267.25 li
286.526 267.25 289.976 268.87 294.494 271.185 cv
301.347 274.697 li
308.201 278.209 311.912 281.671 308.157 281.671 cv
cp
.94902 .556863 0 rgb
f
294.036 277.388 mo
199.445 277.388 li
192.627 277.388 195.308 275.175 199.568 272.796 cv
204.09 270.271 li
207.226 268.519 210.057 267.25 213.552 267.25 cv
279.929 267.25 li
283.711 267.25 286.255 268.519 289.391 270.271 cv
293.913 272.796 li
298.173 275.175 300.854 277.388 294.036 277.388 cv
cp
.898039 .501961 .145098 rgb
f
255.221 270.592 mo
209.281 270.592 204.232 272.855 204.232 272.855 cv
206.724 271.496 209.001 268.603 215.844 268.603 cv
277.637 268.603 li
283.978 268.603 287.044 271.294 289.249 272.855 cv
289.249 272.855 279.567 270.592 255.221 270.592 cv
cp
.968627 .631373 .223529 rgb
f
304.196 296.311 mo
189.285 296.311 li
185.743 296.311 182.872 294.746 182.872 292.815 cv
182.872 283.132 li
182.872 280.177 185.68 278.554 186.484 278.072 cv
185.582 278.673 186.214 279.635 188.472 279.635 cv
305.009 279.635 li
307.265 279.635 308.075 279.014 306.997 278.069 cv
307.65 278.616 310.61 280.399 310.61 283.132 cv
310.61 292.815 li
310.61 294.746 307.738 296.311 304.196 296.311 cv
cp
.807843 .435294 .0352941 rgb
f
305.562 292.669 mo
187.919 292.669 li
184.377 292.669 183.782 291.559 183.782 289.628 cv
183.782 283.132 li
183.782 280.177 185.68 278.554 186.484 278.072 cv
185.582 278.673 186.214 279.635 188.472 279.635 cv
305.009 279.635 li
307.265 279.635 308.075 279.014 306.997 278.069 cv
307.65 278.616 309.699 280.399 309.699 283.132 cv
309.699 289.628 li
309.699 291.559 309.104 292.669 305.562 292.669 cv
cp
.898039 .501961 .145098 rgb
f
304.612 289.331 mo
188.869 289.331 li
185.361 289.331 184.771 288.475 184.771 286.985 cv
184.771 281.974 li
184.771 279.695 186.652 278.443 187.448 278.071 cv
186.554 278.535 187.18 279.277 189.416 279.277 cv
304.065 279.277 li
306.298 279.277 307.101 278.798 306.034 278.069 cv
306.68 278.491 308.71 279.866 308.71 281.974 cv
308.71 286.985 li
308.71 288.475 308.12 289.331 304.612 289.331 cv
cp
.94902 .556863 0 rgb
f
304.196 296.311 mo
189.285 296.311 li
185.743 296.311 182.872 294.746 182.872 292.815 cv
182.872 289.635 li
182.872 292.036 182.919 294.559 187.561 294.559 cv
305.92 294.559 li
310.562 294.559 310.61 291.39 310.61 289.635 cv
310.61 292.815 li
310.61 294.746 307.738 296.311 304.196 296.311 cv
cp
.678431 .360784 .0431373 rgb
f
255.531 280.396 mo
190.017 280.396 186.312 280.396 186.312 280.396 cv
186.312 283.967 189.639 284.622 191.67 284.622 cv
203.576 284.622 217.383 282.509 255.487 282.509 cv
293.59 282.509 283.686 284.622 302.432 284.622 cv
304.589 284.622 307.789 283.699 307.789 280.396 cv
307.789 280.396 320.293 280.396 255.531 280.396 cv
cp
.968627 .631373 .223529 rgb
f
35.5198 309.425 mo
35.5484 309.211 36.5581 308.952 38.3104 308.669 cv
43.953 308.593 51.1591 308.365 60.3817 307.904 cv
64.2395 308.992 li
48.7532 309.917 35.4138 310.22 35.5198 309.425 cv
cp
28.1727 308.619 mo
29.6259 308.662 31.2932 308.689 33.1816 308.696 cv
31.7722 308.935 30.6496 309.168 29.8688 309.391 cv
28.1727 308.619 li
cp
93.8858 304.494 mo
92.4512 304.482 90.8527 304.488 89.0939 304.514 cv
89.6651 304.381 90.1694 304.253 90.6132 304.133 cv
93.8858 304.494 li
cp
73.4069 308.387 mo
72.2983 308.467 71.1899 308.545 70.0848 308.62 cv
66.2553 307.549 li
75.2131 306.907 81.9715 305.943 86.4421 305.075 cv
94.3577 304.836 99.1608 304.949 99.1216 305.384 cv
99.0644 306.02 88.6727 307.284 73.4069 308.387 cv
cp
66.7871 309.71 mo
113.597 322.909 li
119.125 322.333 li
72.5132 309.299 li
72.7806 309.278 73.0483 309.258 73.3155 309.238 cv
90.0096 307.94 101.293 306.346 102.017 305.391 cv
107.727 306.021 li
111.366 305.392 li
92.4254 303.545 li
92.9058 303.339 93.0358 303.192 92.7921 303.131 cv
91.5869 302.83 90.4315 302.54 89.4801 302.308 cv
89.663 302.142 89.7691 301.976 89.7769 301.81 cv
89.8909 299.386 70.8304 297.892 47.204 298.473 cv
23.5777 299.055 4.33216 301.491 4.21806 303.914 cv
4.16776 304.985 7.86126 305.874 14.0321 306.483 cv
17.489 307.403 17.1203 307.278 17.489 307.403 cv
17.9504 307.56 18.7797 307.868 21 308.145 cv
51.6011 322.553 li
57.1963 321.821 li
32.9842 310.808 li
39.6122 311.09 52.8862 310.646 66.7871 309.71 cv
cp
.682353 .686275 .698039 rgb
f
60.1126 234.917 mo
58.6716 305.166 li
58.6577 305.843 59.7813 306.392 61.1811 306.392 cv
62.5809 306.392 63.7269 305.843 63.7408 305.166 cv
65.1817 234.917 li
60.1126 234.917 li
cp
.439216 .25098 .12549 rgb
f
60.3885 306.324 mo
60.6389 306.365 60.902 306.392 61.1811 306.392 cv
61.7222 306.392 62.223 306.308 62.6376 306.169 cv
64.0991 234.917 li
61.8532 234.917 li
60.3885 306.324 li
cp
.517647 .313726 .176471 rgb
f
63.7701 234.917 mo
62.6472 234.917 li
61.1811 306.392 li
61.5908 306.392 61.9634 306.332 62.3069 306.248 cv
63.7701 234.917 li
cp
.588235 .376471 .235294 rgb
f
105.193 234.917 mo
106.551 305.166 li
106.564 305.843 107.709 306.392 109.109 306.392 cv
110.509 306.392 111.633 305.843 111.62 305.166 cv
110.262 234.917 li
105.193 234.917 li
cp
.439216 .25098 .12549 rgb
f
108.314 306.324 mo
108.566 306.365 108.83 306.392 109.109 306.392 cv
109.65 306.392 110.148 306.308 110.557 306.169 cv
109.179 234.917 li
106.933 234.917 li
108.314 306.324 li
cp
.517647 .313726 .176471 rgb
f
108.85 234.917 mo
107.727 234.917 li
109.109 306.392 li
109.519 306.392 109.889 306.332 110.229 306.248 cv
108.85 234.917 li
cp
.588235 .376471 .235294 rgb
f
85.1805 280.634 mo
69.3302 280.634 56.481 278.309 56.481 275.441 cv
56.481 272.573 69.3302 270.248 85.1805 270.248 cv
101.031 270.248 113.88 272.573 113.88 275.441 cv
113.88 278.309 101.031 280.634 85.1805 280.634 cv
cp
85.1805 268.052 mo
67.0969 268.052 52.4372 271.585 52.4372 275.942 cv
52.4372 280.299 67.0969 283.832 85.1805 283.832 cv
103.264 283.832 117.924 280.299 117.924 275.942 cv
117.924 271.585 103.264 268.052 85.1805 268.052 cv
cp
.439216 .25098 .12549 rgb
f
112.683 273.007 mo
112.633 273.007 112.583 272.997 112.535 272.974 cv
107.633 270.728 96.8951 269.277 85.1805 269.277 cv
73.5984 269.277 62.9121 270.705 57.9561 272.916 cv
57.7762 272.993 57.5657 272.915 57.486 272.735 cv
57.4058 272.556 57.4864 272.346 57.6659 272.265 cv
62.7062 270.017 73.5061 268.565 85.1805 268.565 cv
96.9897 268.565 107.843 270.041 112.832 272.327 cv
113.01 272.409 113.089 272.62 113.007 272.799 cv
112.947 272.93 112.818 273.007 112.683 273.007 cv
cp
.517647 .313726 .176471 rgb
f
85.1805 282.135 mo
73.3916 282.135 62.5458 280.662 57.549 278.382 cv
57.3701 278.3 57.2912 278.09 57.3728 277.91 cv
57.4544 277.731 57.6645 277.652 57.8448 277.734 cv
62.7559 279.975 73.4857 281.423 85.1805 281.423 cv
97.2188 281.423 108.074 279.916 112.835 277.583 cv
113.013 277.498 113.225 277.57 113.312 277.746 cv
113.398 277.923 113.326 278.137 113.149 278.223 cv
108.297 280.6 97.3189 282.135 85.1805 282.135 cv
cp
f
53.0664 234.328 mo
51.2698 321.919 li
51.2525 322.763 52.6533 323.447 54.3987 323.447 cv
56.144 323.447 57.573 322.763 57.5903 321.919 cv
59.3869 234.328 li
53.0664 234.328 li
cp
f
53.4105 323.363 mo
53.7226 323.413 54.0507 323.447 54.3987 323.447 cv
55.0734 323.447 55.6978 323.343 56.2147 323.169 cv
58.037 234.328 li
55.2368 234.328 li
53.4105 323.363 li
cp
.588235 .376471 .235294 rgb
f
57.6268 234.328 mo
56.2267 234.328 li
54.3987 323.447 li
54.9096 323.447 55.3741 323.373 55.8025 323.268 cv
57.6268 234.328 li
cp
.647059 .431373 .286275 rgb
f
111.111 234.328 mo
112.805 321.919 li
112.821 322.763 114.249 323.447 115.994 323.447 cv
117.74 323.447 119.141 322.763 119.125 321.919 cv
117.432 234.328 li
111.111 234.328 li
cp
.517647 .313726 .176471 rgb
f
115.003 323.363 mo
115.317 323.413 115.646 323.447 115.994 323.447 cv
116.669 323.447 117.289 323.343 117.799 323.169 cv
116.082 234.328 li
113.281 234.328 li
115.003 323.363 li
cp
.588235 .376471 .235294 rgb
f
115.671 234.328 mo
114.271 234.328 li
115.994 323.447 li
116.505 323.447 116.967 323.373 117.391 323.268 cv
115.671 234.328 li
cp
.647059 .431373 .286275 rgb
f
52.9805 238.519 mo
54.4112 239.299 56.6364 239.885 59.2676 240.142 cv
59.3869 234.328 li
53.2293 234.328 li
53.1731 234.356 53.1188 234.384 53.0647 234.413 cv
52.9805 238.519 li
cp
.439216 .25098 .12549 rgb
f
117.518 238.519 mo
116.087 239.299 113.862 239.885 111.23 240.142 cv
111.111 234.328 li
117.269 234.328 li
117.325 234.356 117.379 234.384 117.433 234.413 cv
117.518 238.519 li
cp
f
49.201 231.596 mo
49.201 234.751 li
49.201 238.414 65.3096 241.384 85.1806 241.384 cv
105.051 241.384 121.16 238.414 121.16 234.751 cv
121.16 231.596 li
49.201 231.596 li
cp
.517647 .313726 .176471 rgb
f
56.481 238.751 mo
63.0501 240.35 73.4589 241.384 85.1806 241.384 cv
99.4035 241.384 111.696 239.862 117.536 237.654 cv
117.536 231.596 li
56.481 231.596 li
56.481 238.751 li
cp
.588235 .376471 .235294 rgb
f
85.1806 241.384 mo
98.2627 241.384 109.697 240.095 115.994 238.17 cv
115.994 231.596 li
85.1806 231.596 li
85.1806 231.596 85.1806 238.402 85.1806 241.384 cv
cp
.647059 .431373 .286275 rgb
f
125.216 225.65 mo
125.216 223.35 124.227 223.131 124.227 221.686 cv
124.227 217.308 106.788 213.759 85.2743 213.759 cv
63.7611 213.759 46.3213 217.308 46.3213 221.686 cv
46.3213 223.131 45.3328 222.389 45.3328 225.65 cv
45.3328 228.911 46.3213 228.169 46.3213 229.614 cv
46.3213 233.992 63.7611 237.542 85.2743 237.542 cv
106.788 237.542 124.227 233.992 124.227 229.614 cv
124.227 228.169 125.216 227.95 125.216 225.65 cv
cp
f
47.9875 220.865 mo
47.9875 219.387 64.6814 214.267 85.2744 214.267 cv
95.7299 214.267 105.18 215.443 111.951 216.867 cv
118.516 218.247 105.867 217.467 85.2744 217.467 cv
53.9831 217.467 47.9875 222.247 47.9875 220.865 cv
cp
.709804 .482353 .329412 rgb
f
76.0562 235.328 mo
54.4426 234.098 48.6899 230.604 46.2502 229.052 cv
46.2947 229.199 46.3213 229.377 46.3213 229.614 cv
46.3213 233.992 63.7611 237.542 85.2743 237.542 cv
104.442 237.542 120.377 234.724 123.623 231.013 cv
118.764 233.664 99.8414 236.681 76.0562 235.328 cv
cp
.439216 .25098 .12549 rgb
f
91.8451 230.936 mo
89.5745 231.034 87.2344 231.205 84.8434 231.207 cv
63.5022 231.227 46.3045 226.859 46.3045 222.429 cv
47.9952 223.843 50.4875 225.772 62.8551 228.242 cv
68.0805 229.286 82.3979 230.693 91.8451 230.936 cv
cp
.517647 .313726 .176471 rgb
f
85.2743 225.834 mo
67.8943 225.834 52.905 225.192 58.4324 226.305 cv
63.3163 227.288 74.301 228.242 85.2743 228.242 cv
106.276 228.242 123.302 226.344 123.302 222.431 cv
123.302 222.337 118.507 225.834 85.2743 225.834 cv
cp
.709804 .482353 .329412 rgb
f
457.047 147.418 mo
460.543 146.136 li
450.64 140.494 li
451.682 140.494 li
453.399 140.494 451.702 137.66 448.568 134.783 cv
442.735 129.081 li
448.187 131.119 li
451.067 130.063 li
439.626 125.34 li
438.951 125.38 li
437.95 124.401 li
435.884 122.505 434.306 121.178 432.47 121.178 cv
401.135 120.175 li
400.081 119.843 398.939 119.437 397.723 118.934 cv
393.585 117.223 391.969 116.14 391.45 115.925 cv
390.582 115.566 390.541 111.528 387.847 111.528 cv
386.012 111.528 329.672 111.528 327.836 111.528 cv
324.604 111.528 325.816 115.889 327.37 116.505 cv
327.868 116.702 328.975 117.277 332.947 119.241 cv
336.482 120.988 335.893 122.999 334.706 124.22 cv
334.706 124.22 li
332.409 126.666 330.072 129.203 329.588 129.725 cv
328.538 130.86 329.176 132.37 329.839 132.916 cv
339.597 139.789 li
340.247 140.245 341.052 140.494 341.881 140.494 cv
342.67 140.494 li
352.898 147.418 li
356.393 146.136 li
350.059 140.494 li
442.918 140.494 li
457.047 147.418 li
cp
.682353 .686275 .698039 rgb
f
365.655 103.872 mo
361.249 103.872 li
361.249 130.088 li
361.249 130.641 362.035 131.119 363.43 131.119 cv
364.824 131.119 365.655 130.535 365.655 130.088 cv
365.655 103.872 li
cp
.407843 .403922 .423529 rgb
f
365.018 103.872 mo
361.885 103.872 li
361.885 130.844 li
362.142 130.985 362.613 131.119 363.436 131.119 cv
364.428 131.119 364.868 130.887 365.018 130.777 cv
365.018 103.872 li
cp
.682353 .686275 .698039 rgb
f
364.595 103.872 mo
362.871 103.872 li
362.871 131.091 li
363.051 131.108 363.271 131.119 363.724 131.119 cv
363.908 131.119 364.452 131.019 364.595 130.96 cv
364.595 103.872 li
cp
.847059 .854902 .862745 rgb
f
451.321 103.872 mo
446.915 103.872 li
446.915 130.088 li
446.915 130.641 447.702 131.119 449.096 131.119 cv
450.491 131.119 451.321 130.535 451.321 130.088 cv
451.321 103.872 li
cp
.407843 .403922 .423529 rgb
f
450.685 103.872 mo
447.551 103.872 li
447.551 130.844 li
447.808 130.985 448.279 131.119 449.102 131.119 cv
450.094 131.119 450.534 130.887 450.685 130.777 cv
450.685 103.872 li
cp
.682353 .686275 .698039 rgb
f
450.261 103.872 mo
448.537 103.872 li
448.537 131.091 li
448.717 131.108 448.938 131.119 449.391 131.119 cv
449.574 131.119 450.118 131.019 450.261 130.96 cv
450.261 103.872 li
cp
.847059 .854902 .862745 rgb
f
357.167 114.556 mo
351.811 114.556 li
351.811 146.429 li
351.811 147.1 352.767 147.682 354.462 147.682 cv
356.157 147.682 357.167 146.972 357.167 146.429 cv
357.167 114.556 li
cp
.407843 .403922 .423529 rgb
f
356.393 114.556 mo
352.584 114.556 li
352.584 147.347 li
352.896 147.519 353.469 147.682 354.47 147.682 cv
355.675 147.682 356.21 147.4 356.393 147.267 cv
356.393 114.556 li
cp
.682353 .686275 .698039 rgb
f
355.879 114.556 mo
353.783 114.556 li
353.783 147.648 li
354.002 147.669 354.269 147.682 354.82 147.682 cv
355.043 147.682 355.704 147.56 355.879 147.489 cv
355.879 114.556 li
cp
.847059 .854902 .862745 rgb
f
357.167 113.777 mo
351.811 113.777 li
351.811 126.01 li
351.811 126.01 352.584 126.48 354.409 126.584 cv
356.241 126.687 357.167 126.431 357.167 126.431 cv
357.167 113.777 li
cp
.223529 .215686 .227451 rgb
f
461.316 114.556 mo
455.96 114.556 li
455.96 146.429 li
455.96 147.1 456.916 147.682 458.611 147.682 cv
460.306 147.682 461.316 146.972 461.316 146.429 cv
461.316 114.556 li
cp
.407843 .403922 .423529 rgb
f
460.543 114.556 mo
456.733 114.556 li
456.733 147.347 li
457.046 147.519 457.618 147.682 458.619 147.682 cv
459.825 147.682 460.36 147.4 460.543 147.267 cv
460.543 114.556 li
cp
.682353 .686275 .698039 rgb
f
460.028 114.556 mo
457.932 114.556 li
457.932 147.648 li
458.151 147.669 458.419 147.682 458.969 147.682 cv
459.192 147.682 459.853 147.56 460.028 147.489 cv
460.028 114.556 li
cp
.847059 .854902 .862745 rgb
f
455.96 113.777 mo
461.316 113.777 li
461.316 126.01 li
461.316 126.01 460.543 126.48 458.718 126.584 cv
456.885 126.687 455.96 126.431 455.96 126.431 cv
455.96 113.777 li
cp
.223529 .215686 .227451 rgb
f
406.494 92.4355 mo
398.902 92.4355 373.052 93.0964 366.12 93.0964 cv
366.12 88.37 366.12 80.9665 366.12 79.3034 cv
366.12 77.9215 373.098 71.4485 373.098 54.903 cv
373.098 41.34 373.098 32.4266 373.098 30.8063 cv
373.098 27.9306 373.475 25.5996 376.168 25.5996 cv
378.004 25.5996 434.985 25.5996 436.82 25.5996 cv
439.514 25.5996 439.891 27.9306 439.891 30.8063 cv
439.891 32.5265 439.891 41.1974 439.891 54.903 cv
439.891 70.0697 447.133 77.8587 447.133 79.3034 cv
447.133 83.337 447.133 88.7073 447.133 93.0964 cv
438.599 93.0964 414.086 92.4355 406.494 92.4355 cv
cp
.317647 .356863 .27451 rgb
f
374.576 89.7752 mo
373.388 89.7023 372.459 88.7146 372.462 87.5241 cv
372.478 81.8711 372.846 80.0682 372.066 78.7479 cv
370.309 75.7728 374.602 77.6349 374.602 54.903 cv
374.602 41.34 373.599 32.4266 373.599 30.8063 cv
373.599 27.9306 373.475 25.5996 376.168 25.5996 cv
378.004 25.5996 434.985 25.5996 436.82 25.5996 cv
439.514 25.5996 439.389 27.9306 439.389 30.8063 cv
439.389 32.5265 438.386 41.1974 438.386 54.903 cv
438.386 77.6349 443.461 76.036 441.421 78.7479 cv
440.776 79.6055 440.856 81.6493 440.889 87.5175 cv
440.896 88.7119 439.963 89.7007 438.771 89.7719 cv
413.392 91.2877 399.487 91.304 374.576 89.7752 cv
cp
.486275 .568627 .4 rgb
f
376.85 89.7752 mo
375.746 89.7023 374.882 88.7146 374.885 87.5241 cv
374.9 81.8711 386.128 54.7359 406.535 54.7359 cv
426.942 54.7359 438.435 81.6493 438.465 87.5175 cv
438.472 88.7119 437.605 89.7007 436.498 89.7719 cv
412.916 91.2877 399.996 91.304 376.85 89.7752 cv
cp
.580392 .690196 .466667 rgb
f
406.526 2.5901 mo
388.217 2.5901 377.901 5.7987 375.37 7.2193 cv
372.977 8.5624 373.159 11.1815 373.159 11.9117 cv
373.159 13.8485 373.159 20.2799 373.159 23.8613 cv
373.159 25.5651 374.948 25.6388 375.808 25.6388 cv
377.602 25.6388 394.334 25.6388 406.526 25.6388 cv
418.717 25.6388 435.449 25.6388 437.243 25.6388 cv
438.013 25.6388 439.892 25.299 439.892 23.8613 cv
439.892 20.3379 439.892 13.9467 439.892 11.9117 cv
439.892 11.3867 439.865 8.3498 437.3 7.0131 cv
434.851 5.7366 424.835 2.5901 406.526 2.5901 cv
cp
.317647 .356863 .27451 rgb
f
406.526 2.5901 mo
388.217 2.5901 377.901 5.7987 375.37 7.2193 cv
372.977 8.5624 373.661 11.1815 373.661 11.9117 cv
373.661 13.8485 374.001 17.1209 374.162 21.1436 cv
374.23 22.8461 381.107 24.0265 406.526 24.0265 cv
432.373 24.0265 438.779 22.5771 438.889 21.1436 cv
439.171 17.4794 439.391 13.9467 439.391 11.9117 cv
439.391 11.3867 439.865 8.3498 437.3 7.0131 cv
434.851 5.7366 424.835 2.5901 406.526 2.5901 cv
cp
.486275 .568627 .4 rgb
f
406.524 3.3314 mo
389.036 3.3314 379.182 6.4073 376.764 7.7692 cv
374.479 9.0567 375.132 11.5675 375.132 12.2676 cv
375.132 14.1243 382.244 20.5169 406.524 20.5169 cv
431.213 20.5169 437.917 14.2183 437.917 12.2676 cv
437.917 11.7643 438.37 8.8529 435.92 7.5715 cv
433.581 6.3478 424.013 3.3314 406.524 3.3314 cv
cp
.580392 .690196 .466667 rgb
f
445.749 75.9485 mo
448.898 75.9485 li
449.996 75.9485 451.137 76.4703 452.621 77.1359 cv
454.489 77.9741 460.461 80.4926 462.11 81.2411 cv
464.971 82.54 464.781 85.2337 464.781 85.2337 cv
464.781 120.788 li
464.781 122.932 462.967 124.471 459.39 124.832 cv
454.03 125.374 452.336 123.434 452.336 121.289 cv
452.336 101.98 li
450.609 101.31 442.372 93.8667 442.372 93.2129 cv
442.372 79.3252 li
442.372 77.4603 443.884 75.9485 445.749 75.9485 cv
cp
.317647 .356863 .27451 rgb
f
367.612 76.036 mo
364.463 76.036 li
363.364 76.036 362.224 76.5578 360.74 77.2235 cv
358.872 78.0616 352.899 80.5801 351.251 81.3286 cv
348.39 82.6275 348.58 85.3213 348.58 85.3213 cv
348.58 120.875 li
348.58 123.02 350.394 124.559 353.97 124.92 cv
359.331 125.461 361.025 123.521 361.025 121.377 cv
361.025 102.067 li
362.751 101.398 370.989 93.9543 370.989 93.3005 cv
370.989 79.4128 li
370.989 77.5478 369.477 76.036 367.612 76.036 cv
cp
f
453.158 105.255 mo
406.9 106.609 li
360.039 105.255 li
358.258 105.255 360.019 102.243 363.27 99.187 cv
366.522 96.1316 li
368.665 94.1174 370.446 92.7076 372.207 92.7076 cv
440.991 92.7076 li
442.896 92.7076 444.533 94.1174 446.676 96.1316 cv
449.927 99.187 li
453.179 102.243 454.939 105.255 453.158 105.255 cv
cp
f
446.459 101.529 mo
446.459 101.529 438.334 103.087 406.768 103.087 cv
375.202 103.087 366.739 101.529 366.739 101.529 cv
363.504 101.529 365.595 99.6026 367.616 97.5326 cv
369.945 95.3356 li
371.433 93.812 373.277 92.7076 374.935 92.7076 cv
374.935 92.7076 377.917 91.9636 406.768 91.9636 cv
435.619 91.9636 438.764 92.7076 438.764 92.7076 cv
440.558 92.7076 442.266 93.812 443.754 95.3356 cv
446.123 97.5326 li
448.144 99.6026 449.693 101.529 446.459 101.529 cv
cp
.486275 .568627 .4 rgb
f
406.689 95.615 mo
384.945 95.615 367.797 99.3341 367.797 99.3341 cv
368.976 98.152 371.444 93.8846 374.683 93.8846 cv
374.683 93.8846 384.153 92.8761 406.585 92.8761 cv
429.016 92.8761 438.695 93.8846 438.695 93.8846 cv
441.696 93.8846 444.329 97.9765 445.372 99.3341 cv
445.372 99.3341 428.419 95.615 406.689 95.615 cv
cp
.580392 .690196 .466667 rgb
f
451.279 123.41 mo
361.919 123.41 li
360.238 123.41 358.876 122.048 358.876 120.367 cv
358.876 106.526 li
358.876 103.955 360.209 102.543 360.59 102.123 cv
360.162 102.646 360.462 103.484 361.533 103.484 cv
361.533 103.484 368.023 105.39 406.359 105.39 cv
444.695 105.39 451.665 103.484 451.665 103.484 cv
452.735 103.484 453.119 102.943 452.608 102.121 cv
452.917 102.597 454.321 104.148 454.321 106.526 cv
454.321 120.367 li
454.321 122.048 452.959 123.41 451.279 123.41 cv
cp
.486275 .568627 .4 rgb
f
406.746 128.124 mo
366.262 128.124 358.876 125.421 358.876 123.74 cv
358.876 118.091 li
358.876 120.18 366.262 122.644 406.599 122.644 cv
447.675 122.644 454.363 119.633 454.321 118.091 cv
454.321 123.74 li
454.321 125.421 447.23 128.124 406.746 128.124 cv
cp
.317647 .356863 .27451 rgb
f
406.599 107.261 mo
375.518 107.261 360.508 104.713 360.508 104.713 cv
360.508 106.673 360.2 116.56 361.14 116.769 cv
367.074 118.091 369.044 119.478 406.599 119.478 cv
444.153 119.478 446.591 118.091 452.416 116.769 cv
453.415 116.543 452.984 106.526 452.984 104.713 cv
452.984 104.713 437.322 107.261 406.599 107.261 cv
cp
.580392 .690196 .466667 rgb
f
367.612 76.036 mo
364.463 76.036 li
363.364 76.036 362.224 76.5578 360.74 77.2235 cv
358.872 78.0616 352.899 80.5801 351.251 81.3286 cv
348.39 82.6275 348.58 85.3213 348.58 85.3213 cv
348.58 83.1767 350.319 81.4382 352.463 81.4382 cv
357.142 81.4382 li
359.286 81.4382 361.025 83.1767 361.025 85.3213 cv
361.025 102.067 li
362.751 101.398 370.989 93.9543 370.989 93.3005 cv
370.989 79.4128 li
370.989 77.5478 369.477 76.036 367.612 76.036 cv
cp
.486275 .568627 .4 rgb
f
445.749 75.9485 mo
448.898 75.9485 li
449.996 75.9485 451.137 76.4703 452.621 77.1359 cv
454.489 77.9741 460.461 80.4926 462.11 81.2411 cv
464.971 82.54 464.781 85.2337 464.781 85.2337 cv
464.781 83.0892 463.042 81.3507 460.897 81.3507 cv
456.219 81.3507 li
454.074 81.3507 452.336 83.0892 452.336 85.2337 cv
452.336 101.98 li
450.609 101.31 442.372 93.8667 442.372 93.2129 cv
442.372 79.3252 li
442.372 77.4603 443.884 75.9485 445.749 75.9485 cv
cp
f
459.359 82.1637 mo
454.321 82.1637 453.243 83.3764 453.243 85.236 cv
453.243 85.236 453.243 98.6069 453.243 101.312 cv
453.243 101.668 454.1 102.868 455.088 104.713 cv
455.666 105.793 455.75 123.107 454.954 123.607 cv
455.914 124.056 457.335 124.26 459.359 124.055 cv
462.46 123.742 464.033 122.408 464.033 120.548 cv
464.033 85.236 li
464.033 83.3765 463.078 82.1637 459.359 82.1637 cv
cp
f
459.244 83.1369 mo
455.012 83.1369 454.106 84.1556 454.106 85.7177 cv
454.106 97.0187 460.721 105.967 462.337 115.744 cv
462.875 118.999 463.17 121.825 461.316 122.592 cv
462.548 122.07 463.17 121.394 463.17 119.134 cv
463.17 85.7177 li
463.17 84.1556 462.368 83.1369 459.244 83.1369 cv
cp
.580392 .690196 .466667 rgb
f
353.767 82.1637 mo
358.805 82.1637 359.884 83.3764 359.884 85.236 cv
359.884 85.236 359.884 98.6069 359.884 101.312 cv
359.884 101.668 359.027 102.868 358.039 104.713 cv
357.461 105.793 357.377 123.107 358.173 123.607 cv
357.213 124.056 355.792 124.26 353.767 124.055 cv
350.666 123.742 349.093 122.408 349.093 120.548 cv
349.093 85.236 li
349.093 83.3765 350.048 82.1637 353.767 82.1637 cv
cp
.486275 .568627 .4 rgb
f
353.883 83.1369 mo
358.115 83.1369 359.021 84.1556 359.021 85.7177 cv
359.021 97.0187 352.406 105.967 350.79 115.744 cv
350.252 118.999 349.956 121.825 351.81 122.592 cv
350.578 122.07 349.956 121.394 349.956 119.134 cv
349.956 85.7177 li
349.956 84.1556 350.759 83.1369 353.883 83.1369 cv
cp
.580392 .690196 .466667 rgb
f
366.94 76.3192 mo
366.94 76.3192 368.293 76.2035 368.918 76.6561 cv
369.543 77.1087 369.737 77.3673 369.737 77.3673 cv
361.289 83.6173 li
361.289 83.6173 361.181 82.7984 360.018 81.8285 cv
359.104 81.0673 357.528 80.944 357.528 80.944 cv
366.94 76.3192 li
cp
f
446.259 76.3192 mo
446.259 76.3192 444.905 76.2035 444.28 76.6561 cv
443.655 77.1087 443.461 77.3673 443.461 77.3673 cv
451.91 83.6173 li
451.91 83.6173 452.017 82.7984 453.181 81.8285 cv
454.095 81.0673 455.671 80.944 455.671 80.944 cv
446.259 76.3192 li
cp
f
231.064 121.381 mo
236.427 121.381 242.109 121.521 247.363 121.705 cv
215.878 121.705 li
220.499 121.521 225.7 121.381 231.064 121.381 cv
cp
283.921 146.535 mo
288.21 144.962 li
276.058 138.038 li
277.337 138.038 li
279.444 138.038 277.361 134.118 273.514 130.14 cv
271.204 127.751 li
274.858 129.117 li
278.391 127.821 li
265.533 122.512 li
266.557 122.559 267.282 122.587 267.633 122.587 cv
271.035 122.587 269.965 121.686 268.059 120.573 cv
265.82 119.267 263.941 118.457 259.741 117.94 cv
255.731 117.447 251.684 117.22 249.24 117.083 cv
241.626 116.657 232.151 116.422 222.563 116.422 cv
212.974 116.422 204.305 116.657 198.153 117.083 cv
196.075 117.227 192.563 117.471 190.235 118.02 cv
188.034 118.54 189.173 119.332 191.3 120.573 cv
193.207 121.686 195.228 122.587 198.63 122.587 cv
199.486 122.587 201.987 122.423 205.59 122.215 cv
205.12 122.442 204.644 122.725 204.155 123.088 cv
203.108 123.864 194.276 133.625 193.108 135.046 cv
191.819 136.615 193.759 138.038 194.583 138.038 cv
195.43 138.038 li
211.787 146.535 li
216.077 144.962 li
204.823 138.038 li
266.581 138.038 li
283.921 146.535 li
cp
.682353 .686275 .698039 rgb
f
276.188 129.348 mo
276.232 129.349 li
277.445 129.385 278.436 129.126 278.471 127.914 cv
279.97 76.8578 li
275.536 76.7277 li
274.037 127.784 li
274.002 128.996 274.976 129.312 276.188 129.348 cv
cp
.317647 .231373 .160784 rgb
f
276.188 129.348 mo
276.232 129.349 li
277.445 129.385 277.756 129.126 277.791 127.914 cv
279.29 76.8578 li
276.528 76.7277 li
275.029 127.784 li
274.994 128.996 274.976 129.312 276.188 129.348 cv
cp
.376471 .270588 .168627 rgb
f
274.314 118.36 mo
274.314 118.36 275.698 118.296 276.798 117.631 cv
276.955 119.024 276.463 120.604 276.463 120.604 cv
276.463 120.604 275.723 121.207 274.229 121.255 cv
274.234 121.062 274.314 118.36 274.314 118.36 cv
cp
.317647 .231373 .160784 rgb
f
276.188 129.348 mo
276.232 129.349 li
277.445 129.385 277.438 129.126 277.474 127.914 cv
278.972 76.8578 li
277.752 76.7277 li
277.752 76.7277 276.271 126.8 276.188 129.348 cv
cp
.466667 .364706 .278431 rgb
f
285.216 131.97 mo
285.531 131.97 285.849 131.878 286.127 131.684 cv
286.851 131.18 287.029 130.185 286.525 129.461 cv
278.686 118.207 li
278.182 117.484 277.186 117.305 276.463 117.809 cv
275.739 118.314 275.561 119.309 276.065 120.033 cv
283.904 131.286 li
284.215 131.732 284.711 131.97 285.216 131.97 cv
cp
.317647 .231373 .160784 rgb
f
285.216 131.97 mo
285.531 131.97 285.849 131.878 286.127 131.684 cv
286.851 131.18 286.749 130.413 286.245 129.689 cv
278.406 118.435 li
277.902 117.712 277.186 117.305 276.463 117.809 cv
275.739 118.314 276.41 118.852 276.914 119.576 cv
284.753 130.829 li
285.064 131.275 284.711 131.97 285.216 131.97 cv
cp
.376471 .270588 .168627 rgb
f
285.216 131.97 mo
285.531 131.97 285.849 131.878 286.127 131.684 cv
286.851 131.18 286.4 130.413 285.897 129.689 cv
278.057 118.435 li
277.553 117.712 277.186 117.305 276.463 117.809 cv
277.183 118.777 285.662 130.829 285.662 130.829 cv
285.972 131.275 284.711 131.97 285.216 131.97 cv
cp
.466667 .364706 .278431 rgb
f
285.703 146.785 mo
285.652 146.786 li
284.239 146.827 283.083 146.526 283.042 145.113 cv
281.295 85.5985 li
286.464 85.4468 li
288.21 144.962 li
288.252 146.374 287.116 146.743 285.703 146.785 cv
cp
.317647 .231373 .160784 rgb
f
285.703 146.785 mo
285.652 146.786 li
284.239 146.827 284.114 146.526 284.072 145.113 cv
282.325 85.5985 li
285.63 85.4468 li
287.376 144.962 li
287.418 146.374 287.116 146.743 285.703 146.785 cv
cp
.376471 .270588 .168627 rgb
f
285.703 146.785 mo
285.652 146.786 li
285.532 143.828 283.948 85.5985 283.948 85.5985 cv
285.065 85.4468 li
286.812 144.962 li
286.853 146.374 287.116 146.743 285.703 146.785 cv
cp
.466667 .364706 .278431 rgb
f
222.886 129.348 mo
222.841 129.349 li
221.629 129.385 220.638 129.126 220.602 127.914 cv
219.104 76.8578 li
223.538 76.7277 li
225.036 127.784 li
225.072 128.996 224.098 129.312 222.886 129.348 cv
cp
.317647 .231373 .160784 rgb
f
222.886 129.348 mo
222.841 129.349 li
221.629 129.385 221.318 129.126 221.282 127.914 cv
219.784 76.8578 li
222.546 76.7277 li
224.044 127.784 li
224.08 128.996 224.098 129.312 222.886 129.348 cv
cp
.376471 .270588 .168627 rgb
f
222.886 129.348 mo
222.841 129.349 li
221.629 129.385 221.635 129.126 221.6 127.914 cv
220.101 76.8578 li
221.321 76.7277 li
221.321 76.7277 222.803 126.8 222.886 129.348 cv
cp
.466667 .364706 .278431 rgb
f
213.858 131.97 mo
213.542 131.97 213.224 131.878 212.946 131.684 cv
212.223 131.18 212.045 130.185 212.549 129.461 cv
220.388 118.207 li
220.892 117.484 221.888 117.305 222.611 117.809 cv
223.334 118.314 223.512 119.309 223.008 120.033 cv
215.169 131.286 li
214.859 131.732 214.362 131.97 213.858 131.97 cv
cp
.317647 .231373 .160784 rgb
f
213.858 131.97 mo
213.542 131.97 213.224 131.878 212.946 131.684 cv
212.223 131.18 212.325 130.413 212.829 129.689 cv
220.668 118.435 li
221.172 117.712 221.888 117.305 222.611 117.809 cv
223.334 118.314 222.663 118.852 222.159 119.576 cv
214.32 130.829 li
214.01 131.275 214.362 131.97 213.858 131.97 cv
cp
.376471 .270588 .168627 rgb
f
213.858 131.97 mo
213.542 131.97 213.224 131.878 212.946 131.684 cv
212.223 131.18 212.673 130.413 213.177 129.689 cv
221.016 118.435 li
221.52 117.712 221.888 117.305 222.611 117.809 cv
221.891 118.777 213.412 130.829 213.412 130.829 cv
213.102 131.275 214.362 131.97 213.858 131.97 cv
cp
.466667 .364706 .278431 rgb
f
213.37 146.785 mo
213.422 146.786 li
214.835 146.827 215.99 146.526 216.032 145.113 cv
217.778 85.5985 li
212.61 85.4468 li
210.863 144.962 li
210.822 146.374 211.957 146.743 213.37 146.785 cv
cp
.317647 .231373 .160784 rgb
f
213.37 146.785 mo
213.422 146.786 li
214.835 146.827 214.96 146.526 215.001 145.113 cv
216.748 85.5985 li
213.444 85.4468 li
211.697 144.962 li
211.656 146.374 211.957 146.743 213.37 146.785 cv
cp
.376471 .270588 .168627 rgb
f
213.37 146.785 mo
213.422 146.786 li
213.541 143.828 215.125 85.5985 215.125 85.5985 cv
214.009 85.4468 li
212.262 144.962 li
212.221 146.374 211.957 146.743 213.37 146.785 cv
cp
.466667 .364706 .278431 rgb
f
284.011 87.744 mo
282.007 87.744 281.37 88.1338 281.37 88.1338 cv
281.295 85.5985 li
286.464 85.4468 li
286.546 88.2465 li
286.546 88.2465 286.148 87.744 284.011 87.744 cv
cp
.266667 .196078 .141176 rgb
f
215.035 87.744 mo
217.039 87.744 217.676 88.1338 217.676 88.1338 cv
217.751 85.5985 li
212.582 85.4468 li
212.5 88.2465 li
212.5 88.2465 212.898 87.744 215.035 87.744 cv
cp
f
229.657 8.0741 mo
225.297 8.0741 li
225.297 65.6121 li
229.657 65.6121 li
229.657 8.0741 li
cp
.317647 .231373 .160784 rgb
f
228.906 8.0741 mo
226.048 8.0741 li
226.048 65.6121 li
228.906 65.6121 li
228.906 8.0741 li
cp
.376471 .270588 .168627 rgb
f
274.036 8.0741 mo
269.676 8.0741 li
269.676 65.6121 li
274.036 65.6121 li
274.036 8.0741 li
cp
.317647 .231373 .160784 rgb
f
273.215 8.0741 mo
270.498 8.0741 li
270.498 65.6121 li
273.215 65.6121 li
273.215 8.0741 li
cp
.376471 .270588 .168627 rgb
f
272.719 8.0741 mo
271.387 8.0741 li
271.387 65.6121 li
272.719 65.6121 li
272.719 8.0741 li
cp
.466667 .364706 .278431 rgb
f
227.937 8.0741 mo
226.605 8.0741 li
226.605 65.6121 li
227.937 65.6121 li
227.937 8.0741 li
cp
f
229.657 7.44 mo
225.297 7.44 li
225.297 18.7665 li
225.297 18.7665 226.145 18.3289 227.726 18.5476 cv
229.051 18.7308 229.657 19.2228 229.657 19.2228 cv
229.657 7.44 li
cp
.266667 .196078 .141176 rgb
f
274.036 7.44 mo
269.676 7.44 li
269.676 19.2228 li
269.676 19.2228 270.377 18.7584 271.913 18.5573 cv
273.513 18.3476 274.036 18.7665 274.036 18.7665 cv
274.036 7.44 li
cp
f
255.351 8.0741 mo
255.351 35.3907 li
255.351 36.7423 254.255 37.8381 252.903 37.8381 cv
246.342 37.8381 li
244.99 37.8381 243.894 36.7423 243.894 35.3907 cv
243.894 8.0741 li
239.534 8.0741 li
239.534 65.6121 li
243.894 65.6121 li
243.894 45.4179 li
243.894 44.0662 244.99 42.9705 246.342 42.9705 cv
252.903 42.9705 li
254.255 42.9705 255.351 44.0662 255.351 45.4179 cv
255.351 65.6121 li
259.711 65.6121 li
259.711 8.0741 li
255.351 8.0741 li
cp
.317647 .231373 .160784 rgb
f
255.977 9.5125 mo
255.977 36.3758 li
255.977 37.6599 254.48 38.7009 253.196 38.7009 cv
246.049 38.7009 li
244.765 38.7009 243.268 37.6599 243.268 36.3758 cv
243.268 9.5125 li
240.039 9.5125 li
240.039 64.1737 li
243.268 64.1737 li
243.268 44.5328 li
243.268 43.2488 244.765 42.2078 246.049 42.2078 cv
253.196 42.2078 li
254.48 42.2078 255.977 43.2488 255.977 44.5328 cv
255.977 64.1737 li
259.206 64.1737 li
259.206 9.5125 li
255.977 9.5125 li
cp
.376471 .270588 .168627 rgb
f
257.244 8.0741 mo
257.244 36.3161 li
257.244 38.0032 255.876 39.3708 254.189 39.3708 cv
245.205 39.3708 li
243.518 39.3708 242.151 38.0032 242.151 36.3161 cv
242.151 8.0741 li
240.819 8.0741 li
240.819 65.6121 li
242.151 65.6121 li
242.151 44.6123 li
242.151 42.9252 243.518 41.5576 245.205 41.5576 cv
254.189 41.5576 li
255.876 41.5576 257.244 42.9252 257.244 44.6123 cv
257.244 65.6121 li
258.576 65.6121 li
258.576 8.0741 li
257.244 8.0741 li
cp
.466667 .364706 .278431 rgb
f
259.711 8.3526 mo
255.351 8.3526 li
255.351 20.1353 li
255.351 20.1353 256.287 19.695 257.617 19.695 cv
258.946 19.695 259.711 19.923 259.711 19.923 cv
259.711 8.3526 li
cp
.266667 .196078 .141176 rgb
f
239.534 8.3526 mo
243.894 8.3526 li
243.894 20.1353 li
243.894 20.1353 243.064 19.6972 241.673 19.6972 cv
240.283 19.6972 239.534 19.923 239.534 19.923 cv
239.534 8.3526 li
cp
f
249.622 18.858 mo
240.034 18.858 230.962 18.1396 224.079 16.835 cv
221.754 16.3942 217.825 15.6495 214.555 13.9689 cv
211.464 12.3801 211.243 9.9548 211.243 6.1593 cv
211.243 2.7575 211.719 0 215.121 0 cv
217.439 0 233.872 3.6893 249.622 3.6893 cv
265.373 3.6893 281.806 0 284.124 0 cv
287.526 0 288.002 2.7575 288.002 6.1593 cv
288.002 10.1546 287.511 12.6315 284.197 14.2128 cv
281.033 15.7228 277.375 16.4161 275.166 16.835 cv
268.283 18.1396 259.211 18.858 249.622 18.858 cv
cp
.317647 .231373 .160784 rgb
f
249.622 17.1867 mo
225.969 17.1867 217.825 13.391 214.555 11.7104 cv
211.464 10.1216 211.699 7.0232 211.699 6.1593 cv
211.699 2.7575 211.719 0 215.121 0 cv
217.439 0 233.872 3.6893 249.622 3.6893 cv
265.373 3.6893 281.806 0 284.124 0 cv
287.526 0 287.545 2.7575 287.545 6.1593 cv
287.545 6.7804 287.511 10.373 284.197 11.9544 cv
281.033 13.4643 273.275 17.1867 249.622 17.1867 cv
cp
.376471 .270588 .168627 rgb
f
249.622 9.429 mo
219.316 9.429 211.719 1.2672 215.121 1.2672 cv
217.439 1.2672 233.872 4.9564 249.622 4.9564 cv
265.373 4.9564 281.806 1.2672 284.124 1.2672 cv
287.526 1.2672 279.929 9.429 249.622 9.429 cv
cp
.466667 .364706 .278431 rgb
f
288.852 79.1191 mo
210.393 79.1191 li
208.286 79.1191 210.368 75.5564 214.215 71.9414 cv
218.061 68.3269 li
220.597 65.9442 222.704 64.2764 224.787 64.2764 cv
274.458 64.2764 li
276.712 64.2764 278.648 65.9442 281.184 68.3269 cv
285.03 71.9414 li
288.877 75.5564 290.959 79.1191 288.852 79.1191 cv
cp
.317647 .231373 .160784 rgb
f
280.927 74.7115 mo
218.318 74.7115 li
214.492 74.7115 215.996 72.433 218.387 69.9842 cv
220.925 67.3853 li
222.685 65.5829 224.274 64.2764 226.235 64.2764 cv
273.01 64.2764 li
275.132 64.2764 276.56 65.5829 278.32 67.3853 cv
280.858 69.9842 li
283.249 72.433 284.753 74.7115 280.927 74.7115 cv
cp
.376471 .270588 .168627 rgb
f
249.62 67.7158 mo
223.838 67.7158 221.005 70.045 221.005 70.045 cv
222.403 68.6465 223.681 65.6688 227.521 65.6688 cv
271.724 65.6688 li
275.282 65.6688 277.003 68.4389 278.24 70.045 cv
278.24 70.045 275.387 67.7158 249.62 67.7158 cv
cp
.466667 .364706 .278431 rgb
f
286.629 86.6945 mo
212.616 86.6945 li
210.628 86.6945 209.017 85.0831 209.017 83.0953 cv
209.017 80.6234 li
209.017 77.5821 210.593 75.9113 211.044 75.4149 cv
210.538 76.0336 210.893 77.0242 212.159 77.0242 cv
287.085 77.0242 li
288.351 77.0242 288.806 76.3844 288.201 75.412 cv
288.567 75.9756 290.228 77.8102 290.228 80.6234 cv
290.228 83.0953 li
290.228 85.0831 288.617 86.6945 286.629 86.6945 cv
cp
.376471 .270588 .168627 rgb
f
286.629 86.6945 mo
212.616 86.6945 li
210.628 86.6945 209.017 85.0831 209.017 83.0953 cv
209.017 80.6234 li
209.017 83.0953 210.893 84.0265 212.159 84.0265 cv
287.085 84.0265 li
288.351 84.0265 290.228 82.4297 290.228 80.6234 cv
290.228 83.0953 li
290.228 85.0831 288.617 86.6945 286.629 86.6945 cv
cp
.317647 .231373 .160784 rgb
f
249.795 77.8071 mo
213.027 77.8071 210.948 77.8071 210.948 77.8071 cv
210.948 80.126 212.815 80.5513 213.955 80.5513 cv
220.636 80.5513 228.385 79.1792 249.77 79.1792 cv
271.154 79.1792 275.118 80.5513 285.639 80.5513 cv
286.85 80.5513 288.646 79.9521 288.646 77.8071 cv
288.646 77.8071 286.14 77.8071 249.795 77.8071 cv
cp
.466667 .364706 .278431 rgb
f
83.6432 137.915 mo
83.6432 137.915 73.6114 135.68 69.5398 134.73 cv
68.9631 134.596 68.4851 134.475 68.0802 134.363 cv
69.0452 134.291 70.0131 134.221 70.9516 134.143 cv
70.8945 134.384 70.8805 134.547 70.8805 134.547 cv
85.076 137.635 li
83.6432 137.915 li
cp
114.404 146.356 mo
88.6762 138.123 li
88.6762 138.123 106.59 134.896 107.556 134.606 cv
108.522 134.316 110.261 134.993 111.033 134.123 cv
112.138 132.881 106.494 133.447 106.494 133.447 cv
90.4959 136.575 li
92.612 135.544 li
82.9429 133.018 li
84.0886 132.908 85.2153 132.802 86.3111 132.706 cv
92.0667 132.204 96.976 131.518 99.6733 130.636 cv
102.206 129.807 102.61 128.861 101.036 127.912 cv
100.738 127.732 99.8698 127.631 98.9486 127.606 cv
98.9425 127.605 98.9377 127.605 98.9315 127.605 cv
97.4853 127.549 92.0088 127.348 91.2914 127.318 cv
90.6741 127.293 90.0128 127.308 89.5311 127.362 cv
89.1085 127.41 88.826 127.487 88.8345 127.593 cv
88.8473 127.753 89.0788 127.916 89.1062 128.075 cv
89.1372 128.256 89.0463 128.435 88.8559 128.608 cv
88.712 128.739 88.4046 128.872 87.9402 129.003 cv
87.1655 129.18 85.4721 129.071 85.7726 128.904 cv
86.4352 128.535 88.3679 127.425 85.499 125.563 cv
84.3892 124.842 76.4515 122.762 74.2649 121.343 cv
73.633 120.933 70.916 120.449 67.695 120.537 cv
59.7019 120.755 53.1751 120.845 43.8412 120.797 cv
33.9028 120.746 19.2695 120.501 6.31566 120.102 cv
.576564 119.926 -.968636 120.514 .546464 121.047 cv
5.74346 122.872 13.2292 125.503 15.7883 126.402 cv
22.3228 128.698 31.1741 129.824 34.0109 130.18 cv
35.3587 130.35 33.368 130.614 31.3463 130.389 cv
31.032 130.355 30.7313 130.32 30.4562 130.286 cv
27.4538 129.909 25.1609 129.473 23.3178 128.99 cv
22.7126 128.831 21.5158 128.715 20.2863 128.668 cv
19.4043 128.635 18.5067 128.637 17.8044 128.684 cv
17.6526 128.694 7.77296 129.397 6.83296 129.49 cv
6.83076 129.49 6.83006 129.49 6.82796 129.49 cv
6.05966 129.542 5.47546 129.633 5.23856 129.77 cv
4.86196 129.986 6.06026 130.269 6.76816 130.481 cv
7.76576 130.779 8.99956 131.067 10.4031 131.341 cv
13.4551 131.937 17.4452 132.465 21.9361 132.874 cv
30.598 133.662 42.8327 134.951 52.1463 134.978 cv
55.9179 134.989 59.5114 134.87 62.9657 134.688 cv
63.4841 135.346 64.7897 135.68 64.7897 135.68 cv
75.24 137.852 li
75.24 137.852 59.8405 141.851 59.1643 142.14 cv
58.4882 142.43 57.8121 143.106 58.1018 144.748 cv
58.3916 146.39 60.8064 146.97 62.0621 147.356 cv
63.3177 147.743 65.6359 144.748 65.6359 144.748 cv
65.6359 144.748 81.2557 139.788 82.7045 139.209 cv
84.3466 139.885 85.4583 139.716 85.4583 139.716 cv
85.4583 139.716 106.88 145.714 110.068 146.873 cv
113.255 148.032 114.704 147.356 114.704 147.356 cv
114.404 146.356 li
cp
.682353 .686275 .698039 rgb
f
65.2358 132.211 mo
65.2358 133.51 64.5163 134.926 65.3817 135.035 cv
65.5659 135.059 67.1637 134.76 67.3279 134.693 cv
67.9349 134.445 68.3696 133.63 68.3696 132.608 cv
68.3696 131.309 67.668 130.167 66.8027 130.058 cv
65.9373 129.948 65.2358 130.912 65.2358 132.211 cv
cp
.223529 .215686 .227451 rgb
f
63.6689 132.477 mo
63.6689 133.776 64.3705 134.918 65.2358 135.027 cv
66.1012 135.137 66.8027 134.173 66.8027 132.874 cv
66.8027 131.575 66.1012 130.433 65.2358 130.324 cv
64.3705 130.214 63.6689 131.178 63.6689 132.477 cv
cp
.313726 .309804 .32549 rgb
f
110.65 131.99 mo
110.65 133.188 111.313 134.492 110.516 134.593 cv
110.346 134.614 108.874 134.339 108.722 134.277 cv
108.163 134.049 107.762 133.298 107.762 132.356 cv
107.762 131.159 108.409 130.107 109.206 130.006 cv
110.004 129.905 110.65 130.794 110.65 131.99 cv
cp
.223529 .215686 .227451 rgb
f
112.094 132.236 mo
112.094 133.432 111.448 134.485 110.65 134.585 cv
109.853 134.686 109.206 133.798 109.206 132.601 cv
109.206 131.404 109.853 130.352 110.65 130.251 cv
111.448 130.15 112.094 131.038 112.094 132.236 cv
cp
.505882 .501961 .517647 rgb
f
111.658 132.091 mo
89.4489 136.071 li
88.4821 136.244 87.5581 135.601 87.3852 134.634 cv
87.2122 133.667 87.8557 132.743 88.8225 132.57 cv
88.8422 132.567 88.8692 132.563 88.889 132.56 cv
110.668 129.509 li
111.413 129.404 112.101 129.923 112.205 130.668 cv
112.307 131.395 112.374 131.962 111.658 132.091 cv
cp
.223529 .215686 .227451 rgb
f
111.128 131.04 mo
88.5508 134.851 li
88.0666 134.932 87.6079 134.606 87.5262 134.122 cv
87.4445 133.638 87.7707 133.179 88.2549 133.098 cv
88.2587 133.097 88.267 133.096 88.2708 133.095 cv
110.914 129.695 li
111.285 129.639 111.632 129.896 111.688 130.267 cv
111.743 130.635 111.493 130.978 111.128 131.04 cv
cp
.313726 .309804 .32549 rgb
f
111.09 130.368 mo
87.8378 134.033 li
87.6762 134.058 87.5245 133.948 87.499 133.786 cv
87.4735 133.624 87.5839 133.473 87.7456 133.447 cv
87.7473 133.447 li
111.021 129.92 li
111.144 129.901 111.26 129.986 111.279 130.11 cv
111.298 130.234 111.213 130.349 111.09 130.368 cv
cp
.407843 .403922 .423529 rgb
f
65.0658 129.509 mo
86.8447 132.56 li
87.8174 132.696 88.4954 133.595 88.3591 134.568 cv
88.2229 135.54 87.324 136.218 86.3513 136.082 cv
86.3314 136.079 86.3044 136.075 86.2848 136.071 cv
64.1932 132.104 li
63.4529 131.971 63.4039 131.358 63.5364 130.617 cv
63.6656 129.895 64.3452 129.409 65.0658 129.509 cv
cp
.223529 .215686 .227451 rgb
f
65.1305 129.649 mo
78.6106 131.587 li
79.0967 131.657 79.434 132.108 79.3641 132.594 cv
79.2942 133.08 78.8435 133.417 78.3575 133.348 cv
78.3498 133.346 78.3382 133.344 78.3307 133.343 cv
64.9161 130.993 li
64.5457 130.928 64.2981 130.576 64.363 130.205 cv
64.4266 129.842 64.7681 129.597 65.1305 129.649 cv
cp
.313726 .309804 .32549 rgb
f
64.977 129.796 mo
76.1154 131.447 li
76.2773 131.471 76.3891 131.622 76.3651 131.784 cv
76.3411 131.945 76.1904 132.057 76.0285 132.033 cv
76.0278 132.033 76.0256 132.033 76.0249 132.033 cv
64.9077 130.244 li
64.784 130.224 64.6998 130.108 64.7197 129.984 cv
64.7394 129.861 64.8544 129.777 64.977 129.796 cv
cp
.407843 .403922 .423529 rgb
f
64.3813 143.848 mo
64.3813 145.611 65.3579 147.532 64.1834 147.68 cv
63.9333 147.712 61.7647 147.306 61.5419 147.215 cv
60.718 146.88 60.1281 145.773 60.1281 144.386 cv
60.1281 142.622 61.0802 141.073 62.2547 140.924 cv
63.4292 140.776 64.3813 142.085 64.3813 143.848 cv
cp
.313726 .309804 .32549 rgb
f
66.5079 144.208 mo
66.5079 145.971 65.5558 147.521 64.3813 147.67 cv
63.2068 147.818 62.2547 146.509 62.2547 144.746 cv
62.2547 142.983 63.2068 141.434 64.3813 141.285 cv
65.5558 141.137 66.5079 142.445 66.5079 144.208 cv
cp
.682353 .686275 .698039 rgb
f
92.8849 112.77 mo
92.8849 112.983 91.01 113.155 88.6971 113.155 cv
86.3843 113.155 84.5094 112.983 84.5094 112.77 cv
84.5094 112.558 86.3843 112.385 88.6971 112.385 cv
91.01 112.385 92.8849 112.558 92.8849 112.77 cv
cp
.105882 .109804 .12549 rgb
f
91.8628 91.3077 mo
85.5315 91.3077 li
85.5315 128.984 li
85.5315 129.778 86.6614 130.465 88.6655 130.465 cv
90.6695 130.465 91.8628 129.626 91.8628 128.984 cv
91.8628 91.3077 li
cp
.407843 .403922 .423529 rgb
f
90.9486 91.3077 mo
86.4457 91.3077 li
86.4457 130.07 li
86.8148 130.272 87.4913 130.465 88.6746 130.465 cv
90.0999 130.465 90.7325 130.132 90.9486 129.975 cv
90.9486 91.3077 li
cp
.682353 .686275 .698039 rgb
f
90.3402 91.3077 mo
87.8625 91.3077 li
87.8625 130.425 li
88.1213 130.45 88.4378 130.465 89.089 130.465 cv
89.3527 130.465 90.1339 130.321 90.3402 130.238 cv
90.3402 91.3077 li
cp
.847059 .854902 .862745 rgb
f
85.5315 90.387 mo
91.8628 90.387 li
91.8628 104.848 li
91.8628 104.848 90.952 105.512 88.7914 105.525 cv
86.6029 105.538 85.5315 104.874 85.5315 104.874 cv
85.5315 90.387 li
cp
.223529 .215686 .227451 rgb
f
92.8849 112.77 mo
92.8849 112.77 92.6026 113.148 88.4481 113.148 cv
85.0104 113.148 84.5094 112.77 84.5094 112.77 cv
84.5094 135.637 li
84.5094 136.688 86.0041 137.597 88.6553 137.597 cv
91.3064 137.597 92.8849 136.487 92.8849 135.637 cv
92.8849 112.77 li
cp
f
88.4481 113.148 mo
87.1775 113.148 86.31 113.096 85.7187 113.031 cv
85.7187 137.071 li
86.3715 137.372 87.2774 137.567 88.4085 137.592 cv
88.4929 137.594 88.572 137.597 88.6606 137.597 cv
88.6971 137.597 88.7314 137.595 88.7675 137.594 cv
88.9059 137.593 89.0359 137.589 89.1629 137.583 cv
90.0797 137.532 90.848 137.344 91.4445 137.087 cv
91.5408 137.036 91.6217 136.987 91.6755 136.948 cv
91.6755 113.029 li
91.0173 113.095 90.0045 113.148 88.4481 113.148 cv
cp
.313726 .309804 .32549 rgb
f
87.5929 137.542 mo
87.6186 137.545 87.6429 137.548 87.6689 137.551 cv
87.9279 137.573 88.2445 137.589 88.7544 137.595 cv
89.5689 137.586 90.2794 137.473 90.8708 137.294 cv
90.8708 113.09 li
90.263 113.125 89.4745 113.148 88.4481 113.148 cv
88.137 113.148 87.8578 113.144 87.5929 113.138 cv
87.5929 137.542 li
cp
.407843 .403922 .423529 rgb
f
86.1825 137.273 mo
63.1926 144.939 li
61.9758 145.345 59.8941 144.795 59.8941 144.443 cv
59.8941 144.192 59.8959 142.991 59.8941 142.753 cv
59.8868 141.774 60.7444 140.859 61.7233 140.533 cv
61.7536 140.523 61.7924 140.511 61.8228 140.502 cv
85.1335 133.875 li
86.0783 133.607 87.0619 134.155 87.3305 135.1 cv
87.5914 136.017 87.0777 136.973 86.1825 137.273 cv
cp
.223529 .215686 .227451 rgb
f
87.3305 135.1 mo
87.1939 134.619 86.8715 134.243 86.4642 134.023 cv
86.4642 134.023 62.2915 141.195 62.285 141.197 cv
61.8194 141.336 61.4348 141.575 61.2676 141.828 cv
61.0786 142.114 61.3775 142.041 62.0417 142.281 cv
62.7084 142.522 62.3576 143.577 62.9492 143.411 cv
87.0337 135.748 li
87.1739 135.702 87.293 135.624 87.3915 135.526 cv
87.3868 135.384 87.371 135.242 87.3305 135.1 cv
cp
.313726 .309804 .32549 rgb
f
86.767 134.227 mo
62.4955 141.577 li
61.9954 141.734 62.5047 141.781 62.6806 141.975 cv
63.1008 142.44 62.8751 142.8 63.3015 142.62 cv
87.2981 135.018 li
87.1908 134.701 87.0075 134.429 86.767 134.227 cv
cp
.407843 .403922 .423529 rgb
f
113.357 143.848 mo
113.357 145.611 112.381 147.532 113.555 147.68 cv
113.805 147.712 115.974 147.306 116.197 147.215 cv
117.021 146.88 117.611 145.773 117.611 144.386 cv
117.611 142.622 116.658 141.073 115.484 140.924 cv
114.309 140.776 113.357 142.085 113.357 143.848 cv
cp
f
111.231 144.208 mo
111.231 145.971 112.183 147.521 113.357 147.67 cv
114.532 147.818 115.484 146.509 115.484 144.746 cv
115.484 142.983 114.532 141.434 113.357 141.285 cv
112.183 141.137 111.231 142.445 111.231 144.208 cv
cp
.313726 .309804 .32549 rgb
f
91.5562 137.273 mo
114.546 144.939 li
115.763 145.345 117.845 144.795 117.845 144.443 cv
117.845 144.192 117.843 142.991 117.845 142.753 cv
117.852 141.774 116.994 140.859 116.015 140.533 cv
115.985 140.523 115.946 140.511 115.916 140.502 cv
92.6052 133.875 li
91.6604 133.607 90.6767 134.155 90.4082 135.1 cv
90.1473 136.017 90.661 136.973 91.5562 137.273 cv
cp
.223529 .215686 .227451 rgb
f
115.921 141.653 mo
116.308 141.446 116.978 141.524 116.823 141.318 cv
116.641 141.075 116.1 140.795 115.634 140.656 cv
115.628 140.654 95.7353 134.933 91.8817 133.825 cv
91.3712 133.894 90.9151 134.187 90.6322 134.625 cv
115.047 142.38 li
115.639 142.547 115.296 141.986 115.921 141.653 cv
cp
.313726 .309804 .32549 rgb
f
90.8004 134.402 mo
93.2425 135.102 114.346 141.16 115.122 141.524 cv
115.298 141.329 116.169 141.033 115.669 140.876 cv
91.5491 133.903 li
91.2614 134 91.0053 134.174 90.8004 134.402 cv
cp
.407843 .403922 .423529 rgb
f
85.9702 104.484 mo
85.9377 103.299 li
73.0723 103.656 li
72.5934 103.346 71.7688 103.143 70.8371 103.154 cv
69.4027 103.171 68.2718 103.684 68.3117 104.299 cv
68.3515 104.914 69.547 105.399 70.9814 105.382 cv
71.9011 105.371 72.6913 105.155 73.1329 104.84 cv
85.9702 104.484 li
cp
.223529 .215686 .227451 rgb
f
124.37 38.4758 mo
124.37 32.7767 124.37 17.1225 124.37 7.0654 cv
124.37 4.2481 122.073 1.0729 118.229 1.8085 cv
109.027 3.5696 97.2449 4.5313 88.3503 4.5313 cv
79.4556 4.5313 67.6733 3.5696 58.4714 1.8085 cv
54.6278 1.0729 52.3305 4.2481 52.3305 7.0654 cv
52.3305 17.1225 52.3305 32.7767 52.3305 38.4758 cv
52.3305 53.9205 57.1888 62.9129 58.8435 65.9227 cv
59.6515 67.3922 57.1799 68.9472 55.9478 66.8968 cv
54.9887 65.3008 53.5229 71.1908 55.1933 72.5556 cv
60.6782 77.0365 84.7198 78.1583 88.3503 78.1583 cv
91.9808 78.1583 116.022 77.0365 121.507 72.5556 cv
123.178 71.1908 121.916 65.3968 120.813 66.8968 cv
119.411 68.8025 117.049 67.3922 117.857 65.9227 cv
119.512 62.9129 124.37 53.9205 124.37 38.4758 cv
cp
.768627 0 .113725 rgb
f
124.37 38.4758 mo
124.37 32.7767 124.37 17.1225 124.37 7.0654 cv
124.37 5.4806 123.643 3.7827 122.323 2.7312 cv
121.883 2.3807 117.274 1.8095 118.205 9.8025 cv
119.135 17.7907 121.685 46.8933 115.595 61.2077 cv
114.205 64.4751 113.658 66.9387 110.627 66.8913 cv
101.733 66.7524 116.022 77.0365 121.507 72.5556 cv
123.178 71.1908 121.916 65.3968 120.813 66.8968 cv
119.411 68.8025 117.049 67.3922 117.857 65.9227 cv
119.512 62.9129 124.37 53.9205 124.37 38.4758 cv
cp
.556863 .0117647 .117647 rgb
f
54.1983 39.3766 mo
53.7721 33.6935 53.5682 16.6899 54.6485 5.3466 cv
54.7987 3.769 56.0833 2.9875 56.8991 3.186 cv
57.8217 3.4104 57.9959 5.0301 57.3493 11.1083 cv
56.8991 15.3395 55.2806 26.1144 55.8239 40.0915 cv
56.1409 48.2476 59.1061 59.1557 62.267 64.4898 cv
59.4199 61.163 55.0086 50.1797 54.1983 39.3766 cv
cp
.905882 .2 .141176 rgb
f
123.707 35.6716 mo
123.707 29.9725 123.707 17.973 123.707 7.9159 cv
123.707 5.1542 122.373 3.3888 121.793 3.3888 cv
120.977 3.3888 120.474 4.4155 120.722 5.99 cv
121.088 8.3175 122.078 13.1789 122.528 22.6317 cv
122.704 26.3275 123.068 32.1745 122.888 39.0165 cv
122.654 47.9332 122.305 49.7718 121.333 54.9504 cv
122.974 49.6928 123.707 42.8751 123.707 35.6716 cv
cp
f
49.3764 77.5285 mo
49.7158 77.2203 53.1993 74.0376 53.5745 73.7256 cv
57.3775 70.5828 li
57.7442 70.2778 57.9807 70.0997 58.4146 69.8238 cv
57.2632 68.7639 56.1492 67.3635 55.4469 66.0508 cv
53.7624 62.9019 52.8623 59.5391 52.4674 56.0037 cv
52.3396 54.8594 51.6248 53.9325 50.7287 53.4656 cv
50.0907 53.1332 49.3608 53.034 48.6853 53.2554 cv
48.5396 53.3032 39.1945 56.5999 38.2668 57.0715 cv
37.1631 57.6325 41.9075 59.9032 41.9186 61.0819 cv
41.9345 62.7604 42.7935 64.3219 43.104 65.9715 cv
43.7948 69.6416 45.6292 73.0092 47.6972 76.1193 cv
47.9032 76.4291 49.1597 77.2284 49.3764 77.5285 cv
cp
.768627 0 .113725 rgb
f
119.912 70.5828 mo
123.801 73.7289 li
124.173 74.0385 127.558 77.3741 127.895 77.68 cv
131.783 72.2221 144.935 59.6306 138.654 57.2654 cv
136.679 56.522 129.426 53.8589 128.508 53.4973 cv
127.723 53.1882 126.802 53.208 126.047 53.5834 cv
125.386 53.9119 124.852 54.5129 124.646 55.4041 cv
124.336 56.7471 124.31 58.1621 124.017 59.5188 cv
123.685 61.0625 123.189 62.5768 122.571 64.0286 cv
121.771 65.9037 120.341 67.7275 118.303 69.3334 cv
118.912 69.6955 119.408 70.1641 119.912 70.5828 cv
cp
.556863 .0117647 .117647 rgb
f
138.654 57.2654 mo
136.679 56.522 129.426 53.8589 128.508 53.4973 cv
127.723 53.1882 126.802 53.208 126.047 53.5834 cv
125.74 53.7362 125.46 53.9478 125.228 54.2201 cv
126.399 54.8038 133.042 57.4765 136.499 58.9088 cv
137.772 59.4363 138.376 58.1186 138.654 57.2654 cv
cp
.768627 0 .113725 rgb
f
138.654 57.2654 mo
136.679 56.522 129.426 53.8589 128.508 53.4973 cv
127.889 53.2539 127.187 53.2144 126.548 53.3921 cv
127.165 53.5917 135.415 57.0477 136.123 57.3661 cv
136.755 57.0845 137.954 57.0039 138.654 57.2654 cv
cp
.905882 .2 .141176 rgb
f
127.708 80.0147 mo
49.3386 80.0147 li
47.2338 80.0147 49.3142 76.866 53.1564 73.6711 cv
56.9981 70.4766 li
59.5306 68.3708 63.9174 66.8968 66.6794 66.8968 cv
110.367 66.8968 li
113.376 66.8968 117.516 68.3708 120.048 70.4766 cv
123.89 73.6711 li
127.732 76.866 129.812 80.0147 127.708 80.0147 cv
cp
.556863 .0117647 .117647 rgb
f
120.424 76.1193 mo
56.9785 76.1193 li
53.1008 76.1193 54.6256 74.1056 57.0485 71.9414 cv
59.62 69.6444 li
61.4033 68.0515 65.1281 66.8968 67.9646 66.8968 cv
109.438 66.8968 li
112.286 66.8968 115.999 68.0515 117.783 69.6444 cv
120.354 71.9414 li
122.777 74.1056 124.302 76.1193 120.424 76.1193 cv
cp
.768627 0 .113725 rgb
f
88.6993 69.4816 mo
64.1489 69.4816 57.8949 74.2688 57.8949 74.2688 cv
59.2265 72.503 63.9996 66.8968 67.6563 66.8968 cv
109.746 66.8968 li
113.135 66.8968 118.33 72.2408 119.508 74.2688 cv
119.508 74.2688 113.234 69.4816 88.6993 69.4816 cv
cp
.905882 .2 .141176 rgb
f
125.487 86.7098 mo
51.559 86.7098 li
49.5735 86.7098 47.9639 85.2856 47.9639 83.5289 cv
47.9639 81.3442 li
47.9639 78.6563 49.5385 77.1797 49.9893 76.7409 cv
49.4832 77.2877 49.8378 78.1632 51.1032 78.1632 cv
125.943 78.1632 li
127.207 78.1632 127.662 77.5978 127.057 76.7384 cv
127.423 77.2365 129.082 78.8579 129.082 81.3442 cv
129.082 83.5289 li
129.082 85.2856 127.473 86.7098 125.487 86.7098 cv
cp
.768627 0 .113725 rgb
f
125.487 86.7098 mo
51.559 86.7098 li
49.5735 86.7098 47.9639 85.2856 47.9639 83.5289 cv
47.9639 83.5289 49.8378 79.4053 51.1032 79.4053 cv
51.1032 79.4053 58.3159 84.3518 88.5231 84.3518 cv
110.986 84.3518 125.943 79.4053 125.943 79.4053 cv
127.207 79.4053 129.082 83.5289 129.082 83.5289 cv
129.082 85.2856 127.473 86.7098 125.487 86.7098 cv
cp
.556863 .0117647 .117647 rgb
f
88.6954 78.8552 mo
57.6841 78.8552 55.9307 78.8552 55.9307 78.8552 cv
58.5134 80.7601 67.7986 82.665 88.6743 82.665 cv
106.71 82.665 118.369 80.3783 121.464 78.8552 cv
121.464 78.8552 119.35 78.8552 88.6954 78.8552 cv
cp
.905882 .2 .141176 rgb
f
141.135 60.3893 mo
141.628 69.3377 139.12 78.0684 133.596 85.1813 cv
127.712 92.7581 119.123 97.6046 110.029 100.282 cv
95.7442 104.488 78.3907 104.289 64.3143 99.4294 cv
55.3094 96.3207 47.0939 90.8601 41.7652 82.8461 cv
39.1565 78.9227 37.3332 74.4279 36.4619 69.7982 cv
36.0702 67.7174 35.846 65.6017 35.826 63.4844 cv
35.812 61.9975 35.6061 59.9956 36.407 58.6547 cv
37.5255 56.7822 39.3836 56.5661 40.8545 57.3324 cv
41.9849 57.9214 42.8865 59.0906 43.0478 60.5341 cv
43.5459 64.9939 44.6814 69.236 46.8063 73.2081 cv
51.3141 81.6346 62.2276 85.9555 88.9669 85.9555 cv
115.706 85.9555 127.955 78.9288 131.48 70.6573 cv
132.261 68.8259 132.886 66.9157 133.306 64.9684 cv
133.675 63.2569 133.707 61.4719 134.099 59.7777 cv
134.358 58.6535 135.032 57.8955 135.866 57.4811 cv
137.932 56.4537 140.981 57.5377 141.135 60.3893 cv
cp
.768627 0 .113725 rgb
f
46.8063 73.2081 mo
44.6814 69.236 43.5769 64.9903 43.0477 60.5341 cv
42.9888 60.038 43.1109 59.8601 43.1109 59.8601 cv
52.3954 55.6002 li
52.2137 54.8493 51.7737 54.2202 51.2128 53.7838 cv
41.2132 57.5674 li
41.0434 57.6719 39.9283 58.0794 39.9357 59.0404 cv
39.9538 61.413 40.483 80.7601 57.8949 84.9369 cv
68.9362 87.5855 86.3689 86.5174 88.9669 85.9555 cv
62.2276 85.9555 51.3141 81.6346 46.8063 73.2081 cv
cp
.905882 .2 .141176 rgb
f
133.596 85.1813 mo
127.712 92.7581 119.123 97.6046 110.029 100.282 cv
95.7442 104.488 78.3907 104.289 64.3143 99.4294 cv
55.3094 96.3207 47.0939 90.8601 41.7652 82.8461 cv
45.5735 86.221 62.2276 99.2598 88.9669 99.2598 cv
115.706 99.2598 129.634 88.6905 133.596 85.1813 cv
cp
.556863 .0117647 .117647 rgb
f
141.135 60.3893 mo
141.591 68.6673 139.479 76.7589 134.787 83.5559 cv
134.407 84.1064 135.552 81.4795 136.746 77.2075 cv
138.598 70.5828 138.746 64.2058 138.783 60.3905 cv
138.807 57.9433 140.072 58.0221 140.335 58.3273 cv
140.789 58.8531 141.089 59.5434 141.135 60.3893 cv
cp
.905882 .2 .141176 rgb
f
77.5777 5.2227 mo
74.8119 5.124 71.651 5.0252 62.0694 3.4447 cv
58.9937 2.9374 58.3432 3.8355 58.9085 4.5313 cv
59.3901 5.124 58.9209 7.4082 57.9208 15.8908 cv
57.29 21.2402 55.418 36.6985 58.3159 49.3767 cv
61.4768 63.2057 69.8729 66.3666 88.0482 65.9715 cv
88.0482 65.9715 78.3679 65.1812 75.7996 50.8584 cv
70.6911 22.3681 81.5288 5.6178 77.5777 5.2227 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (1502.m00.i004.n045.S.c12.Chairs, armchairs, stools icons.eps)
%%CreationDate: 2/9/2015 3:11 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj27mg@4ubY&"#(>Ykuf]e=n.<^]4b:u!cN%7ILi7E>#Yq<dXa<-;8TD.^eOKG-0f<7c0Z>?,m5QEnbAUJbr6At+9eU^SWY
%DL-cSnu^EQmJm"&daIaP;:+RnPVu7j^n+ldf*q"`V@CSRE=B5<*Y-CQbIr5KkT71%je1)E2/CH[B-W]=<GJ?'9:'UoP^4G$C<`BM
%Cop[NL,#*%qlEo%"iY)c?L"DXZpp&;)%D&DJPe*%I\q;_CpsmKa$I0BYef,IIHbDmX"F^\oPaQc-caRu\[M+O[1%;hi8+Cn\iRU\
%psS['k7sL6Zg7+da$HcU/p45>"t[-Ddc'(=>YO73Mc-b0AU%*M0DO1*8`:AaWIktpFD-m@5j7i9'E@h\h$Y1_^NCRs8)4A6iFaBH
%VCZ':n1]o=(u2sT;O.cY%5C*i=9)Qk#tUl[8Pj?U9&5$.le6&\Ug`2NqM4DGr1T/:]&<\-2%+^i[[j_+YYW46i(#["\WM1ZPU\t'
%E&c>7*`r@DS@!,9<"mMH]ird3e#7G@>Rn1;b^fY(-)^ijdI:VI7-msYUYhfd8Z@+UF?s`4[3!bG,NWY1g8eP.YOj>18^t^'#HaY=
%dX4]<Y+*.p1+Wh/Jhla5VIYeU^dm3W3%*n-$#mDEfL;YWJn,q0X-_AV##GY,_m"jEm^0$[88)9Rjmb"@+mg^3?bQZAJ9\OB1aMG!
%EL,?\`*Z1++,`!OY'Td47]D8u"$ZN75=1VE!2+_=>CpJ1e1BP%?`ECqDU<s8)Z5sLrcT:ZmJHZ?Q]nPKM=7<u=%s@3RO2An(25`=
%EuaQ/3;Aj#?oQ-BDN7XHb"7"'qtNAKn_o7Xq`]2pII)]\n2GO6jfhrALI6,C]TUHHT4/D9(5n2?_i$tM:b;/[#+@hiLj2Y.MF6KJ
%dtH]TL><Cor/KMD08V8f6_s31p-GMD2rQC2_1N=Qr/H1L;YV3/@UelWL_Th8h!kJ),@7l0e!)#kDMT51`]h?c[Ri(`n4[Pn-'J[c
%o2*Gu&Rb)G3aSG/Q`Q?Up]nDSNqaQk@R`-8Hqc:)5@?Fg;0&*s_h/Okr/H1LJh.0%>6'^Yp`$ggNqf*3al:1UAI*6L.169kPU+@3
%#*EV\h3`GM2N0dD5eo0h]J@ebfu@=Y&,&9lV2QUM1n6;`bD7DB`bm?nLa1B&#NKahK*]>5.HOHkR!cON9=bgM.5Xrj#^@+&((.#d
%P.+,5L6$&p.l6]$Gf^eZ++oX1jSCu%:VbTX7f^kmb*(#^B*.T;7J^FiNjPG!^i69dOe,-R7=)b4/p/;"6lI+<PLTMdgQL,"2\7<-
%:)Y197"QpTQ7MRF4B0oiqS@Aa.Wt8k(jmcYk9%n,^S?#PJ`5P_kU1]>+4oVhUNc_-4T=+,_UUg>PKE<jkad4/=oLL/k8tP4cZ<%W
%c9I!aruJfENu%^#4-)MBhooI,>Q2V1LneD?/A%:i(-e!=iEmpuJ\R?(n0t,Fo,56/f=bW*qIX$RFY^OtcZg=L<R:b!A3>*\Th3So
%[c':"%>Ns58u@,E1G2@86/T>H_1fOlLXMHqID\#&T1-N6]An0^m,3-&M6Q1l!C\MSlfnk4iu@nPqCbuS"utYRH-^SRDU.t80,I]F
%96gRFk0Lnj#S"GjX:;5n#@EM[jWltP^qK_I>mK>FhYC`u?SKP)G[0"p$od@CCua9SQgGAY2NS4o@L/n@09:56(BUf<l'iQq!n+r)
%-G>4W`$-0f+<alW]u0;$6c;qjM[DkhImf[:+HZ0^GXNsr"-jd*Q<%&n#9q'5JF86nE4X+,$8'@5P=Uia+q_\b^>hjY*XSt-10B9`
%Jr/qIc[]nq];Zu!BHb<M(rr!$GDn'cQJo]u1dRTX!!/dD+&Ef'LVHuWkaeEg)gPQ*^_\P8d-C1sHl;a9(8+>j"@FFVI:D73&NN*V
%#RZ%,AZRFL+l3A:Y`''MksTgr3:J\XciOqROU58u&JN24&Q*4m.tt>Q*na!c"g&8?Qn9Q>6e/I$Zlj-?9KYR_qJ"mq=qh,li*Bb2
%ES_6^0_AY9$OHpi3cgg)#Uo>,(-5Q$(MQZ39-W[m?r9W&X]kYaR8PY.@E4:\O:-J%/i'6,BK):uGY+nAii7n!i&fA=8VcBJ9@4Sp
%3hU[4q;=<N8Kffb+R%Xn)'ssQL;X)DdnbfdKAdLJ$m$9:<CMd6_j,?%:.0dJd_J2=@mVjP3HML2E.!GJO\+`"kKn:ON-_+Rkc1As
%Z'VMl0:g=@:/7:,DT4V&h`'94=I,S!MEj90&VN*4?p%hA9OS>uEJ+@P.1CrZ=b[)d38Cu097dt7L^K$@;m\)l"0j-'biXRY7TV-u
%f5FMc<Jc'1KlJ@t#[.E56V8I)Qqa?oLe-\O@4^=^%2#8D8/h+`r/N%UTS_P0>cO>2d/pttpP<o"=2r&?H$)?0_3<5i)9j9mYlhbY
%jfGK`<.7@n)ejlnJ.,mTA>M1-R*qT7Bcl<26]GScXH?m5:m#q+/L%-&09-7!FIqM!dcGj5N#$s-?l[/T?jm]uk;Wjg#c3PJ/L)?X
%GBd?p^C:Y]0Ia8/mRZKR]Dul+H/a"3"K0=/bkWrHM1SKb<I[h)pgQKc*X%\WfOd*;,CX_#bX"#,^M:WBFG!VbKi5k;#/q=;$B^:e
%"p-TX0TjFAOs2_*Sj^:Yac(`doL5uIP=#9N(hsa]MQL#2AZRK@;.sG@.qC]Ye3um[+'B+G#@nX.DD`22!nW\*_dAoDjJ$IAharJU
%2pFr=nr(J3A3_d=(D^<2#X`OTE"!1?a5>:^C9e48TqjS[[%o&m;Au;uR>_k8Jg3,t[.P(09F-)R[0K&$1F7LZ(^^c$0iY$:*e240
%aQ58&FXVI0.*=>.,7;\Y;I1aS9,1-cBAi=;TVKMN+nME7BV$r3DWt]?>b6V3&.J%qWM&K)c1a3A*YUt=S;l?E(hXp=dM\91e1V-E
%nCULS'-8&HOA6.J#ptF%V(URG:broa*lEdK-R9.^B.AQLg0EQij0K>WN!,l*VUa5DS>3':fE0]kK3&<m.?L7':J@_`,-1^98#hRh
%i_&g)bIAI9Sg$Ni0%'dF,0uFIQ#j+'^l_\8jsiiSJdG1A%'d)F7JMal;q)4rjClPjU3;**(tZj5X;?^+@SKE#A64^&,%)Q!/`miU
%:b3caG,`!71.2FM7$S$I0lL_VW!FTN$LlF"O[KVXO.nDi?:sY2_6^sN;J6cb'kIrE#(L2D3>Se"oQ'!CLTQORc\o\b`@uSu.R_3H
%`<hcWNbS*pMQh*9"kSlddjqW477t<k+s]hj&Z#TJ\fl`pr)-Ju>a(NE3=LhJ54h9UgniP4r9+nmT.kG_&sP\<0PpQHJ9`&*[YO33
%)e=4+WCtBCN3tl;ictVP:/G"'a0VL?LV67@1S/-19QB-4@H[;l6Xf6]M%'[n`0>Y&#&A_i?3":9QrA<.>PQJnUIUZMX3501Kd0]U
%2?ib:jL`>E#E-/j<Xp?\kd$qY:(`=WJQ$?e&o,fjl3bo53"=Pe6Qd\+%foa<_SY@g;s.R=$8K]H5A?2j(B,j:O]9kmXB5Pf+5[%?
%OC'0]c,N^!Ts:BOKlNh1Y+nea;7'bFW0*hL&>+R>B.e7VQtW/)QY=K//7]_:fbB2%LV6W"lGg@Ij1EI_8M>[j(uih<,Z0i'cEL"E
%gD'_#.cX&HMrZ(i!c'NehD)!BRZ)l.!-gt`1!TK`Ldr"J9>obP[:-)XZ;u4l#t'fYL&HHkIm9aA9,2]^(03)aKp=*lVTJD0W3B**
%*6tBrNRsj3^0FT]dkF0*f/%6YF]4*U/2ep-#4O8)-I19$A1DFg]Q6:9b;dW#d@&Hi1TojVIF%Xm.sa40dI6Rc,fR$6n&b<L!o0Hs
%EMmR<]*Frj9ErK*N.s,5.H"Zt3l"^>=\K8Xj9&.#HMD/=EYqeCqOlj[H9jJ_QgDjD0<@nUT$Uq/Jp0?=i8H?e!I-A'0lNd'\aWD4
%a<Q>rJSSmTq=6<Z*A4n``LW)?^&WN<Ktn3W',"mmfnn0EKO`Iq7sWM>lltC5KnWPIZcOk,?"-976jFqs6H7@@]DT:U>nl'jRW7dH
%B7MhT.u(AH,)"O_a_>Jt;'&/\#K[9K,Yb@Kj="CA0pXNOqY6)g1QiTNi@]-f33D:)(*Ro;k[i[-EOm:\#YtCml%3TacpB]$K'k@P
%KY,(nRc6$j,+48.-=HH`G>]6C@0j/\8XN%Rd"(78.2PB$qCH0KL[m:K.#\C7@cBmIIMPqaS-9Hh1h%-_>T;-Cc/g9;_6u*e6kifL
%VkKEOL;UX,1(?)QLI\`$J2#^(GEn6s@1d^l,6bM7LnjHLH8b4r=c-[f!0Y6:<`sTtUkloT#+Aj9!PCZacs@NEpkT4&7[$[=!Js,_
%+3"gs6;@o6&F)FhV`lp@M%._0U%QhrWmp3s/@N;%VS%:RUXmNZf\e]*g]aQ#&;A&rQO>Bu&31+d6Pm+=atq0!<;$2,7n1-^lBhu'
%hE8H$;[TR$\.XB^Z+`5mDDUX5G[a[(l5D_TK:,Bo55^Ve*]PfN>9d<e,j2hC@LF&C'PsYZi^`2YA.6tP3#k[@!;Eg)=4/WLIGbT>
%<hjtP?IURW^N6\#KA=7lEbca:\BVY$/6Ol(<_+Ph,cMTZMI2UD'Oik)<KMcheBq5L]V$s=eKlSs_A^IGpkot:$d<Uf+J'&\#st]6
%`"]pc@ni&^;IZLW7F?![Ps$k7#V[&4GFsj:(Y8r:+UXs.JTuO$O(TS&6ls;R[iOKtLAAV3$b:hh9-n2uq=<P+Q_:u&/E(%!-!j+*
%^<7ZDeV#MWWJSAdCk05lD-.GkYR)>d!C\AXA@%qV+elWIE5:X%/WkNa6aFcuYh68DTjSJS4PC'[L/a">01s+NZU@<&-eHZb-6;*1
%Oe`qlYV]\1+c%YdpX%K2;dYmDnBd/JR[E\lFcdsnP;(rB5.G'3_%"T``ZTaZT'&7:MAs+Q@T+_s(8fb"YtcHAhb]k4A0i*@\1mG!
%m@Xjq6Un>#+OT\3;:=M%&q,O)QrOd.OB%;H!P!I.s,&PV'A.Sml3rfc,).<d3%@Ds]bk%p91jH3L'1[:4iJK5kQ3FHMu0Y*o"3$[
%Q7EOdU/6$C$V[YDi8/2c*-,0BB;@2A`V0rg1*%c4bldFR#VjFGoK<b0d\5eW`="!:@6(*idg?WVn6%;0jI.u)T5:&T$c9muULI"E
%Kq[d$:.1.9?.,(6PJZ%pgmBNd<=4Lf\_)7(E^M+S)V(e>:uef>MJQtPKD_^d+W;-SqMIIj0`?dh0QKQMTRR:*3A;D^,cm"YGDW9b
%k"$O"OYXGZY6tMb0U%*mS5]ppb[DBDCg<f9.jpo7Ws;aCZPEA7MG!LZL]QMo6.E;5JD5(8?kJ.0(OK^G8!V!q=!WE\D^SdAWhI@G
%/"W#'N>5t[\dZGF'9'><5\MrN/_gpL'I,f^CQkn7\,VEa9uT#V9mB"&r?5^g/@pYg*W]?A`/7%'LG3KlWgo'*W/1.,E/rd8LQ+/;
%I9.gM.4oC?>VnGD%1BmD<2=nrbXK`43/@tLBl4(H8OBa$Z(2];mY..Ddr9ELTf)RE?u`Y@nA6>:A6DSk.Q1>[3/4j!+n]4EhP'km
%)5n;Xfa\lZZ<jT-UhI,tnh(f;i@f'?[4ik,Cl:*FOBoZCK+9RprO$-Y'D/'hfns"!)"[="CUca.<(_/lN5t`d7dD`(WZ2hK&Z$d_
%;i/rF3:gr;-u*pQ\7D71T9$c#]0568#`73:"J90NhK[27'X:@RIaX!m4N94<l?kmCN+Z^,S*W:3`M-UL37HM/,K<9_Tf$T='@OFQ
%c]OLTZZV708gj'%LUIqb[*1KKMrd;c>_kHPIZG:N6\QO^Q]8:qFXi&"g7.#[*Q-6cEP+*G&7N2^+,>93s"Z,>]+&lKP&hIAC3r>L
%4O1nN1P_:j,M*U+^&W2'`@V#R/$t2.RRdfqDC`#?H.m^7.2:0`+0gZePP,?&B)n2P4H\S9gFPI]:FI"?!BEq^#`7V11j03Y<\&s0
%<GjE'L0YG'D2FF%jN-nN"pu4o@d6]a`oF-Igf!(UH7%Eh_6f0(AAkoO>b?ggH"Ir:q7(XM*qV<5aA,$)5ciEZeX>8:;B!rq_#1*T
%StcMFXtg>hV.N8s:<kpW10(&XZj`VHH!5cWLa^?V4&l/b.PrW"n"9BBCY&#&9t^(YmgD6o2f$Z2EAdTFXrRc'?L(D$hiSi&?8Z.V
%[=S&nrqXSb^?1t,ep;:TVqp^IFrM7B5Q=j2<1;u9l>9Ac2VZd^"I7KQq)A(Y-+-Ejn"rk6V)$6qItrI#V.sdW_M#m3W?%f0.ZC2g
%ja30\q;A"#Y"'.ECSC8CW&7f%`8!#fN/+f=UXW&dKlFoBl4:C&!]ibK@`P/=0%$1T]@-hecn*\EDuMI3PY4T6g8d+9VP(@q]DJqf
%^.*iWJl6]?G*5FXYCg`gWde4"qG/G%/9S-ofilb$F@'1#T+RWVp=tsE`a#KDX'W5-XfH1sQ#67V=/hBqZPLhMjEe>!HAsQ9aFn5K
%K6H:J_>"GA.Q[2TQt^bibRCZjNZ,>=>b%]l,[h%F.[[.HW]7H5n]qihr*K%YOY@jVWh24ceP88t?#;S)c)I"E_==^(2b7JKNlqR\
%0H.n`KldsP2knah?3T#*;/K9?T&X.b)aq9jXLI[2'rg5o;C`jsae$Q#PkH!i2:ZWIY>=e(]#GPIhsQ#GlJb/>*f$@d)t;IkrOl:W
%8jK$?eM9=-T[`ruiR2=Qq6,+H!>j@=!:B&sY8`!8>D%s(G.Z8]VgMLH<SB`kH5NX%]AQH$Mtj@M$dj]ebIXN%Xe[![_k`:8Gc)X[
%>#4ee=fleL7W`F1lJ)aI&H10l)O[Y!H?n%8J;rnT/TfR',j>/k!0b00*Jn,0OSC[r,VluEJ(_fIZbHoCpWbsj[K/&EPNchS9Zr1:
%iaos`VFu>%R>qkbF=h7W-W?aC8O*XL[$D-Z=Yi%Xc!J"%A886I;?C;aOq=BC4i+?Lj3[$ko"gA:4mXNs2Y$4a_X"kcCJRF%*HZV8
%,aMDQ9IR6B@+NB74;$;*@&MN?FK20,Fu4@LeDk7-X5[/OiX[M;F9kHW8E(+/;tL=:e77XC=7bFG'6M9._]8"=!T>r'>$f+N'D%2=
%4d#0q($.'3rQMJ!W,?S[6iEl.F*7UYHL6Vg3IkWn)+(Ur$^:(@d(g:P6#W"Er'PfbSYT(T+E;pSY?#BSrb=;05pH\>K0uMj?ul0c
%bsnU8\e0D=O?$#pf(#G:o:JM$"3'CdO^9u0U%+`XB`)N.0udY.g?@rNX!XtI4tr"NWpY_R@4m2(`/\Km?0D_J*(D,oN9T:WP2HZc
%buW1DFdi]CC8L6uN,b_/O(_mq1HJa-D$uH@/R4?oF];s\VeLug&fa@U5[l]T1EB7t-S\fV;m]\!E%mL6?r#I;m-l`\>Mp<9i8J>*
%-^NK:mSuF6-=P,'q8QUG9?3)/cLDtgJ(B#59e*h80dP4Yk^Lmm%$6Wn)=8\N[+i]`h[7=Z+eYSoP6#ou%k^bLJ'RiZTI(\n<PHdl
%ZFDXjkaP]faDJ$Q[%*_6]Ycs<SD"epMr'au)l(9n`Mni"%,;Vr2?X7#V`#;p['<`I*E3Z?jE]5MJ*6ID4F5_r_qj(8+j:j;IUbNY
%I[IE3gZBYr]3TW'R()Ca%c'm1cHIA#8V4m>+%BBI2kW<"0"`TMbYriG/;bBfPj$>>EPoBl`Jl-&/;bB&S,U^&c7b%oMrMaXEFr)'
%=;3^VV7<5TVW(&hAEKc!E=3giE=3ghn\85ZE(kN8"$(K&Cn";,_f=TtH8rsDUVHgr7?;>iIGV".NUeL<UsO]`9r(6<q:#te7CTBW
%R`F6![lhfe`MtrNn"a+pP,N9"pC&G)NF)RVgb&IqKTt29C47D0-+LG_][R7FmGN=%1bX\%l0CRqE;F+.d?s;H-^fgYq&7B7#/fL\
%;+snmDKa(:,5#09IRB3"UjfY(_BSZBn'j!VN-<rS^Pd7AK&t^eB!ns9re;W'8H+&_EX@bhcXHC2!38QV\&eL`\R->K7IIY+r=V:R
%;G5[L*j<FO+!pIt9&E(MrniUb1M?WUFH"g+0#u9PV]4X+l*ebOn0.+X/cp;sFEYW2&_,RhiXT63gX_iY&qoj!&%,qW;k'XcW!!pe
%7\])&[Y%UWlK49MT2b\_$aia1<c'*IX'DZipR=_aXsdSR(B0?"6u)?5>UG?27)*H01<G"o(kjKT,4Hshf%5CT)!X]&<Cru^Q"au2
%WV3[j.fh,]b]c_IKP<[FS6k'E`&*_$j^,W%.jYKSA"BNO(7<o].EOl.;Pd:10;(si=4hY1HBci:%5"F2n68Q%CD/nLq^,Q=9u`G^
%-AgYka/NZ-V+.ka8Dn)6otOf,pUH.YHfh#TS+(lcIlT%T?0.$U^J3sYg`COsA,?5S"i.)[<0ifa`?V6mc3c*D0thhMo\pJ3J(I`G
%M0HTqRq&r$.FY<P-.&Fe=XQ4j)\G$imG^mh`LWf_/`js;nkHCeh-8$[k9;LdPilRM))mdQ$*%3f/`js;no)[)(L,%W1Qo_Cno+%m
%[rG'/!`IfQ2RL_^_<GDJGt+i-1L;S9Ca1UAOVccn2\'qmMUjLMcq/U[XS:5][fjNOp#;^t$#]59ncL,6L#&r*<bq])N+,M/IJ.ut
%=\D^amiO6kW$-^@n$Oek>Y6K2na82Nqe"[5$:VHn:+7neM[ETh!E`=B()=,DKkr#a'"He&:aWLbA[4amCf)PVG9Zn.bB=FR2Bb[$
%2SjT;0:SFqWm+_oh/!=]c"=T;(qEY\W1Qf%qKWCiRAKp_lb,\^mg=D:9+%3mkQEd<.q/BMkr[u^9tj4Kqd-QUO0/@U5Ub%4'B-c4
%MEMfO>?lO%(WD/t/j=A\5oF-np2@P\@<SJB?s`W/"gM@-P3(V`W?IYE[n(1N:m2n>Z7*@:$87=SbG+L3.(h)<08m]jU@9qc;dl)J
%$SS4]6hQd7iFRa"cpcpT-A@fNq;L(Lc=^_r8B2q5RHk4.NH4f^Y=RHWRriT)""\nJa_7-/Btg3HOlVo4Ms"0c"qJ!=r/)aZbkgo]
%IcImQchP>fg%UE6p>HaoCA4r3*Ed;f36)mpBFEu_)aVWJ43-+FE2Vc?C?GKS%5ZprDk+8[/KX2!],p6Z"26B/kd5T-e(!Y-p20YT
%fL3g)c1f,YlaPdk@Zqt?pl<uEHpF(dLhD/sr#@D<5a^qp#D?6Gp]=T3Zj_E(#DLjj8Rh+d@/k`?B#iY,CeO8WSVnk'9`M3_iX$GX
%AH`][9dPW0Y>!?%-c$s_&$J[SM;OKn':K^RSY1npcjhN3%gC1:l!i^kO7>7JLX0e+Xc$Ah=lE<))s=V,q0Fj9:!H_<>j_OE8G!AJ
%SaN[l[kMg:BusYt_q]=.7g\^R(H!\:i6A)6-"Y#3oK%&tX`3TdU>>+uTQ=,51k4Y*QYi5\,6WqFq_dO(nU<^+'&>N-[s-IXDQobt
%:h&s:^KXq3f$+?/\%$?klM""IiN$.2=84U.2br1`-grT1K10<)08C>+-9AZYPA01Nd6#J?qd4aAc6=[*O.^.u'E.6I/8cf,3?PlC
%R=*")pktW`B@[\HDC2!8qrJSPPL%8IEjtF`lf)OI3Ui)fS&o<l3A,1rT+0tn\=%_&SE&U@nqD"P?((S^oo8QF62l4d09[??BeoBo
%2jM]-B7>o(T-&O[<[d*.+thTGEjo"peZ:)h,^J05\Ho+*LQ_1d#;[a@p3EhW1m0t9HuAYF)pRD\[9F][Ii,d@#Q(&kCPeW.*pYts
%C`l#If'(Wp5js.I_Fj2X/YpfuJmI@,;C<m$KC:r7f-Ih,p@Y&`/"*>MZYdhM-($=$P9/l'L?g9_r#>>YCmg7Lht[n:RCDcDn$I7G
%FD&g[[(4KKC<cJO3*i"j1NC%$UYGX$O5GFWgba.em[oWHIN'>kZ(<)4S,&smr4XZ0<7!Z#0AR.#:$nS5LJ6JGY.9gl2@#]t\*ebe
%DC$El0L<3s`aHLk&_r=(1N*ouFHS_GjtWH.)3s,t_KjV)\IYWWP@I$aHZp(/Mq.M8lQ<IQiGRmB$$YR,3bbB&PkYRD[n4c(Z//Ef
%-H0;dHo.1%j>I<Ig.c:\gFd)"$Se-ZR-D*;Qt<1A3.t0L]]Jsb?#"I6P'e.b%*JLmU7.J\dVaFcaJ//Y%>eRQ9fJ5APWjhALQ9#Y
%C:-Kbo69;=EQ%GB*3oE9&DXGW;+gI<2tQT'9%ND+*[NlK2REB?8r6ZUp_p!^qALZtkkc8Er73.mFsM<.o$r9"rIL*q,b#%89!t"=
%rNbI*F.h9.FJ;[8Q'+6=E3=5Sg[mJt,XOC::TW8g[TchX>4XM##FiQbm<4o&L%1U/j7Sn%X3<%G$fa*+B5_G]f]m<5/Tgu]^&rgr
%OdR!hTAp$^\+"S%7$9G!])J0/bq8?IT#*;DkO.JB/P3\IcYl"==j<BOa"un&:lfojQYI(pIa>lq^L6#M`TPI]\W$+_@Pp*I1C5fq
%Yu]?,nOTl?Q+JM')F<aMW!29nop3E;e&$%Qfj/atnE0KT%[jW3a]CR+>,`LkK1:("e='$sF/pA9&NuL+2=OJ(I@Q8cgcW%jO[Ydc
%=.>k[2EsAT!Aa6Z;:#-g7M>6#f!QaE(Il[09p+TFC'F4(oa-_jmDi-Xg-P5#"Ei1OlH"%YIE.Oddpm%mIWh2P@\W!Y>E4VbZ^ugd
%e88B6e>eM$Pi+&2bGABf^R=/YYgRZ/iTdB2;Cs@&Q\jL]kVk(m'"B"eWGqB/KY^(;qYF"4+=,lH--?,SghU),P\NEU^Cm1@%^fMU
%-Zm&WF'9tLRZ.GVVc5;ClFeq8>[fIdFIj7Om==I0#r&DZWnls$7!ODkVj^bQ)V'-X7]cP@#]@IG/(VDQ8X,W6d)ri^,YA\[k,!I1
%3/KC`p";`r2=nDn3/KC<-W+dCF7?U;dY%%%<k%51p!!57PQ[]AS=E%DTCFs`E#,9tS'I`R6"Y*PAT8LI^Ys#FB2N7lf9pRXj`[4a
%8RrEGhUUJ[ZRAD,R?r_UhTqoAil/!7a)*tt;SGk<;3E%X03\BomaB>>R@6OV]ReV#-84QZbDR%)n60d?rgpVS5E,B>:eVOSg\#MQ
%m5@,_0G-']o5MSmaNXFc%2Veu9QYB$VOhUkadqs#%:/:`l+kKjkh>$aL<JBlI.?]2PlA8/m>KC.B*A3Nj:Z:0/WL*q3$PTZ?2rY1
%](*6ob]m,ARE:qN%I2jH,o4t3S_rM?*Yq?(,0:dUbTb/u/JJslhL$So;qQ_n2/@IF:U;_&]_P.j&np2CVKiK*7uJp:Ol\1#]LA-q
%aR]=RFGF9E]Nba0/H-t?a+2LgAtOK,1m:!\GX:L/`-mQ208\0VVan_gl<r%,hgV?7\I3gY5_=^(/bEni^7cIU)XEeY]#NX?-hQh6
%^=?p=eLSbDC\.+^<OXP9q;#Cb2,1],_ll^:=M941l8]6QQ[f2HX1,<Z$`c5`<ptNM5>HT][)Mao+a^r-jL9(9mXOBH*fF=B=kH0U
%V%8eo4AY6#S,IM,DiT3#m(>KF^"TCf(Y-Oh*NkdSC^$YQ51'J#Q+k_r_Z]YeR=F.B,&=K/jSZBH8n,gW%r,H6W;ZIELPlDF0-8Vl
%1C3.B(g+(V2pQZ6b-f\lX`]omi<tPg?rPJ(`=]?3<)CNX+Y5+kYnZtL\r/01`Kp9M)sj6R*1<&8\W'h[%K4n;ggUM9Ylh]oEXO+Y
%d)[eMG'32Rd&;W;NnS;c3d]Cn*5X74QtUnRZtJoU$e6bWrpd!Wf0$cj=R3fl"5:=U4&p!d#H;OOf==N@QPu\n0W,0C$G\Xc@Z%AO
%9!qjqOqg6(4_ZfiO5Y;dHo:!Uj-<SI!!Gj2_>+P=NIVNo(^2'h_ad<<<_Ct#HJq)@+#3`_KCAE>9Y5Z,rDa4dTFEOnc(>IA$WU[3
%,D\^d=6k;>ah^jtC!:S)hPp`f-S9Ik^Z8n/n_^qk[N*,e['(F7CSeDFla`$a_Zr^+4k#)q^2#a3)##Y8,BWb50Dt,>I/4%a5CjHH
%rRAm6>,q-@>Wb>aJ41pfb@(]r6@k-OF$C#(>h_huEZGfW=SN-6i3VHmE\._ag[Kf=f9mj/M0ZmUKlrSji36/g]%qo,3'=qVi'9]N
%d$]'C_0!&7DQ_:RP(o831dhc0rJ)enGgN(4*1#QKNR.r^]pT;t<BK$(gtkj/#"cuor_3h()bLp-J(;l724Wt3WOB4<Fjpa"a*b5K
%_lj6bQb";c94s;s!t$IU)=uD*TK)KcQUgp@kT"ofs40%,dOM$)kL/&9pg`Q)q*Ccsp7p.*CefpUTJKoA(ab!aFQ.eq4fQ`-FRX,;
%R2tK!,WuXK8[b/q,.7=%9H]g<VZZeGRcWjC@Ko8_aKGQ?;#GB$N"%J-cB@_/=uoGu%LBmA_VM1I+,rUtfBG3Z^X4UV"I:u&I2bD6
%@u5VP,jE'D6oR.Q%.)>rJtYagWW*F@3M--XVuLUYDO2hs/q2*[H_1I!l-u`pgLJ5Ta%?0*@AY(f"f9oiZkGU`N<"eVo/;$h9Z'YA
%R]]FS0A0jm#SQ78Dpq5'E71Ut)\_b2p`qhR@7IJ)2a&h]CPG%cYDIs#K&YC@i!".gD)TGnF5H7M7(!h9F:[*UbK7/+!bQDubQJYk
%/\*'$2s'sQL@_i!N%YYK42kgD?5dC&@cY2#eq10?j+<tJT*Y\JL0T`^fIaKaK.]Pn=QAZ4jqFFK39W9N'IFcY7WTZ;k3n='7'QH:
%=cnXLVZ+6ZCM2p?7$>[+g3k;%>eX:8T-S_h^DT9%Zc:831>?VfX7bb-&se69hQqd*2UR\9n!.Y<DR0$_loPm%BbQodC,[g#6)Tq)
%PV9iblTZaV#5.S\ZCB#X[[ZJM'B(r*AnL&,M.+DR[u:sofJ<Pk0JW2>W0m^gF7F;ui2?n:;Phk`FYrqA_"dpHR!TRQ_3[\GQ/;%=
%,?kP-$78MdQ-"/EJ="s>oi/Gb#XZpSV=mN@b?jEg80'Tm]p9LD)jV'Fnl)B.pUjXD=&NW%aXJHW*mGa0*phN/[=WS%;l,sFj9*II
%Ae!&9BAKdZ[p<`j>,=.6mZb;!=">u^J)k@)D4C64aE/71KP[(/\K*`hM&8`g-dJ_'BB$9J\@Q0rB%U8W.9C9^.!:Op''KqDJXqSS
%LP#5\+E\=peP-c.eSaWaW]4?;em$9kWnM1Hm5G#\5T>+!I.o]T1CO[AX_M&3Z:#?K+W4rS;?U4#8u7%)HDtuAhZaZZV]V[/X4`K.
%4L:O"oX`;s;5r"Rg(=?TTQK"'QEQdk0$psC9(HB`e).C2V%(>h*S5Kt2tkIPLum"(nf>t6T`b3@I8p230@S8Wcds/SNqH9q!q7sP
%]m>r`?Q!bDd*9(u8$C\mq_/[h5Kk,e'`9"QbL]%,W/dK,>H3S$0-4Of:VCSfb<*,oH)Ys$[!K,TUn/0k_^n3\L=(5JoU9<mRo6\2
%_f\hdpOgaka=L6he563del++cCqr??gB)gu*[7_QEHVa'_VZg!X:19t-Zp#Q>AA8\.1ig`B1PNekm0V.GE/O]h0/BN8D:Z`$J20e
%Lm0"uP4LPd_5Y-+7o5C9U3gT;p([#^b\j[eX%B>+%GJlA\13p0Kg\"UCTX7g\!ZQ5@6>c((]N\hSmY6)F:5@fK=VX*hN!6Bo26C_
%g2!!I2<9(=3XcPl_VRP7TY6hUoi82fi-l=l4]HU2<;Z!FD979m%;h8socJ]-=Ak7G'&@=]Q?D:m[0<EDG6S!JMgbuR&(mPh+Y@D8
%Rm2LJ$P2P3)r[ZSHS+U<8Y'0f_6+j#hLhA[Ml3No!cl^_AV<8bKH#7Qrb==F?0mn>5#,q@<,KWXStGB<V6Zrg2;6#=-+-r)G@(\9
%2>U@MrbjiKka:T_K*V>MYQ[Q^;o`0hHRF+tf6%PYSif]SrkgccOmI%%=G'8f+fXL&W=1iX]Eu$Dg$"`:"55hW$n,\r=q4%2_*8oZ
%P!?npUZ^pFMDh=r;0fq+3Z5"K%L%[6!60nhA%OPpKmKfs.i6]M6\KXh8<%Yl=2EY>cl`e&LP%s;RX8FTn4#=?ioaaMBI#h_X\7I)
%O'W%/ng:B0qm#gTZ$;lj67,>h/4K<h2:0eqnPc&:9p]g'2]QK@ji)mmE\[$;M]%!\8kXoCai8o,6rDQq(UO!]H1X-beLKHl_#OmA
%UES=KWq<&)Pm&Ni*'/]q*!rH%<(n[!)FaW3_q`!cbT9BH8Y`Z,b]M:333-se%r\sW9c.I?4`WN&R!,65qLC8[-H0p;)0s0\hYBUH
%<`()_[A0stWH\5p1?PXs348T,HH)j]"7$!0mTUq>\^X@@Qcd2h;*1=L)jTR3&\+e\h__?_ob1!/?B&N_rF&F,okQ6b#cAhT$c;Wu
%o$*m%^AjprRD_0P#[)&R.m[_Pq,38\27rDEL<R!u+GuCL=Lcb%o7G)[och[GN_610^GX?dZ6IYMBa<rmrOlE[IuMfS.RAR!2Imfp
%:=*fI;Q>fA8l9?&efWW<GO&L8>NZQ-?Vae7goT%j^i.)a')NNDWN(NY6+gm&mkuee.4&,a7-H=m:fhI=f!!QcQsDO%0%,-Y+L5,p
%qU\C-lcqcq@0jiMmr\\n(s6D8<m)RL)*6WHl(n)9&F_E@oXIQl4p72oCFgQ9bVuF.'*':p5hITA@MhA$DCo/Q]-<'XTaV@%(V>TS
%8ssZmhc?Q`flsQ\*/[d.iiIP$2X3:r^`^T/rPl)E3f.uj;XE.*faJnO_d/jFN9V0?,DG8gGW2r"ko(i$$+kAM@EI&Ba*2AN&9sX-
%^2lt[QU1IEf\G\9fp6m..LKSYr+qk;\\lusgjqM]AE((@(uiB5RX@rt#U)VR)FFj"0gY6*r9.HgI;.30a[#GY_;p&HrVZqrLUp=h
%H@hh8ND[1(N,]la`F5I^;jKK-eS`(M)QPREHQna0Q#s?\RD'SpD69A3a!tdj]9Jcon0_Kmc]5mD]7sl0E#*$L/.?`9G64uUY-g*f
%69#AiH+ogBX+tob5aiaI8.RKfJ$hUrW8KT=USt4kmF1G7?#`Y"?Fu0=kC$Xj"'o2ZGgCVGCUi5FdTE_g"J'PfJR0JqI3$SkKZ(T+
%,mYQD#rC0)151GBHN=SfFDoG!:3ES0%9@rT3];T5;E*<U+6iqhl16A/#nkJpcmsh'@>eDJ]'2uY]JC$\lr0mkg)&#M7!>f,U21-&
%&(TeikT5#5"J$8\PosaT:GTiXmL^]N3l`B]*a[6Cfm0P[<ZJ@h<cp^191(TK#5Vdc?%i9"io4eiSMBZ,m$'D_#9;A.65/-<:u1"7
%:Puj%d!)PHgA%>"JY]eHnOFfim9g6?;Q$1=AbsP//s9'9gK5u66Gkpjj&g4&rOS(sL>.j.oS@@3\M7,6\PoP0%MRAa%cbTs-.*+M
%WoH5tA8n)]WR5C>"fn5\q[(O8<RAMXh7$udCao;#*JI;kLO&r(?#Ehf`gItRKQ@%C\82WtBXTD(0g0d3?DBUe%p0>uMeZ`A?"g4_
%316S=i\J("3SMTPFpg<#pDmo&Li'.$T\Q'1)$E::3LRpmqu\`:6]]:<(e<%f3u,`]Q4eSW"(,4f.cUW(-6u`EgP#>2k.lsQg'<To
%CK(RC#s-V[`['l,C'.M<Fk(=.8*2HL]$Z/t`m9D*Em-TV'ZKA=)*'#Yh`_IXiU!LFF'/AkW#Z*0M]hAsr,Fs"<-rb!MtqFq-Dqf^
%bjM;*DIolZE-Rnqi$NLl:>Er!kqmS=9"K>MVU:@2+&g\oD./;,#0(/nE,+6.J,GUV8$i.KA;C@sHm!U>O%8Vfo;&\LM%U3jcUBpb
%3O-PL'\d(sTqoC9J;j.a(q9G^#B)F;0l.RUibZST-UYC)\DS3/omVW(_J^r;+W.L*I+/i;DlHSGV^[?I'_,%ILeO\jUZ`E=^o7$3
%%+'tMj'bM[;i8Gg+2NE0eu]"1A=9ihWR["2XCOc?T-mV2aNVfq%Q0JsRDY9rS%`\q[9K^)./!aWid/Z6W43:2e8B4b@<bP'"?t$G
%ch<ifB)/I_X9\R`cN`:C4H..p-89B?5#d/i0H+5:DARjgCt>WJ?fT0?!:iCC6;0LA#.2L;>(!c[3]8LQJ=Nu>X]FMb\HGOt,;$m9
%7#!\0;J<ArNfcD,;&+u2<W.<R%+1!1e&7RYBgP^6nI2D7'nRW:9Sm\Je"q`e[&t^F1k'Um0_R6WPQ4C8j=dTdl(RJ"8D_cDTZ.*W
%Cg)aj(;YZ8.2.PQ*F5$@hc`Y%mfX@3@T4B"<1%+Yb1Gp8.)dp8Offul/';L=1<u#9786+.CWe@4%NeY`7,6bs@LSP2Q.8JF@Oa-B
%a`!#6`F)DZ2+5\$!/@Nf((=8:+hAC3VfjB%#Tlu!2%`ZFR>R>'_g+Tr861FCBaPR$A%.R2(eb@VLi%g+[!MN889sE3W%(Rm:Pm3R
%Ug@Vk'N:1m+kijXBujtX__V(%8J7I5@9TLma9S8V]@okjglB#)G%0X27bY*kR,HHOr,"=dRDA+X_<Iu2]eu0g`B,SMr\5)L6rbbd
%*a:gb9mr`_HR!1k5@QO2(an]cI30t($2Qt2e(8^D\48n]3XmH*XkD![YMk.@W,rpD`_&$#JB1L>V1[V?$(TY<)\9m>F/7hA<4H0o
%"G!>mR,8pf$LG<EbsmCBVVMT(nENGbljg0<9=2r@WVUP83Y3s'?ShMOb"8@`T=l6mpCOk6b!i_tf<K\I$tD\I((Q>@.QW$@3H%BP
%jIq;+iId?6A@fXK&MQ:*)#:HU*Q#0RBLT4jf]+DLli(a!oo1#Z=S.6;lqFoHG'T%?a1uR=$GT(B4[J/!.CYf0V=%[S<tO)sT`t8=
%P1-:=&QT&gn[$o_<d`*8"s-Lm0Glf*47Q:gaJ"a.qT\-+d'\X!m(%!hfj9Y3XVB?H2j6bEYOH>u=u*11P_l1pArB08m=b?E%""M(
%5f894ZDa;O]9/j[ONY?%"B9t7;60;P?lH16'>m+-[tJ"GS)o='g1R(C;<(5Bj8*FP(-(AgW>h@4p$1_";DgRd4`!J`%2o$Rg5Xfa
%l4<AZ@g?#R<Z7!FkGZGG7e[2QSKt"C)*Li7cq>"on^/P6:-%?ppGq>nXM;<MbRt[!9LHqC3)brrI(kEK@SKH43rSa+(X;R$!FJG.
%&Kp^"IHUE0V+.s"m!>8(efE;o'TOP#KJl()81eSIDRuo3^d/aFG8o-_Hnt&EWqOdX>(<NRs(7n`7X0OGEOI>?boGniG<J"ucrTA`
%a%P!iK*NK"[n`PXgap-CHXT)t=O1loGNr6KQ]4'[MKdX;+6KT"FQ^C0k'=eR\$>mDkNT_RCh)q__u8tGYO!#4`kJpX>Lkr3lf>hB
%0A!T.gRDQuO1)OK>+P'+9B.`XZb<nnV_*8/k[lK?^Y[`%Z@_+AouY['5+R.I3O%(@jZP0Yk)2kOmY@?NrnHV;ojN8#;fD)HJ1BBU
%eYg^+?86BS5L"YX4ZnF0ne^#<o:`MHGPqpDmH]h*1+0X)gX3(%rAHiXDd=/DDf9aGp!ruo;QmUC;n7EiLgJ'(?q9f)T249ZD7fLZ
%j!&j#c!@k%oGC$2500)`^$j][cQ8\K6i_<VpZ:s='0\SST&6[:hT;pIhsP-;fC(R6Lj,[f&!lb#/[(HJAc).@m`ITFgr_19%p$$?
%f"S;)k8q>dk(;HbVf,qt]@ng&9@rs<\luVr]AfZ0m;^6b=7:XpW.'"hajucL4^;p/Id1M<NZWX="BMri?X0#'N3i?Ro6.!.ITTs*
%ZG64fXabXpFkt*/$T$6an*6t*)gXJT3WGiF(+A?0%,=c[X)(aVO%[9!IK.F[qHAu_\VG=IiVhW]G&DNihJ$EC\+,m:q;%+W]r,bN
%q.4^7D<9f4EIR@4c24lQ"=QEU*o02lHur,Sf*s"Ue*QabZRuCQD.QMl5Mt5A5;$e9.,J,*d)KW:]^UVeTe<R.G(+YeU-D\N(:V5[
%Xjb-[m[m]6I-'%?pVngVn2kL[l-mM<OahQM6qh_!A8AOBmF<$4AdC-8GEB5o1=.QK+p?kG"G4Acj9U)9(:Dh>ZM?:#2gDcDQLhrg
%<mI5r^THWO*l%VZ.$Yk1cT:6-?MfLNn(qRbEnSA.`GtSJp@llPQ`s07H@KtT"T@7X4qu<7e[J]I?07fIs)r^SX+#+2DdLq[/rR8u
%7lo#dkuZJ"W\gIS^#SSSQ^NK>7k]erQ-)asNheP5!/a%NQ%$FClttuKU\*(+9&#g_h7K)=(Z!pjEdbl+-m>#KY'if8FUT11OM_<=
%(Htfa/rd&=cgk90e$_hgYk<.>Qj4LS['lE?qHs*p'dp0,>fdBiT4_5r*mk;!;+^FiD^TW"679=s>&A,*/M:DC9P:`7P7P[Ur@_@`
%8Xpu"n&Q#sb7@c,\LZk,]!/c4/k5C=HLSX?`oad-5sa<2mA`ANjR0/20!>U&GI.50.-#b1:Aaj+pq6;Y2Yl1"_YVus5E%2nFmq-k
%b@FBA/$!&oT)/9LhYZVIn5<>ahp-TC!gKTjBZ?(?5:A_O_rAgID6oV=58^FsGJ<(3a!9(6YOY,eOLO&IZ[VD0Cen5arcX9%bs23]
%HBeBZXjj\b`nP+fjQbQLR,d:C3'jULepM$C+0<'r1Ii6_%q4,R#?b\^mn/tmQ2JV=k75;^]OI(,Gl-p>[-4a2bKhPJEVo=K41+`h
%oB4]TC$*Z<\J+H++EMYqZ0$J8X`'>EMu3W/'6S!&d'g73bH5N!CI_`49`9aA7jXEOi*-oEX_[+5_X`oZVig0,]8?['giY7N^u0I1
%KD0M2F162kp:G^ucK`*sa3=)*(HHKcc[=R*HCdbsQ`k>D*pc&2l5t=bRH*.\'j[Z]B[`WN^>1D[4CFJSMYacqq733N>k_goSpl.]
%r(&KEf:V<hV+3uA`VV#Hr7TeY5@5Mujn-I'\9e2G.C?d?c:`A%oEghW60cP`rLE5c^&u-A+4?d'<I8^ka_NP2r'U!Is-A:EPmmT%
%begR3[e=b;h,Ek,9(nY+&0%5=IXPF+L&bc*?bR;VY'2W(TNlGS$`5Id`,*U=T>@^'<a>#5CdFCHcf!Eq9XG5%`$@<&&^(_0l.:ai
%_ZG4sPD*AA-XoC,SGr"I:4Q;QE:<pQ+ZNgN1XV":K`dT\E\3+kY!@4\l`V+7HpBXl#joTdLTbsTq.1pLX7A#U_'^@7oRb1Hg"6Z,
%/,eb@g*MIn/JH$?!4`Vap>ec/)l>-;';5n`V.Bk,n,>6]93rs.6CLG1/uemI-oRU2V`A^:.=r1-*2_YO^qtJ]5Y'JJiF9W:R6aCd
%OA_gf10'7s7*G'jipTNo^40'O@UpgFI"!KKOmo(lZcWj@#gG@''mUBFW=g21Lkl%:(`Pjp'&JHj(r.4=;ABCB)Z.YL)4P&4(!<;W
%(6K`VU&HS]+Y!?ULio?V!E46RKouZ/hdhLU)+B.="HhIjh9X,T3(h8%#)*4A0'A>u,VVK3ZDlK/cjG>S.Zu\tNFTtuk_8UXe;kG"
%X8ptB:[o"h;<Hs,b6BLrgjU*15\>%FW#j401r,_jmM3M)^Y^HrH'H%kK(BFI"siO/+hYs)DkGm5F.'(X3SQ0NYJ3;0=0%!:G5%("
%(CZsk-"(J0[!Fba!@(G4Qg60J3(,pb?2531i)k<(U%d>kqf(67?1j4AjBoY!SlJY1SctOW7fHfmpe1K(d^Zk0?Y5QYSW-]Sm;-S:
%CU)QBp$pk'O,u<8`G^8UPh/YOB:Uni>tK54m.k3VGZ8pj"G%pRH@A7$&M/D%%MW0u5R5_ObfBZcZ&-$SLcO<p0QOl&GlQu+#%:_k
%eAD4S2fgF*e,$rKhiLLQAT"#2&TXE)`tJ)!f24lre^EjJ;#p9$kun41mp9NRk)PWtbk;S<TRinXF=QoYnt9F()3G8'qC`MtkF_;u
%Zd(p?@HBWKHMc`tm-CLo?&IFF(H]2YjAjWbEmK"$6jiG5H'utHIWJ/1PS5Uh1nM<tCO7FsK/YGLk!;`=+c3*^YY:8b0iai,cD+2N
%G-X!gnmc%8dK_8;)'%^]Y*T2dZI`;_N@DcC[I-fUm^_eiDHa5',>dOY)j+-;4eu(6a0k;7(k29d0-<>=0XflonO7VLngFKa?!G3]
%'i@,RPiBUR^"h/93u\1lfpNP*cY5X(rA&`5^C#88iIr!rap+^t?aA;'P<70G;!,0F9"h)FX'VI`<-*C6>ML]U8r"(j`@mi*h('6Z
%]s#G=?h[[:f'Yd%kdffg(YRDqgP<ekqt_fDBCGdsk4Pe8[oaf8(J_`5;,Z%oTXi[fo0[AuQ*0Lr%YFDh\2:(m6WP;?[++$nG.W1q
%`nK'0I7>`'C<nfQ@Qp700)XM-K%E:=q`JZeZ5S&8[5XX<0g:!_P4:J<Y(mfgXRGCg#-J`m[bH"54>/m%=gPncSO,NK<b[)f3[tok
%<pj39Y3,H/q3T+pl0Hk))cs)\<UbbB2cte[T$6k`ilgrdr/:9DY=%]_EMr;jqh8c)RnBV6qO@#DCcIgf_CJAZ@l#U(p8Ke;-EbGt
%0W<*T^G[`ceP=Z:?`\a1(p!-hf/I8miWRgnUNp5(!Il^Zg!k4d05K'Q6hg#].^$EKlt0S<f.5(d-SJh,ns-f$-:MnLDZ8YS1G,5G
%IZFs"HLoG21t=8+$F%i;I:@*t?QTE&<6l'sB5?`V*TfM&7'XhQX#Jnu_V(9PNr]1@SaGn!0?^$s]*bAF%'Xf&#q4d$U(>+e>2fDL
%LMArW+VXj;M@RLWmp1NQmC/,9cCFdB>@o$,HoX/NK5bB8D9p0nTtICRb#ljdCG:I?*qG%P"9F+"DgUg'Rg8cFHM(e!IetagH2Zsr
%137QC>2397q<V^soh&Et@+`:XH(<dj\G$7RO<a#l[X.7!JmAX=KB8Xd\:7aG]D(63rW5WVXa0Zmnh6;1QD9O3KGTtJf,tk.h9ClT
%a&bW/[D8mcFUG11S."n3;(R5KCRo%OCqm[@m=n:&!N.U>38M:-;:[p&YK&7X]VFkCgt<;RK`7:[bkp9M/iK^??gg@T[t]`01&q7K
%ULCflFgY:05;tfU)V=*<,PP2`o:W;1B(0Bn)Vl<4!]OFkDH7-\bmuk&8R'L\gVqK#p$ST1f_$1&RfQ['f)ad7J&MH11[!RhmT&]B
%ZT\D`XVb/Pk@sh=7u41[*s&:K^FPGAQq^3UO\]2gSMPp0Bi*<GNq9(ArV9L.[V&+XZ!cXZH[!!Nq6cWkhS!i[Lg(+P`m`c+0Nhl$
%4(sparr0lH4`di)Ge(MUD5gsS!,QFr]=mY,cpDY`gs;6e[#G%XET':3IF(Jas',BZ$,cmPhIi9Y#ER@G$)*S\'`IhV!Ztfr[]>5,
%djL.n8Qnear9I&8,ie_k'N1Oa04&j/En++(qtsbTQhc#3b\^].4hq"bhp(qWY;=).A0-/o`8bC;<8>W?'o9XXhn-M6E>i)"H`d"0
%;I#4D-l=IqLgM8tLKEMUPtkM>s5F]/mF:jqX&%QBkM+lYCq^E_AV/G`FE#:Z2$h:4#MX/M:3t(D:Rr<8I/9eI^:j(%)[`qb]Ygod
%kAIPe':VRehL<cfHeCIT_\`b&efJ0%?bT-9#F7uBk6J]uo.QY0IdOe(NaQYarmD_sb4jf"on019T\R2o$Qe^36hYh)?NuF$/O9A\
%ni2,=dY<-G];R6[\D-iWF_@[ukN-mahNr-ZU=i;*d%V82afQ)&oPt,EX54S4(XL;k2>ZZK2>IEp?,c^0^/[&.^:qbY4C&::mdM5L
%,a[D;k_,.;dPAG";bTG@Tttu?&%92[0%!nj2jia&jV?*ZDk9;"[.>kjTP%!?`h-OTD`qsn;jC787e!DJ31^^qS[B!Rdl1;NA$<Xp
%NE/F8?\Z-'W*bG%a\WLj\%($<PjJZ+]q/Qpg\2D\4j:FVqaKG\qnl)`F"q)%E>bGK9<W8oE.VX,WjKs/rDaMYlcFc@Yq<Us>+7e1
%A'uH:,A:B0jc`/'1S,=gK3WiT$K_#!bWYRPcWf:<s0X2nH4C>4cMQuID2;*2Z23P#LDL;K^^#;5f%fZiP\GsP=U-lXgdaN7)b1k5
%(L(_[Rom41s7qP<XjpT^qc!GZ5CQouf<ua#&[igS_\Y)9;Lht&pNUWDSsDBOmWJ,:#N%$eJ@b0&O@T;)Q?c:ThfV+MVK8Y@/9j\2
%q]h3kc]@cJS_h#X5Bm1]rAOsKN`_+e(DZ:hr@Xm9nN74:2GX^]#7jmeL0rMep#F;+lM>TEo^V$k=M:(C]Cb@]<irm+#3c#d*qsGW
%b]KR?J'YeXpg;^j4RIOc,?m_f4^!6InfBTS=-'EV2RZ#T/%ZMAC6'AhQqhMQI<Si8GWVHKmd%'?'mR"_2Q+<hG;b)5#B`<0BLQ5'
%l1_cF0V=V_\EW?k]^s^NiZZD:IX#.E%RFK$gUu_RD6h%K!35iCs&^-Q<bb0MSF=%=%)M^YZ+,2gP()1JWJhX')Fg,L\ht`;-49Vm
%7]-I/.9l\;j0`a^c/k]iT8XQ.]t7npD`rLbj$]e@aM9enJuj*#WAnhRI"(ClcZ7?Q=!&r:3FOSrh;3HpI`]?P\TKjd$1AtH=Y)]a
%Ci=cO"6$3UH;ucP^6c\"J%,\AI*p(Vea1c+,_J64^"_tV]XsY_q81'"8*9SQ[Pc:Eb$ta5+5E'd?3C&cT&_PAkO-o)mo.b^qYa7l
%d\KCjMd+0+ON>dFKf83pA>+]Ol\M(knA4CRD>.q>N^j('T6'F?V7F"_])Q>I8O4hko#ZV`H?>OVXm7>rmlnC"!,oI%W;+D=?@ALV
%al:pu]dl3DnrT$4ou>^B28F:8>@NUt4C15Um_;oM1sRa9Tq,,Z/:RP,eB'"+a%0U+pq1MgY5QcN)STP['DK'S^Nu>/H/kJajR]Ra
%^[2'ap![$2'?U1F'HC.HlX[@SqGM1,O@o/f5283@5H6n"Dlp^&RE]tl]/\o)C0sZe7t&@I0S;dK=+D,<>G`,/j`B2`^3l![0OeG'
%^'j?QppaHfD19Ym/ppkQ(AqdPnE&KV)mDKkmtZ#alF].Ppe;Tp^#CE.R3ZWgo&<8cZWS\<.s?)cAYnZMG$hE_QEada/?iK/#Z?*N
%6Xfr,GF>j6c#lGXWaF=01FN"D,<YqorFP6H'?Hi5+T^?GisUST4aODZ^2a)ss1/"*Sg&(27$R\'&#p/2!#(EiUA6io[9Zq]n()NW
%I:7Y<]`*#V\GS,JAI^r+2&5,j.d3"SW+(d%(X>e`G%;gpDq*<%?p*tl6BuFk9_mUF"bobs`To<!L!nRkCRN2K4,:eYbF]6nLemg_
%G:k]U]'-fBfpBt>KBGbM`k+1mJ5&iSi?JVu0HDgR98rmO@"hBkOl+j%pGp&5.e5O,J$rP5?hH\c=4]^.:-++"e)rF>Rg6(mrgUdF
%qu5\k)dn#Q"o\([bfNkqMbsE1e*+k\r*X!*^;E:--lb@.\G9e44njB^._gYo993^.s&?_eSkcEfq1kR$IiA7&hl`U"%52;F2Z-un
%le_H0Ik:22Dn>t-DDs],=&OAS3d$g(GDCV<fUL]EC*U-6p6VK;hH=[]?Zm%%1QL0,9^jBT,id6!@hZ*:k@9S=ppSnmB+r;j+FVQ7
%r'O+gnCP:EJ,[j5%gVSSD-FA\VXWrSlhD6EY[#Gl&";T@RKjoScbR..nUk>]2Lb-Yc1Fs'8iR8Y&E`qFJ%^A.hk9@L9%Qu<WK3[Z
%<96ocGkC/@QER2lcSAGbVPg=TgTsh$Ct6tJkPNo3V-V!C;O6LD:#0p%aj^`4nGjV\L0AsF-3:GbGqKN5/CA4s2KZ=SNb2-Y/+&fQ
%N-280X2/9#bBJ65CSkt+2Rq;G/N76$G1uROK[4eh/iD<GN6ngGb[SE/<"?o/H5afXgoB\;%V&p.9rB<OLl*lJ((eq^:g>4S(g9&Q
%`ih=D\>,`8gsL1SPA^1#JRV`q.sh$*9e\Xo(YcED>p!ulZs[W9EsZG?m5gh6q"hSbMC,uGP@t-0gR?$^Nak.9.tlT?T]ht59lQ(r
%1_YD;Tb\3\(5RKC\3srHB1RQ!Y$oaTbstA,PceTm4;8Y"@5l4/TM/Ti9>a@3pX:Z$)<A\G]$$:OGT-f@#[/6I/>5'6a9;S*(d7u%
%"()Uha%>$Wk)3QSBhBT8/3pFqD*+u)UB-K_7*T^Kpg?-%5%luCkG1CiC`7(6O\(.d<?@54Rk.:/Ne"TsTO9G)o=7FK4@U,j22?hl
%QEtZDehoT3Z#7F!Y%`EFl37NpNFQf:CVqM(R39_6DHkn2)NKqH853&HQjtCe#Dp>Fa7:*-*B6GSU!`NM2[>T]L*D0WdppPd3`$X.
%9fjI@9GH=QLfC6aUi"0#R=Gc\*s,og=D#%9"*iJZl+2rV$Ug4&7^?u'OB^Ij2,M87hr?$o&;MUZ8:r3&<(I6Sa(9\;ee,Kj>Ca2Z
%RE.X&3!oe'L'Eh(H,:-VVT&,)fo-NN=p><U2#49tm=UHD$;DQl$OEH$"2i)[f-,;;ik"(ee5:GC[K%n,8$&bZ"uh+d'4^"-YD]["
%$1n4s5Wog>\6ouT"[l-'3PtlW5Z7Dag;CP(g"O4A,QR&"YWnd.*],lbL?27doP>R`Va9i!F@]oWeL)8fb4u5I&l,=i"u=R.AFKtP
%b"Q;A)4+Q95$Sg^:M,<J%-@sq"[h=n-=L&Neao/%fLgsN8TG[PBQ?eDSE&h=$$a<s4WkdTFT=N81J7tjmRof%e0L-.ZiNcP-uA+[
%/@8TX-ccT0!8.WEVOKaWMIE4cJH\.Z4+OGGP!i.tG[.'[VZZeZ4;LUBJ?5NCMqMpm@%1s4:NY:T,$:-37T<le"AKrY2OH>J'N<3[
%R`sEQ/s8Y^"\"$'QA'Ds*=[+bQE?k7>/L-1Ulq\X@)-#W.i8?F7XL/-RQs0>CH?:k*Hkf*!V"QS*F3i5K(NHA/Kc<`#EtXmhZ1u1
%KPNTBQfi$-N9G9/abs3lQK3^%Z;H`L#gc^i/=rM)L<UXpKDfFU%FB\%_iZ(,Xs[0P*0m'5ioab:"\0Ts6u@l45W*D/!U'T>6_j,P
%HMSIb(c'Aj^o2bme^.Jc'*TAA!OM[aoQ?76:ZEi)>!_S]eH@[;JWi@%!anPk$Od%!g^e#)k#o-sZ9"Fa_a(O(Caq_k;*)Od67=$?
%ULu<^F`@'<Yb2a'c#m/'>t]KDb<`>+JRJ;F#T80W[T"[5KQ-.j3KNNtiNRD*"MTW-%O?.%p2Ajo*GK\%QV9DCBG[3H2OU$'Da&.P
%LC2Lj^4cc[k^#pGH.[o[CO7<ai'(EDQ?C+G[?$D.^sDL@SAc+9)Q]?$3Xh=si[1m"kf"Zl&\aeq7l199@k.RqC4Kt)alWrNk!2E^
%07X)-+L=0G@kgr\"Un3\N+oN87XTd;TICd]OS;*GTLRppZ=Rec`7bbbGplpj5sArq?IEd$+Mje*EM\`kTX[jH9>UiXo5mVn(_C\U
%,[A\'MJn;ONAtL$%Tsu:nI-To1g)R\!jcQ5-9s+t1YjT`3',D,QRQS+2km!jJ412.W1hoQB>kVq*P=a7%F#\L->9\>&jQYQq?sbB
%dCUQ]Y]!]s?(c4!=[SbY5C%QeTo@VhX+cXf\nd`?**a0ZC>pAg!P&<-6Cab=&9s)8:j<Fcoat3I7oRYPe8=b/(0H$@Aof)8,$/X?
%[u%YIq(<<+@oh>t]ka@mVAX*4DNJTo-:sD]rkNKO$-\APRTs(@#_]Q61;pH]s09\m8_A"p"%,.ddWDas.jJAf;.oMPFNu"$2+GpT
%8-Y/10F>QBn-oSsCm%B*->'asQH5&=)dF[D(ntok["NPEGRUAJfW1dT+mj8((QrqHNI`7sJuteD5eH(!W6Oog,1V2tShE(k+m($T
%\1ZGre5?P=*JQg?7F<N4^8k1rL;=f&1>FPhJ5jSM))^=5^dpC5d(i(DoN9IN(lfi[.Pu>R#LNf!`X"Dce/NPOekOQpch!u:5n(\\
%**O@UG!q%Y-Bj#bC;Sb;:f5EQ#hZ_Jnq\b$+E60E!JDWe<h!&0'ZRp!\dpt/XT985YQkh(N,?/C_s"&gcsi`u-3jX]`+KS_C1_-+
%HPf8*Cqqe[d0e"]paA*=LiM'T@T7&6jb((u@LiS#,4)I()MF6*-T,3XoBB_=@QMq>Gb4Oh(<&LO5:d;$+A's7:F/o%VoQ"CKAFmF
%Z.rd/mg90[\UqU<L9)e3RVdu$^_*RJY!Or#0F>Pi#L&':=Mh=o@I_tTJ12<$655-2>-,6$Uj.no\uaXsINVqE/YV^;91aX?6pp8j
%`Z"2D^g5S<:HHLLZu/ccnIIu!Eg\0QWh:JqR;u^a_Nn>cLE^DS/L#KXMDu<2l"VVu$t0ODL*A6*S&ImP,+*7m^9*,6O<7ROa0eMf
%JmkGd1)Ys7V!`9W0-_&>H#<7D,1(#U*-fXt"IjdQFZ:$(d!0;O?SI()fUS%\?j&eeb9HBr"sXs<l>Br_!r3GdC9,/V,`%KB4&I[5
%<:D(6-A)oKcaIXI(]i?@pq'-P6J=bIWPJiM2&on]7\Il/Fh:G^#%c`MMai5/L/+,:d0R*G53],qLkdHf]4s1^;.2k]AJpIM(N_#?
%NSl"HAuX16LP7G6k_ho\?Q;grd0Nd2FN7=T&`fT8I7>'55UusANZ*nea<sp/P/06`Z_mK9,;-PDhc/VJ/@r*1%c\.3QVYf)nHcRl
%'Ocat$'lksZ4@$M1r)#]FX8.29`Y#-I/sY_\sfAu,gZ[.Z_I^McihqDmgD[j,iea4)N^V+eNFfC:dBV,L1g2`,ZI(Zc+\]2/[!*e
%PRL*eal0$c"sd1'F8>tO/5p#g:^KZ`^eI`:82/N#8;#EB"=m'8CT7CA=s)MmeUReo;+i5b@6ii2\p!9F%BeBQm*EP!K^&\p$sR7-
%Jn5?\L:S@d@!:g^C-7)"RVBh&&PRj`.a3V:#\LZLiF,"2@4=g4RO&%KCisPq%7m]P*fg`0lG"-rN-$k;I(N!5!\Fo&r+\?GPuir9
%'ZMA"1c7Vb;ETPA0eK.R*W\tk7FisK&N%28Tr[\hnD;dqrclB!Cfre@N^p<ei2b62dF!%3U(K.YQ?5V2NM&/hoKJ4'Yh\/??9B."
%lC[%7d0N(A3GL8-@O92OqgoCoA^?JR;[PujlWg_Y@5(%9R,TJN(a2$hY7_$act)@KT?peMJ7Plt)d&[Y%RV0l+m9\&1(d%P3fOA+
%LPa%^NZ(X8'0[7T7AMe%LXrE)kTaK6->J#Gg'Hi(Y&X+D>!8rkE8ab02,1=S(fFg_!GnGX'"Xb+*;X)8Sa'J,C,m3a(Ce[VM7$:q
%p<_esOV$HX*FBRM;'-Vnf:e'ML--/U5SIu:E%_819,Y/Zel!Nk-6gWP#=1_RZ:+N?o1dLJI*37I;t;F_8>_P6=&VgMru0JP\<;TZ
%'`kaTlXC%B'@@>d@??k$9N)?S0_TWL00pn*-p^00&>a1_WeD`rT8U2jA(X<]CiUMqfe^Nq%2"1GOoWs";1ad*7QYQ#2u!k#'sPho
%<'[)r$i:cK>BGa%EKe[U'/Dne6lV#M.:bh'Tm0uWpES6$j\$8tX2dN6U]go"[`p+3i1Asi;0G32`^=f9[<:so]WX]WGITT,JZ`+>
%K]=BbmSXXhE>Qug,u0OrWcLPmlEb_L\6"G[-<J5AY-i[bQG.Koj<$;`*ENs1ahV?8gn[7tL<_?&?n=Fr$*31ufDam/$UE]lrpAa#
%$l@i<S")Z'5!sC%)?hte\J6rf'5#QGKllPhV-oONMon8\+@6[V_O6"M)Pt-@LnL0U,/)E8PFM*=G_oH808t-o-=-\GL].Pl0@V"q
%"<q1M!0faXM7#R,9C[YnUEKb#K6NkL'WRt&F8ZqM4BUr2[q^X3$#2ogHF@6R^6fBhE?^/EJ`GLJ$]`M1!qN($Ce0)-%[5<tBIp#a
%]^;KS^.p(9QK=&$1T5iA#/^&MSRUIf/<mb,]%e(@9\;-h3?'LZmrGqsAe7MH9:<"qaaFL,Zr43V1`a,2AN;e_n)41Np3CW%,7=NY
%;sYJjAf@Po5]I-sY`eDCcA/0_+r/[N66g53>@iVJ8_D15h<T!#%$q42>l$>iHiY:u0NVs$GSjuBeUA;&\:q9.RQTFfNS5Y&Hgt,q
%-03hnL`.m)3F!OhME%alU$t3Nll5e_4)tLg9:`SNL+G\ed(T]'FPALGRJ1u^#c,MkCftUfNJ.?;b@r@*\n2:^i&S)@O%GT_>'6qA
%T_)p/-hQ,JE0O%Ja_;(RZ:)?\nd'NJS.PjDCpG$f#Vq\\fW/^qM[+G<V*D>pE8S\nKg0[55BQE@!U6$8MI*[i,/tO]+a7LF?l1a-
%;%-HC5Y#nq>(hc[\@NH"0,PanD[_77W_:]>SeA\DaN1d^0R1G+ajDXsG_$#lg\:Ss(GNn4mDXYnN%lm?\!"Q8GRrPOgqM^co.et'
%Q/Di?X`SaL13gV^i.2p[?>+u7EM[)2B80-PCT>2YpG/7`oKkA!NZ,QT(f=MO)SEl^QH9/`'"jlio?CD,K%/.1>n(,]34aQGn:FD(
%Ns.0XDFnT')SEic>pDt@_$dh?P7nBC]V)[_a\#%ZV-aH+^#3J#FG4R?n.IUX_+W8r"tuA,HFBNo+t=\6_$bQ"Mg6V$(YmHi=hJ;7
%iaG\VDP522Kssi8>mXhVVpqtshd-F=i2"0>:m.IS0A(#q*HVn+@$><9XqJEE0-Qc]oR_u$J8tl8UDM_?FmOAJK)<9p0s66a!1%7W
%Xr>%$_#[&-_\]\Y_I"hPMi6i/gredK,nc@pI#4<An0MfY_j;;KfKTgPOD)5c)=d2">JXf08h4b%)f?Kn@SZ7<q&(t0^0iIE,DHiF
%cuc.c/)^jC$&DSgpd0>tVIlgd$cn^9kqZeFn:asmpYEaV"m+3WD)H],86pN#Ku4]j^1-_g0-6_\1OM'-JI_rfYV:Aha(t2$V%UJ'
%/`C2214$dSI'+KJ?Bcc_HAPh#kU"g"nHO8dgJFXX4<3Q_KgC])#^FL\_i>k09]g:P[7(3O@?VVA7#c(VaLE/!TE?tArl>8n9Um>l
%OUIao1:10EJi6m.XhMl1KLj+r*4]H??+8A"`Ui01^)FN>WCb^-!A+I-5$"%.<s`-Q0\KW:i.A(kDFl#!`;pNWf*isE+cjXncR<h-
%7`4h^aG$1YN:JE<)00acW/7Z=17l>'KpneuKhBspSK,/Pq=>+][ChZKG:JZ>r*rM)dA5)g9T4p=c$HJ=`8836YbP5l<8e9KkWgl8
%M;&Ja#1S7'_/n-R7,)_.3B1bD,!/@`31\JCeg5GF>6Th0_r0C8[S`so2mgWeo@B3<d4l6T!Qg5d5t!FK=B((j\T2)Q_Ku]YM=-?]
%6c"G<9ecY`gkW;A#YFRU,i!,1(m2$Vk>HnCg)+^i\nIVMRHWa[7r"u9<D\b7)ql]kNX0+i*r-).8s$^;8!L8Qc/cPTkq!6gnehLA
%g`Ibm%&/FYYrsqVILIfejt+Np[<R<+7LQ;&:ijW+CfM%&()bg3j*fFW6!2uu;3to/kdI?+-Li$N\DhZZfL2'8H=B(8Ae&ZCl)9):
%E5kU-$4i63\=FlPcA"aoR40Z$GZmh*S27AX6b<et[/fGSgssU<DM)V&n;3GKg*kS0)m8ST#nNLJ$[lul(4OUQ678UQKhSE.1aWu`
%GXDoN>p>JO)r,YUITkC&o6G$AU7+jRM3TNK+JL1bMa=KXDPtTWgjh\SMd*\$\dSZcID]MHEP*/IiE-1@DpY%C*AqdPZ,sieAPLPf
%JVKFbPJU9.fkm1_-@r+oD9,`opPR3p1mnHkaAj1`FsF&SU('bCR)VOee,C,""bo!k9r.-=(fA>0[c)<8\Wp0[<XE$L.@ABOr6uiV
%jfT!D36Z)._8.s+&?%mBW+1`5%@q+@QAmI#IpaXSB;i(G#8Vu:%-m@`(JhmcAFDA\-A3`8DRc%U<%t'_7)Xi8eM01_RtKt%7?"&f
%H7l6-T(n!d4=[%XAE<RqT8)i;gcT0t0lceO>u`^YrIfbb?0rKgJ<FC$:Atf8,m=a^+5d9DdO$Gbj38`*]28h`4Sk_)k9BD$ls#sh
%.E@;T,)9/7W]*9jXRZ9;SS5FANb2*:'FVm'8t7tT$+2JNapIl"WAFsa2K),W0u^IBVZ!^A/[QG$Ic,B,NH]Y&'m%;G\OXK.7XOBs
%$tmD7#V6Fr8&M#oRuEu!BA[+`+GH3LH7IAfi^6&qZM4K6I55]OX-k6R%fWs`d"2Y:M*F[])m]oXd+%\J?+(l9V>($VoeDQ;>VnK"
%2j$Hm=tk)t7?@R5]uQV"f]nC4MS;N%F$)L%>Hnrc1uK9mX>2Ec';HEn-sZ[,Hj]=!]PR^eQ%@m7aslR8mV(%S/r%J+ZPYG.k\(jD
%i@3um@h!Dh=&IBY<;Ztj+Hd*8e.Y:O1C?Dld7V#;I-;/$2Gj&8^_1L'j';ejCIp9B]X<]2E9V="#'u<5i2nW3OFlp&;>]>?\E+&O
%+LLfO9um@UP80jke\W8_aJ@J&MV&JFb6'Bkc)<_\`6DknDsmQC2jT"!a?)fZn-0q6W+.?(4^Xf)_uk])*e<XOSULou$k.ce&J$rR
%D)r^IZ#mN@mXX5In>7d76o&^:O<5$'&3.p8(=r#G$1I<*VRP1ibR%i@Z4U/lY(j!6<X3P<_$M\W%r\3YK1>'L2\H@o2MFu?1=!dM
%:)oImI%1d*eSkd-bSq\^9^0VQf,$piHjm<&Rr"SHQZjI@U2:$1'BM]r#K(U]3Ze3<q+`dXZW@MnVEo+K^;2n0*bqg89,j>0Q]4U<
%(2-HMX+L*XIW=:XOO<[=_*f*c%b,!j=OFu+IHYS.O\/P!]4%asDF,+]D<,fO<R/38FL@8$,OX%/4\qFfkU`-Hnc<t[%4`91K;;T/
%&%()&OE73/(!EC*,@oGICL=O<WNCo-4%m/GALjSlncfoX1^n?<<8*,,nI@i0"kJeHDFI9%m72e]GA'CH2/EHN5WeUHCBS7ZLsdQB
%.1aBfAkO%E:c]J.lY(Q0<*`%n4YicDqP:&,V,?W>h7prD!a4Hn^g[F54Z'g#!m+IFDhE^.K*`7"C+O1UM0HsI$S"4Zdf^#P(0F0B
%d0G::?#:na?u<c"Q.?MfE!`@0J5RGCM^/e.]2WrqYh\HI!23CYTlL;s^aW]j6is/oD1p!*iMgf\>_r-G:`9D_+,Zd32'O%h+m*W(
%DDY$ZQ7:A)U]?Qs[E7A:OYRE3XTkBK_\,HkhMUJ^+94)h4AY/s*Ulg&_]kr(UD>*W7V5br$lb>/(q!4@7lF8H72;A4I^M`I6=c@`
%+jdWAX2#4snG+c/+Mf2r_P#ekFZsIF@_q%1L<Ztp?HIS'8kpuC1F5Y<@iJPT*=q3m"R&T@Mclh'S6AcK4l1E<n6SE4<gjRq$d8B,
%*#l<F_0-bDfu7LS;(8YXdD6ir\?6]q+2r4)&2Wa1iomNR7p/)oMBIaZZ02K[RaNk+CQJPXIqB&s4Ip'1?,h+2$/X]n,dm,r8<S/L
%MF7FH8;u-ie;2h1]>ih]Us_joiBTA7fMq?*Rts"%U>s1'IC9rt$-,@^ACKA&@4T;ZHugLf0*RACBi<M^>OhJCb_"=>Hr;Q7@Lug2
%5k66CV,8:Y.?fW&^9#".C`Y8978Lgs_jsBN'$^TB$FZ]@X&+ln[A*&m3%8qXY5#"ki4<cck*9!$gd9Dp0ELgUT7^jRJHp0D?4!*W
%FB$G,Pu^Mp*AX",Mli'7YXV?3$bP^3dRC8BSuDtopf*?`<@e@%/^+"q+-F`)1li^(!7^ST*0\Lp22=?%Me*s!b?Dd,qH,!u=[uaK
%%$<<o/Y9,n]#SP82Et_&3ZO-?mXRFr\.bYpiN3Kj`>U?JOYA[oaSnDHDm$-6c>8@5!q&.7/`7[h*pe="%EMG^5fr@J,sZCP>VVH?
%],Qo:&d4G=C@1r?LrDoJ8]L7HU@<d=YF#[<OW=fb`=LFnT2lF5hGbK@:l(@0^\n([(>T$a-:YI^ek(N_)LD,m<Pa.q:_gqH];eVA
%7)QcInOGcCs$Kg=;#l%sV(fsI[Q<N+ddg*R3"U3iRR8*9;&p+?#4N;6p!,@4mh?RB^aj8hHtW][3R'h9?X@FrqnO\=4i1g/A*kO,
%52Zpj!KX0-L_4FpZ!oQ.TbZeS?a@bBN;rEtB%*Z**WJEt<St6od46n$S4IVofm+M85"1UuJ>*E,h0Ke%@eh=D@hX8@d\NYjdQ*'P
%+'r#0LO^fLbD*O['1bALQUt-4P<JbreB5&e&]Hoa>^qIIE)cnq^!N`D11$r^):2_[^[K5VJ'NL81\MER+O#DBd($T\'->cliJ$[3
%;W)oi2dpqKp-VsZ,=+oP/7M,u6!-OF0Lq*VCWm(U:*X1"?mH.rdl`)=E:]<T/f]bS7$M8k`_<Rk'rC4PHM3slkXp/UGL/bj<]csr
%eBQj`deATsN"IpY]JWX@]8_KSLljA:2kceVru<DAjW"ti,%D3r`k41(lsYVt_hmrn$YUo!5VmnU"j1cqr,#Nu6!;5<\OXddiflGQ
%g;MQ1kLcn8(.E>fE+[>#=nqg07IJQY+]4O*ZH1mel1NDtHr\+KPaa<GCs7>!<B0;:C_r6"]>i,@i\EQ0\p/"fY]h&^EY0O'8@Hpd
%nad7J_KBt[coHE4ZIIa"WV/$@P^V;KHdXS:4A0BpN3.fWjOa[0`aQX9pOS]j!EE\tCT;F=2DSkW7`)lf?!cn@N1@j_$Zd^/(/ZF&
%>;O-6?A'uMoBa2/_N5/#p7!`]O?"j.4u^1BaB(d"01V!TCWu#5:'4cf^q^caIp,%hL3mEG7ir40@3Wi\HY]M3_i#.^0DF"8_CuAS
%gBr<[nFeQC9BhiS`ZjD/3bmAnCSnF^)_#h?,@u[u4"Leh2J\VR%u6l5&S7Z<0iRGt70pfqX-dNBCr2N_?gAuOaM*_XA"CP.R_2&:
%pOS]j!EE\tCT;F=2@pWl%"uI1l.DR.&Q^.E_kAJP6s42=bS5DK;8VgdG-@'nQ`]&D,`XT=E6[.>n@FOYjFOh"Ng_`[R]5Z07`&EK
%86CY^p[M"rQa%S^M^))b!4']&Pj.kfU3u(k1Oe2],iUe)]2qQrZ$,JG$SnWf&N`2gP;/`-Mmm:*Haf+j(GYKG^Q6`^XHEjpmJU-5
%!u)W2-r]91).a=765bg,njOBJh!;QH)OL`T>m5i4a0D[)&Eh56<@,#L$@At-/e]n"Ka@'pHmJcUZoQuq6W')(ZH1mkl#h!?<8i2#
%g^>C1`(#(*.MQB3[#2b[@n1M]/u#,<Mmm::Haf+i(GQPW'Ro@M,"L*MJDQ,M;4<<HeD?Xnp+R_UiS2(2H\tS'f(Tf6.iUL)d<7SQ
%30$_PJXDN"<Gb'<WcRA^:_lHXPgO4@aa!fKb.4PYcoHW:11f=2WV/$@Pi9W'h2>ga/3*&dZD7A?/<[O"A[cr[/0[iWUILZ\As@SM
%OYR_-:t>l,bK$5N:5BHCE@=Em;3op?1Y!OYPd1?t^3c:781Uq5A[5eiXN*)Q9Q_T!Ab&)k84QAnDp<CtDBi^F@\aFaoA`q"3tD%H
%/ej,)36(N84/UNFM3-7']O:.bZ=+M"jW^ba8F,&0[..e2)CNl60bFMfRY96kgX'd[.u5%`C.R<oO#=4?AH&i'"t3(W;3op?1Y!OY
%PVTajc^QX_KD-A:-sc/D82b]AN&VarLl:Jql/Jh5`n"qdbN+S'+eqUh<lp(@XaZ:e6W'/*ZHV0o.<`%lCuO=K-7c>3f#^t3*-e!8
%!NP_a8C%NM&dD<8$*BW4hJK&]"cR7@)PE^%,Ga8Q;ZnMS'iASd>;N]?<eRP8s5a.F.Di'5Uh_*8j0A+5ZFh:B?jG\53GNY5g;7@2
%VJakmkR&L<_EN(lFg,0'T/t7\7=_*h&S7rT2,imN7ObBf])?qG:2QYhZb@jq-p**##eJSn=k4J%_\U"<`Ta-*o(A#/%ut(r`.biY
%^.h_XQ_J#NHmodZDY2;$+X%Di`R0=2VGI&&Q:N(8l#E::C653mi"2:;NkM[S<2%K%]jbpX:mHFD5e!hT"XgC5(dXP%UFo)\\d6H\
%MB>-f7=L0Ui9F^TONIaRg3OC^)r7^7P><PT8g#:lXgTpl?8Dnta\1V9rYcq?-tiQVr<(JNr?L_nAOhufOm8&(]!]hMrh\h6F@%#\
%\`[(!-cD&3_K[c:Abm_C%Uc2"&0V?kJ^1t4rP%I)P9n?c:'a:4OIW>`:mbrQ?]JY!L%IuVC]0"%b&AO@%A5=D7thHrkdOqNl)On6
%;F!n<l@jHoC2N8WA4\7k7@9:Qh$Nn:iUf8*PH-"@&;<7dHX$'%^]dlT$Lp.g0*OYNlX9]0,(8hi^<"g^"/S_@mGJgu49-rI]#0;%
%),VNKN>+@ZnB=>XDJY+o3></6"QAeSM"@tg\9d)]]\q4j!mqCg#jTp3FqH'@MIcQtTAlou-b\me%`qNf[H\^#3;GH04W=.$5Ys5g
%%r.XtXZgk3+%5$j>@6%$ri64JFIaeD`"RR9E>$S;=V;->rn+>;X`DqrV_4Q9E_1<E3Y5MN5'p:uf%+.lb2s7W%sg6uBd`"pok/OA
%SSR^[1.toBhmoVP3#)VH39*#lee^Ud*mXm^%X`sB%aG&X.#)W$[?@j.X,$-,WC^FTi'@F'JPJra5V@;6hj^Tm;*ncA)u*EgYHm6!
%5W0_X-cR8PW0_U9IoHhfV7.#P1fL($,_8_Y3a]``3Z0tVQVAL39`617@S4BceS;kd7;Qh)K,35JA/UNf:P(Q5&554<TtgQ?T4CnJ
%&eb>h9<[-1q.kfYSYIalJ'h8DKcfqOD#8#?*`,+e1T;KO/=`P3W$$*'&-#\XJQPtHDEZ?bq5]"a:-+P+o%PG,#U7:aD%tap**fT=
%Loh[/Fo0(k<E)Ba]i!?,FJ9[<bc%pn6n]rKm*#Z_#CU+g7]*OQ#p$m*aCR"khgT:?hh.X*c?VkW*ZY,j&@P!kU;Kud%8eD`8<#'^
%RJ;EUHnb-=>(ij/+*Mm/<(-Yt;:3?E;2&pl*Wr0&c>jkkT[?*1)R\&V.cunA)d#P%CV(%W+NNb.$nS`[9+XRSbJ<I)[h*C.5go%2
%?m=TA@&cl`6oBF\Gmt1"A:7c"-=F3CL>6P:J1C$c/e^T4Oh#?C_qsHY6pi&8?/"le<Ilb9ZNo;UX>Pd/gWRN'`66(m([o:!I[GD>
%$r2g&>'Z,mU!ZIDE\FK.5fb)o;P%Ph-Ap9n:_s/AfV&s<OWjqIKi-nf14RTN`**P1FF+poMKg#,l>fu^C]#mX)Hl2Kkqk-rUQsbj
%ENTR5*/"Kc7Rk?CG.ihCagH>]_8s^`2BVOX6DotAK4ZFdRR>NjBk/^QARqZ2Zt.SZ@HKJRK]FB;`>lm)ctF^-5&:%IMF\W4rd?0\
%HR;*&=A?h0L<q26QNU_"\W"b(F5,*n%Z%^0N(cY;]i!?,FJ9[<bWJ@L5N#0)0JWg,Pos;RXqt&Vf6S;P_S>\ZA#Ng7>-p#3LQm5>
%Qp@!tfn40'elmaRlXaNLi9uY_-JjOBqsa0D(q-m=T#VP)2M)SJGe43Z+BQb#:$hb9OJ&<J_BlOq_nt>P?B/_nONYN-3B%Oe/O8+W
%ARH_?ARMN0kX5#kG^0`,?OZ1f`>"7X;E5J<K^cfaSlr.f<(jtX%&X;P7gh[H6p!:l$=+EZ&%[a&CCWqFQ\gQTQ\h+_hMGtE0_:Z6
%ii5;2M$`H:!iJ<^`)_PS%(F^&J@8G>Bk$QjUS8+P#9_/-B<i@pQrnT.NPo$/OE>j%R#1TbU8#e=`iSXHbAC_`nQr,I.HVC4?-L_-
%BH^[C[G;(FW_C/TLh(6`b[<g?IK-kuN#^F1O/[8TVB"SJ&)/l(IS\JCn1I\lRutn"i;ZnP\T[h(7bd^PB_1b:#q3!CDprI2W[kPm
%2,8ZC4$co<OeZUsEg`4VkI.(d*>!@?R?i[(H_[Z8kX7:WR!EQ7qZHD)T>i0b[#^6.gC),Z]"O%1-a:;Af(JuWNZG50kGY^/K.>5Z
%?hU.^Lp\!AlLqM;&b5Tb=V^DCoR1t09FR'@Fl"GlBXAB,S@$c117tjZ-:USIT@jSa!:uSk(=!V,S@oUs:!B5N)q!4<,i)cR-6cbC
%VRcmD;iMl2?5"h'c@&k5A'm\`:XDlCOk/Q\^>OSsDZ`@Ck).X>a22#"s/!eN?M9bULGe0)GBk'm89Yr<WSuF)]&&D$[KYht7/WUa
%V._Om39Hr#7"cuOiB;TdD81?l?].Mg*7G]D6'5S9#U@E%>P=R)LU@m?l1VJ9(%JX_dj9+1)F)G.[^@LupLRS:#5]NEk'8'tcEcm&
%$^)aPfkF`M/e:U^/ps[pH'jp`Q[RP>Ag6*#6dk@9@4L8N@A\qV@JW1#4=5et1#nk>'TG$!E,o5:Lf3bK-3g[,I9TfB9!ibD(iBK*
%Ne8h&ARY;&Ru"Lr5\'39^dPuq)eD`1+0+eIbA1M\f=L=,Z"P8Ej_%h[7dE'83EZ7S7M@7GL(<E>o@WR]FBOqnkiQ<U7>SOgXG[5Z
%]eRpP]23'W8flI(LjFD[00u@QTR=sEXc7't5-l&7s&6[KMgUKTNj^e]B..k1'KL$RT/5f;eq1_/\!M)kLmN+\0#>%sj+j&S\<&Ol
%hps)]Zk1C;>7W-UI*m'r5p"]@hp^34>iF61i,V!$oVKoK@/chPLpn-ClLlte&b.V2e&>&*1k(h&N=:M=^YSp$A;Wi,5rt.X%g_nc
%q)Y)IMRqf6NDYl6A,\e4>#`cVZ3YL(Qp'UjVQC#XHTb(s"[#N'1^ST/^(2lXM;\snP'E@]K$d'G^m5M3K/g3'gVcqUW8;S4=-&2Z
%(jMGHR)9WL9["Q"Ha;3BP&=&/;\;e=F'ZEle+dA60sS_U@4i3,1`?\K5*cSu\_b@?a<Apr1Q<,od[no)P)8pC)AD0e0mh3*6sD_q
%lLqM<&b5TbkIJ>dI32d%'5K"\Fj4A&7N92BGc_dHj?>f&nE+E1/4LZfa"0[dQd8f.TZb:?6+7GA/OItSARZkCmu<2WhMGtE0_:YK
%EgkM4_AJ4YK#!:jb[IIA<nfcm+m&U6%I=14)oiqQ"HIWCGsd_C_#-4!&8UZ`d-GCQ.c=lFW_"lu;>2F!2(taJC%i#_@'gI>ZF%O/
%+A<jN$jO9$0_g!iP\AtO!"4VU$F2(%R[66Pp>N,BLq5ao91?M;bB.aq16!AfJpG`TTUO1\+/YVi6'.c+3M\)Mes6^&7R^&Y6L#J/
%7%.%qN\%dmV[V5mjFWP0"AsJ]KYjZ0(soJ*`b<hrO\_gu:sgrM[]2Sa50e_>`--sbl^@.J:phgr6T!k7Ie=naM=R+t!7`JG)JDit
%9l?lQaA-2tPFV$fD3oYGK_AG7OerZ?-G!':7"V^8]XGFXNOFMT#+%n:oN'"$r%UCOd]'SjrF%>YR&ugbKi#@R`]]dOJ/NAGf@_q<
%[c>(i=bZ9)iH"3,%+/VS]tK1d4h:=DR`ak]FtE2/0LEt:r/J%@17AgQ,d5,[h'NY1@V>CsR7.;m8_D-@BrbMbgt)MML0mRi['[if
%XiP7q##sZ9VTp@?O-H+4p>[?T8J_,=8m/Zn]C8s1*QfC6&JpiaEB\I!os!2*D<fl*NmEc3%=T9hWhupoK5e;8b<[o*SNA&j]SO_#
%o#$nA,>V#H8VW>*D`>p^j-Z8@W2.Q@GiXF280%1fesUl)lBQ:'0]\t%;MJ+8%I$8PO@"e8#QC+W\$X&N'ND+[G3SC`F.[h8YnIIZ
%9m6MM8\M(#DXX+,#]>*Fh.&stj"Eu4PPM,%EfM[FDW\(99h7=ig4&KS4#$+T$%ik?64jliAFh>nCMF3j9reu>C+&-+aQT[*6*^?r
%_cQFO7V0OQOPE=&5">dPaR9h.)H\u,+4Q"3OsFZ.`]g80'd6tio*FQE6(H[CVWFMNIS_,<]Mhaq&K<`CBoFW-_dg?IU[6pl#)*dA
%q^?@*6,o1I1-)2SDp'Ug3OHM2aBB?t*qCC^j6<kc1390(h"%`r*0H?(H-&ftml>M%1J^ncD,"ZNFE0W[LQ"_job*[Up;Qkc3r5R.
%/o8b3aO_N(\5R,PP*\-3P>d\a(.QTsPf/a8;2pQW$X7>$IIf"F5WZQ[Pk9c(3!%05RY1FW1d?)X3,\ZP,U[.qjKps0R"&=0c1k91
%N2si3$_q2Z*1:9YU-ZYKI,k.LB2iLL4nPH*QUpJU7-*.a3Q_n*6]N^*k[:5206jLCGhZ(M7+b.JC1p&$+j]ecgAb!3!3nA#7A_p2
%7>W+WZSZ][oYC;`3;Teo&C(2t&pHbi=KF<OJ=9YP+bN0hUnlG@OS(!cA<Ufk#LcR.W5'"A([RnI"_,&6-eu>ZEJ^t2@efXr6K,UM
%fo3N[61;^?gNh>G+j,tI.-ZP;D^%Q,]U%f]XBlreW\llr.kB<iA20b.3NprA#RHY@BfETgF#$4Bm7]V_j<giH;st]!YbkUp.-_86
%0aHs$^rn1:h>Q@3)B]p.KTn2kqWTCZ6n*VI-B?,LcsK7@j`sNrb(uQFV]c\18#UK\!$]u[,W*K"MmnG>=)8X>[gN'R+t>)<XhOV=
%*^="p(G'[f:_:W3(YW&6eK/=eZ7<DB:<JIDOZb/2beM?K0(t@dkZj5uULC$W2<>0LT*J^Mhn^*Y#aCNjb^06KbFp&:JM+79k'B1t
%aGdjB,V"\!!DR_1P:uJI39YsH_&@*Cc3*,o7So?>``2!FBcnr4GS!?<&LZImo9i+c*"%?:k_*)SY1^^N'%S@-d7G0uX6Cc9CK*Ne
%`E-s6#@Rg*_AkDLZnWrP3^!a)!<ZbPMa#b_lbOIA@i#UY;%.Q/[5$;!@7BF4GAs`E?2-C\oqi,OhQ'p](=F"#3]AGol(BJ8XguU*
%m6R+rGS!pFATRhjH-,A4-k6Dh%!82F2-90R7OVIKR>Pn):h)5>Hr5VZ*@$Qr/kUHE]?@lL'Vl/1C?)FacJEE6bXIJT/X2L'#A'j)
%e]'mXJ:]HZ]$T#sX7e6BPZ_>:K/1@uY'j6'WN`h+?$nf2HLu)OPgVkH``dGSXkSI`:Ycm;lOm#/IbsVRGaNN%JhRD?d+4Ydp+W8+
%,tV-Z;O4i(qaoJ:R\%Rt33gB(a/n2qO>;?dNOS%2>IOiK-K7</2Sf3#4QCD>1hDFDAHk2,es]P20I)h,+mFjob&AFXn%An\1mN-e
%r1IM;YY\q.Us)-"bZZfn^"Z)GM\mn\29[]9cPJu/9K>AYp^-.N>ALCq_i.ItLOj)b0oH_h3@W,cZP]1N3QX<o"c&h6%[o0,QtpN/
%*e]r3#@USioDCUd&CsF?6U;Ii?"Rls21'Q[_GEpK5MHP[qCLl;0*eAlG0H$MV,Hn>.6&$;%%q@qXdRJkD5>BEN0JbS53Mp%j6^o?
%&YQq,JM+8ek))=7-t-De(7g+e-EQrVM3I-dO80Buh3%IkG&C,%bX!Jt>'%Q^gOh0nnK;X=DPciDHt&WcMuX#i%!82F2-90R7OcND
%[HOCp1Z>[VTWd$iK7Q5\\\W559'N!_A$*;ef'PbkM0MitOB^uI3KC_kBugbf@177OXYj2I@7D[2;mI/ZP^R4LcN^.S1-@K4-rj<n
%%>I59aoJG"hO<]qh+#Ol`(1ck7FF/FN`3<5N(\\Q0F#,8es`Z50Valk1?dD!FNfHb#,>Zh4?")t&L-BB_kAKTK;OX9juQ_U#A#7A
%6!9CF&`Mn$;LWL;!Yg;Bd"SpZ>d]>)V(>4+U4Y5N(p!%1/ZGUEC]g)Zk30jei(st?J?"PcAf?#o#@St;6!0HN8qF4*dVu*-3tqrV
%cj@&0S?Rbb+fl-p?$$];O:^M[/K:S)j4Fd^Ksm6O&]P6:N&bR1=_gd#FW2cN&L1kc4a$*[JBY\:3t>)K`B]bm)frt>?BhZ<l&/<R
%0G?Y)Mahon-XiE8[N:tY'SUYUPd/eEAaB%4bX=Q!X-.!Br#?Lhl*OrUNmSNeKsoQ;[>,X5o@T5Ckb--M$Ui,e-GpH*'i:q9@tk+(
%*E,tb<'PRCeE=0ME;:\bF\A$s^_^b)SXfm3n7A8NCot6S%kU"A4g8%#JT=4YJ\^+\K&BI.Uu4!JhgVu@:o>qneJK#5PYqlo@0++*
%SCF:,6s8(J$fCYt"n\//Ou-McTi<CjCEt+W9p)Ff$@O#`1J(T3Le]R7j3:TjWlADN?\*Yo`nCLhb;U6jP&8@FiGE%\=1O@t\M0&4
%e5Z'f*kFMak]us4,*d.HL,GrsS$IeDSpWAQ.aR_Qgn?--7&SW9dH4,:ml+/<IIDK*-0#CmA,TrNbPbc2,XO,CUF%mV(:I/PRi8+S
%ru#t'RknRcC@gQr<<gKXAh`7jG4&1k18:M'2ePa0^QC==0li#<Wj[q[;jOA0F:oa``_dE(Rks.IDY0HCIadJo8E5lIZ_+$j,m6l[
%74903QP=e-OGeCYUebf%[#Y)GBi.>I%2TU:CZ]^63VeW!UQYto1le$WhOH%hE203Pa4NPKiV7ZY<,^27[[-`&QP+YIUN_KfQk:']
%]K+Hpqi.D^N01K%dXLf_q=hVtUC.<3'#dOPDogFS=AcXBqrjPl+`=C4I*o?`SuWmLJ2?=rWV*4a!!OMVP][;WWP5(`8=.L:l%6fU
%m0?qd(qIX36;ErD7[c8KUcmMs3Uc`DkETu6#4AVf9cE"Gk:mf5AR;DXUcB,\Ml;a"bo(6PD]gXQ(e@#9ef+5Xq;0`E7*)3EeAV(C
%9Y#ot-*;P6UpP'g:kEjRUqu"OXeX\\pSu-V!u/_5W9E9dRF^55,gBnZUqpJT+7D(i..T5N&TVS*26jhT;srU6c[(pYF,ZoCBM\G-
%2lSDr418dDdThk#=bMBo#Klmrk#CZnD]gXQ(eC,8hVe]R'0`_t+RO\a)FmM<D_<G^EMK<Q8EJ]Ei"11"G-@C6NA/AWDGhmu4P%aW
%756#:qKR(Y[J(V3Eu?3:rS+0@;^.r)7Q]2G"*/)q26jhT;srU68V>(=^=UVdF<pHa2^caUmrGdn!4';!hAqJ_7TB$Mk"KRZ2j3;Y
%7aa%nJ<)q@J!QE!O?Na*Z5@71HX!B#6]<)^c9HsQ]gTk(1s]g4JJ&:"*/q^\2jK$#!!Oe^PdLhBWQLpl^fZ[Q0_V2%V.8c.9nh-r
%OA7"\dPtuNHZQ(>_i9gKY))i#8^=KbIKOJmkDG33kL,D'$W*'CU8![UAib:BOYW7W;V'cUE%INhX0C"odRSsq(e7;8DpEHOQr2#a
%#l*aEqM+=Y]l;uP_*0K^>oYl6FY'$`$=Y&)lP#^cX[Bjc1m]q[L18]rD?C+_rS260OH\h*Oljn+Bb*.Km#-\2B=H8c7<I>nB?)n\
%*=F5)SS(,%c2^;]+tBC6F%2Vm)b:>l#1>]"SD</N&I<XL2@dg)ER_r#k"N=@)^PpofC`H04)u_1Hf7B#KN+"d'*lk\ptUj*'JlJX
%O#L]THbY\"QSFY(34LgE]Q.lbfL^a$)FmM<DpFSo\C'>D*;keCiG;&fpZse725-PPNJ?r&F12aS+Qe6\5+t!e3qO@^$Shq7g.'Wa
%A)YA&76(c.+tee)-F:0mRQ\S;@kB%A2T@/Kqn6sCCdL4m)E<)Hk>ifm;9F]P2Vst'm/9Dn>fOie\(&=hF$tP<A)TNmQc;l9gRASn
%?/-iB#Ycc8-4M?:l!?>H4^jqP+j"je(<unK.3g>-=DOe?pDPK%#pX$=p1^%D%2;q^k?d2!>Sot*C2_C>H^N2b#/lfL8$Z$e@?9`E
%Q3o%9j'.+%&.Tp@+@m>'<eNdWNoNIkYa9^U%)N1V5*T=?j3PL7I\5AR"*.Na23GR4;sPSqfr@R_,m-#f#,73ObmZ!(QrMf@m%eb+
%D!9Up)MunJm\D6\PKG.EXjU92f/r\;3cu5HFd+:/6?=(c0""02I/[o#!)-!g*FNt"grc1sFldu3-C6c,<_oFW,$OU^&1)7]hgX=0
%.G?IrAbgN/_h7N8K/7NC`NLl-gJqI7+D:4Fj"_+PBYDnX$:De@hK<Pbf=)dMYM`_4A7sYUD7j3XoOGiXZ<iumoS&NAfNjhu61G\/
%eFOp@c*8-BX(Bk]C"&38_Fc%q$<kPP<26+`-!+/M98cZkSh4PJ*ubJ[,2&t+`^lYQbt?T-m%molL,QEu6A9b2"e^\^.!I@)g.]\]
%;aN+[CS)La$Z6rj'NaduFB*qEk0d2$1,Y(5m?g<PWMInLDM25d/5!=]m(Mh`^FdpCa%Q9R>A)-QE@l0PoQ<NgjO3,]f[`ZFAX3uF
%6)gBePQse$'tY_P\B8`F)%j_'.taJmGC"/h-#)o8>b#):oW@d&M?RX9/$,tA`6]#II$/JFft.MV<DPeleE,)GF>Qehq$UiXC2HNd
%s"US*8'p&j4)KmImV>GBLsudP,_+^2,$pjpj%3lm$c71ja"spCK8HX,#n!5;ab+-h,g*2\B568>W,iS@GEqNH[C(DOrX=n&DXGau
%p?Q7oqgAU+63Xh6`6b%#:%_U],:+;S@oR,916QemTfZ=ipgssQZIQDf*Qfmhb?g%mY;5!5o`]mpX9QVHh)nB:89Kn8jW\<qI+AQ/
%PMkcOkM^ZaA4m<GI^EW$fJZToERb[AHY?5qdh3WH[ACX_9?!ZNAV*N49aO?rLPChq7,U4RM*M&-Ak&(;qLS0X>kCbfLh19U&s9T%
%\HBR,h%EPA_k4<?I8FgE^/UdlWUtZ7V[g-Z$)S4ibA4+`oM:%Xq(l"dJ]&[0U+[O:O:$]CfNL\Af,pDM$sh%S;^c=:GS`[%M\e8?
%DcFY=-:6=>>56fg"I)8f]<mZX,hPs"n`7eicoKg#Z35rCjt?J/[1a8COApi^NBgrHNPAo^K7f)CG]OIkIXh.%Nfo@9-YgeK-`6IP
%c"gn3%,BHOAV*B5_6-<B5T!HO4-u^_4n*fnD=;r+=[A/436#!lbKfH?2\g*\6IbI8BHlL*NJ]LJ8Po6Bk-_RR6;R9_1dRn9crR;V
%&@mBtQ<)oP;f55qi<`(TXe!fgILIeQQ_!q^C+%S5KW*ACbXB8()\l)[&(C7rjtSXp"62TE1c%RQSUAdhP0DFLrp<3.1IK[]/GEt8
%.LIIl/,PEjB8PZKctR(jTUCYEk(rYU)OX4mH_[<mpCS+RR!FWAd/p^.,?$F$$2PP<697Hn:E-&gl[$lh<-P&VZe5TV]oLc>U!q0D
%K464bS3t`nBkAjTmu>V4=IC];0_8Hc1'R.$a;Bk*o$+[9P+!lMYt861NM.>']r*X8"Q96NpX'PT0TU2gkV=o?d*9LtM\,Q.=dd?U
%=d^`!S[cZe0s?R6%[_Se;`%YaMF(W=L1B4l:Lk#bp3%Am[SH4o1!3a"NaW[dZE`nl)Mtm<&aK$E0p1r\0iQ'g0SLT\?5l7HZLl@O
%JjqOF33ehePi:tV=W'D>q_OGpm&1poL-UT;c=?u^7V31BQ"XqFTjBAk'+'/,<)iBOK#/<[YEe'g,4F:/"H@#F.[00b1=ABl7YY.r
%cU<L@3SEV1(E#uGa(hU#ARsac2%saX6Kn+u16M)#7U%o3AZkI=bACa.+kr0-g4is#2\@1=XW)#%>k8fZ<&NL<U[q]^qYVl;0l\r[
%V[e=h'+5>NObDj:P(!o\1Dt[\<0ZoJ>iV$8gVO4dH,db=%!<eg?HQRjeE4?NrZjN;ao.gp7$aPE=6sJ7'e<$i"s#UF4NLP9RWD$r
%4cITqr4Ps)`]Go?+)YC86V<cXDDMq_)@GR2gBZ4fce`5GE!"UlcOnDnndB1[32WeE(g;JC40o1J:oq25;88HgM2[dlR53Vj;#0,5
%[C#B5?':'J,7l]#$4[;]4eROnSpaf]*$B/]K*UHULRhF/Vi@tfFP0fA:^tC4Mbn9"Q&0mTQ'iiQKrOt=nlcp6:OBdW9[IH"=joN&
%-o]7:*Dd_#VK,lY&gsi)=;_SXgGt`0FBP"pk[n;K7>UfRXA!1&]hqYH3sdBDgq6[BW2T71B7`T?6.OPl/h!(ab\&o/b0PHi@MJ's
%cYs.Jl7o^K?$6u)<)^'a,"2B9Q6nBdhP_j_SX@P12ijdeA.]mWI&:R2'r84Xog7BRj"`H%_ap:T4/)i?%**Go2cAJ5WA"CEL?9#8
%V0I%k8\_0sWJnSNb.;g>6/d`ia3IN4!3p(4SLGHcjb(Qjon"*>J":`e^Y;blK+'A+OlJ`^\DG5V($)a-n<d=7[hU(OoJA<<nFoC@
%'CWj2I>E0.9VVD;,82o&$1@E>0qGG("+be[qp8M]]<)Ke&'JBl\49fEG"A=MaQu4%&oB3EeE^[U,2m*CVMb*['Y]r[N=9srpH=on
%)QfeYg?b3N+OFfrA-V!kS%"M[S28[4a=(&!5=S\HbKRhUC+.Y<KW*eOc:#[qc:f,E`)M2qH0l"]Ac%n>"HA/!r_tmGFX3l.:M+\J
%q1QE+18of?Y44%F:gQ5TAJfOCR6PANilsoJqRm;3AGj-g.d+HZB0kL7RFf^q=d[r\B7`T?5utnV0.<rB*G1E"A_`IePaq-.bWs-0
%-4iI<.gqDpQ$?LFU/!?d'*3T$<&AS>1OU?S*[=&'QBeY[$q$eX%/)MATiOXrXfVQUA)*7cZIe0da=)B2R*68UN6E>bMpg0#6G8sK
%V@rmbW2S^("GJL@*[AQE7_-f"%#n:CE-H^R/^8:i=Q]g`^Ge4IBSVRiADK9.15.>2$P073=`Y1LISVau)1QRhFn%XhiJ3iQasnc4
%^9"DN)J(i@auWc[BSr$%qQ8,j>ZQrlnhd]NB@V%JAHH.LAe2JH=E>(KIP3br)1QR(PjqM#aqm"?SQ-@@]I,L(USWA:^k)65-s>&2
%BEa6ql>:5(JW]hSm0)8Q`rmU-AS1q/RYeEe+mS^*1(j$M7R\!Z_t8A5H-C*kDl;7-AS-f(3uQ,0TB6;'&Mp-e\%aT?WLc@^nW&IC
%%!k!I1PJR[o*<N8]X\;F^SdL!N5%;$b'5:"jboVKbj^D;n**Nn?mk.cQ$blsHVnBDE@6u(.ta"-+6ON7UA!UL5bZZPie(\hhHY`\
%m:g2_iU;b`.c,q0r%JfNN,ntD]moW,J11fT"XU*gZ5,]Oo*>d.;U7Rb/^am3fM'sc1@=f^[2!Eoo%QrSo7>>+M,LX7+=S/S^Xo^4
%[t>rtDd8u%qaE4X6:[1hDbXs%^2Kmgd$>q.NO-<T-'uR'S(f#6HW+RC!YKLrbuQDb8iid--$+qnS$?10QR.'?Z7Ze9))985fZn2'
%&`tN^/(o752s]Yr"B/*!\X/9:A;8"3#>2usVXQN6(/qD0Sn^-N6di2b)J)M%h_&W^E1&*Q;giKH2l15;:q^ORL2!20UQiX`iB^F'
%h(bpI1cn:S>>&rM3IP\5,d"mA9tk>nP[CS.;g-L@gtn=@]XKM8AT^Q.@gMhdpU.\h?+&l`.fU]R#=ER%S&mRKLM]T'Rn$;SH(MG=
%Ks:ObO1oN9eL`(mItMb?_e:ZmDHK_#WD#n@hrKr82spmZ0Re4#AMClrRsY[k<$[+m`b:I3hI&GAr]%!Va<"TH"PF;H]D&2%M>B"K
%h]NRs-hdLFJ@2t7#1m0=21A/&,%3;D"?G!_s)qQ)p57=l^Y-:Ze[Dk!Or3)P7=MlDSUpen=4fd;"b"K#J&mh^3CtZVZ'I(IZA9^b
%<cAs2oVXipjVX5E(1Xb1p1o'JKnHE]=%e+b8SqY`TkA-T.%i'#>]IGJQ0ftk[7FSeH6'jGV9=MKa)\!]F%Xl-iW9C)Y:_S$HS0B,
%?'`;*Rj%9*OKD+LHP01Rh(hU1%dg](*L&Z%5M*m*0Q`;T[gYi&:8aF]J%Mur8ji4^eV2)5>^tfd"iF@"fr!;4a?H1i/et\)XT^Jb
%,eIc-Mn8PGqmt>@^0e0j;\E:>hQHt.<t7l[-=&0)2l4%%hO7)q:dEq8/.&mC]?u)V);!s5jHOGOihLLJ_i9=:=WZ',DVn^<^YR@[
%#?n*[>\H/&8/71^!^W#YI=cG.KN>K]7,AhcJ7V(%UQSN*G$?.saW1.B::r,JZN,he2)Fc1f:RWk3(]4=q<YO_g_p@g"bB2"_Htra
%$T.LOq#rQ]DK^3XAi<L`<dn7)0l3g'"Ft/):#I>)5NANB>dAV`=dFr1GGqi.#c(8`Ub&Z1co#Cq2`]"GL5eUg.Ws`XIRL,PMql)r
%\"c8I=bVU\Q21rnC\$]:oT]Lb2!L^V8[q'7lMAt8VV"L4FQT4RT"]:hks#(#]^X@*&[tXf#pFUM8>!&dg2-W?RQCIl=`^rOU>M\u
%"_Z[^\bh3g^T"efJS&++O-$ng$5At5#Qlq)1^@B*_TSB+DF44\3^6["iL=r]9pf03%"9Ro1s+*O7]U,Y,ETQ?[Ut1F;!*Fo3^F!m
%I<J8K3NTWB28B&(HPPc-PYf_67a'@6GOk?^K[/WA_kAJP6q(j/c?+E#;9Gp,A.H`n:bcn.YQ1hiZ>X13$6@uKKNq,>9c\/tPdYHS
%AM.De9ETEt?gfkt@<!\&'2anGRkrkAAq$ho_rT'=TF>Mmh.bf+l7Z6d5=4<k^n0lCq['6h&J]_'F/!gDf1ClU7af"r-)GXD7b(iA
%6(10'["o''hOH%hE205f4L+:C1ce]b8AdjO:=A48-^#5g-d>L5c'pN;]\c8KbNP`F4'!g'pbaN=.O9F%'SVCB88YI4eLkHu12MG_
%Joo/Va_]asAHXLUUKoief`KEh8'%NKeC=$N9PNrS;W]`(aq/dKfC<nhd*"p,%Rk(U.UmaGVVK)6Ntls`5Q?p(gt(',0%+]W\^E2L
%\DWlIk7KEl*E6T:>H2`-1b][J%#fVuY[T6UF-Q9&B."0X@3R0fHZQ(;6]<dT:\*4X`_cReQ^]`#*QgmafWEbJoH#.ldo"T7Rkq1[
%haj3Z(eMWe=!#E.naUDj9=Y^kU,3GsZ+W.rmbpW,6Nl8E2eh/5n$TH>+&dK5^T!rP51]'61+<<?l?IBIZum<:EsX(&)1e[Ppb`PJ
%l9+o^-rLgXU!/u^arY/JZ8kd*n6S"m&!HA*)&6Uolf8Hr')U`@6I)!oW_[;'[1<->dXmF/Zk'9]QK.-A?75^8`1\SR6q(p1cBN[c
%;:6p9XBq\;*:2J(-AjP%F0@<<b&Hc+%`lV2eF`:n9Pa)UP3+MhdL[%_:=?'Di^oS+;4<;uf\W,IpMf_6ocAF)p)8$n?1*Df/.&?M
%G&crpQOqaF!L];U<II2TWcdMaO;;@8UlG>n8c[PJpHJ<i!K+`^<2?tR9XTWnV6&_3mTqek)E[gZU![<D4PN:]k-5+Y`+:dPFRce5
%A+)8FjT7oc:^d$QBV8+<4uXA\MS_b\K_FP%Z\KB/$qFdk?8h%aCA"&Nm'+cp"rD5@3Y.#SBqQp8D4/Q'Bk5EkN/Z_WE?/gASOq+:
%bm[D_-DD]k2]"<_L_7Y@f(6'=Rb9&TO6ab%at\irU[^XHT,Wal1,/m2qLn!1ld0Pm/]\c"qu5D"[6s^LG$+!22$4PhM5Z6tc'`S_
%2bI8kh7uArc77S^C4>AKk>(&ig,sQt#NT>TCAN0rVR?.;8TPaoBaohr-Y]NkI;UnD'W$YbM!`HTEXt*$)@l&(Xi?-FH`;FUL8#)j
%*NS<-NP1BQo70NYJ>tf,3Rc^ZNMO+DOYf*q4''UdPS!"Y,=%BuL^IkQS<<Mao4)nbf#[Tcq4VruH'<tG<^'R/p3jrHEib]7jJ4eN
%Uj7$]Fm(cG(1[iL28j8P5=T>[4r2BC79Lfa6>L).fY`U[7Rb&[27"G-WB>jmdd#V"1t9-#[i#G3698l8G]TagpDXE[)'`SIcD_i)
%++SYja%@#<-r!)uCi@U`HaqHB&KDh;HeGLX-YuHMZ<=HI3Y+kIW7p7J]cW>m),Sigc-:=5JUVCL=3_pu+K_AGol0su,ogMY<mC\6
%Bd,$9HZQ(>_p-NB/H6:]5Q7-E6@?tt.Ob2@)[]34'Ehl$)_++s5*.]PTs?f[Lhh`M5>"`ZU/:2;/WpL`QR#?r6EZY9!a6-<]#D.h
%j'o,9au1M/aE;GGTo=Mh:"RqQfCjfO6=rH0N=RFEDuVoq^e"iF9Z1dph1,B9l'[Rb.se?@/O7Aiho9%'l$KYmILlBV,S%iY!QM/K
%^<QH"Kq)c4i"TFN;:=W!q<dJK+b*GL&-597o!>RlNMCkFL%$GMd,JO*`m.6;h_^3=`nk_(Kfc(.M>@)PC%hjiFJRF7_@S<$f$P/m
%Ku#'+8&!ORq@Jo*`=VFN`J(qa.&`rYGI[[uB.WE0QoF<cd%[dA1?/19aN/1)LBJ<=ig"H7&>MH96m3k"KZb=24#IkK9I/DE+n5&X
%-j(_]K63CESEt0@4VlpbAkF#<nWaR?/%>q`A4d/r:uND_aMJ0Ehs;5:)YP&Z;Lm,RCo(U*W?2]>.4%7S^M#$\:2+,b)8<lc?Q7-H
%REp_p+62+a:3qcg2i-@56%tVEgIiu;E+bW<4PofH>6otQP3hhca#3l&.WdM31N!/LU&XDYo\Y4nhN@Yk>teT[s0LuSWMC,Dp]`M7
%6ITjg"/4-bd[2AcKOQhrJaJVUlcpqh&O4Vg%[5;_\dtV+4EVaES,.W[@.4<<,YtKsnB`XXWn`5eNe8W+SeIs:Ju`kRr$8+43"Zaf
%\-]qSG$]2u#4ntd1&)QRn4Jd=`ol(mJWs/2L_.Z,B(^b$AajM2M7qi:#$15JDdJ=9GIMbhk/WB0<RngO1uU%+SC+W3VgVM,VcLZI
%$%7_Mb3R*Li%gX+BM,!0>qn/K$H,NO9%ILfKoCg-3e8hX]O,"7=b%M90+Sjg6Df-T90rAGa0:FlT/A.QM0"@)c`T!1)7K,$qP/+M
%l8-iCRrRt^0Gia&N39C0/oEbeU:Mn=_B*NQ/dB'+o?-,#OM=*DC97j*1#Xo6TumNckn#K,5:`MPnUQqL-T9OZKaSS-7=23BrQXqN
%=_'Vni'="i(^_8XTNQp`*&9:qeV5^!b"+.p&]H_W4Ch.+Mt2=FL9VDo]'tuZIMM_<7Jki_`s:kJ`Z%V92=9QbcWMV-&nugSl=P_J
%*c%?&Mkt7ZoptXQNmlncfADsF3Tc547ZQ-c`2/NJA0uOTA/nOn/s3n9&l[kJ$6=44JK[E5X%Zqb]Ke,TAV#-:`smU6:Cc&G/L_cl
%i[=tA?+tLnhE=du8Xj'd\OkJQ2_JP"W!tU%`OB8-1q\Yuqu5@"+g#"c?=\EbHnRVL,oaCBI:VVBgcui26i7Il:f9H(<XqPkk19h:
%ehh@rR`Rp&CDj4^^0YE;\rt.sR%&,PK/c=t%1(s@bN:`+rVpL`:<";7SSm$_K5To,+`&C;:!J/K*lJ,=D=aqJK]FYTli@B+]$rZ9
%?JbeY^V@;ZO*+Afj\"k1i"lJ#Ia#?q)!IAj7^s>X,WDQGbX/9d=qU7.G2C)S#P)YA/BN"\oDe$QIW%e*C+E0^d;L%WX5Tu=s)pR3
%QUQ:!m8#tg<R^[gL=t]5IAjeHQ1ugD2^6,R9ulCBI?X]`AAuBtg?AGR[a:.Kq]D5C9*BekcA[?nXpbih"%m&=SZ%``P1l(Y^es[U
%5g"&ugXifK>N&j=`-4`NjtTNiQ`*\gdZ[4GD9=!e'>JY]g[c,l9@aror+;f,dln5hn!)+sF9O7Qh!m;+U^;*QJ?WB_M8(nf`QX/i
%QtU@h9#dF[]0C)t=!:K8HeT=4caO-VhEK,($biqJ_+-Y87luMX]9phFnuWk0$Q&Y=k\jdWHD`?9HuKQi41O5G*h``VXnl6l.k^a0
%F,TXH`dS(8M1N*k7L6W.;'L*qlf^Y>d7Fjlabd6A$+^Xo&kJ=uhJ(T=.*\9Pd5RccC)mmI`n&K<7rhd'5DCLt;l8FnA#k^4r:.)Q
%K+f<^PR$oWi1%T0KFUp]PT6o(=4<Z!X:&MXq?eMAR.qFl;*P)dk/*gJpA8nNQ09atH_WJ89T!jNArLM;q9`?&-E;"DRp7^j<g94G
%)V*-&jH_5>e+\o_EsXKDMQ)Ou`U:8EM..c$8K-S0DCD/]VgakI7*HX4:L9'1ZSLtAIr?$XCL\IDIM#F];&Fk?I+5?6a)f="a:#I8
%((oj(LOZ::UctNIM037l5.oOi?GaAT^\ljd0Z#7[lFWq.rhoea@tI71;XQ7O1m1HQL\$$/[\<L<'D*`/*f_H")G,<D-OA1=7'0%U
%cnQsJSC-W(3RcFD2(Bg02(GJ]NJ]1_0I)A&5tHCTkBTq%B[dpSRo1mf%o1Oid=IhCo;2pK`TaVe.:m%a1]j54flKoV[2'qNp7tAN
%r4PtT`VM9B+(glq3L9Yod?md3XlXn];)D2*39VVSaM_ER#mOhBI?f.iOJ@8c@q5pbSY@qBSKhXj3ORG,6dk?Z1*Y^818^!&@1#6C
%]Z,m9S$[(U"H>HPKFlRO5RDWs-Y;cpfb12':_Z[],uQX?jh20,;WsdtT/3%O22A!^M_Yn7pI7RfUWaF$R!C)I*A^)1Ss1ZBFe8@V
%h$<S#)(nLdH_:]F\gZl8DE&0Li/Y;X.oYZ-barm)X>Pd/gQOB-nYFBOYs(k?LRFL7L>D(-.2+Q'N'kmK7?hZ4O-LIR9t2UpJ#LFX
%kQ?rZl^0CA3Z59e>\.cr&aAp39E`!61JP`ZLq4*M04B\NDdS/()Dpl$n[a6HnoiF2(S!t`Gml"b.5oD^J-uc+hmt?G*IR[(VQmTG
%+mSbH9L\lmd='Z6.Jp@?d+&AV6(N*H)E"BKq8ZZh3c$8$9/:7lU!1VI(ht8=@nH)Z/Mmt?;s5LNSo]mn22A!^M_Gb5,0Y/65"spj
%R?o[c$b[r%2!Rb[Y1<cAQL;/dj.`Y?2MNH>ES;7IU?=7h.<JI"cah?P>(ib`.ugK`pj8d1MtLKc5Kl6S[>ep:pFN1Td(/,`IN>as
%qdc)kT#FNo%6%K=ASoQn<9RkA]=2d]PmSOrq/`F>\)rcoHW$^bSs6c<eqY^P0_81#:_*5+.i"%)P>C;STUbbi<]9OE]%9Q=F[PM5
%li]b&`\Fb+SWqfKY-YMO+mScq9LSfl;:3AZ0SLT\?HR5L0chhY2!Rd)0#q_R1*>gePeeSOnuE"[nuC21=[g\K5NWK1%a+]0f@a>K
%8@lJ_'+ln?9GaJJ'RlEp./W)I#Z*]6;`*]C(ClZ?A:CT)\sLTt.n`GL(sm1R/a)g/[GLKM26YBKQp#(3HYX*_[jPZ8ilRRe&dCeS
%I<^#DlU^Gho>P*:(eK+q#rVGN^%eUt'B/[T^E(U6@Aq/qN_rg?jNF-9Krq`g;7@?K,3$S.l!f(>^,IVs?-'P*+2.l;)C*eKa9RAh
%jk4Rh&k;toKU%OKVoL@^6"RN8X]4L,bb$\N]eq0']"J@_&MM!pQS9h^nAEI;=i!TI-ZG+"#T@iWE30rn<:ddH.k&T)n"oSB9<6*2
%M7WcYkQo$2F>@IS3FgWDKW*Xh0p1u"#"93k_UO!Y@D_5A^2q7G"DIBS'$slR%4Jlk7SRoR9h?uDb$7&F^r9(Zh)?]C-3a;1SPG^(
%:',j9_gG7A\b7^dA(d6"Y!/>LM'(MNPo!:8E7^k\_HW,?)\BTYmTR[G=m,#rDE$gS+__,9Lt*b`lY5WU5JiAVBJu&rZ(ut-*"(mV
%Nf#CsJ`^.iD,*\ejbtF@V/"b\>Y([WinA+bB"(EqaYii!ST9(ongWtpprL5o[^.QJ-R\V\!STJnP+Vs./0a([5#\+fOZ([WEmXrP
%lI'',#(&U<JNCbIZKi$bN&R9$`tZGDhe\A.;TbOQGJq!A>(]b;dqDQ%,l):K=\!\_7FjC%>Do)9DZe+N[IE]+EiB2TRTA+5R!ORP
%V:E^iVWR$5AQ=;JI!+HNNN*u'[<rq]^G<>Y/@j`7/3J%!-6iY#n7@r)6_"6B;<b'mpUVcf`^\iD<;LJ&>0kF<@.8$'P>+\H5da//
%hn%Xs!HLl-C?l7+&>h%\,+KX6PuX'LPSuj2WitlVeI=E^I9O.'!Qp*2K+hboMoDghdr.EPqU<cZ/#*u9V/Z=ef'`C`4U@L(_+UtG
%C]%DHJ7_*P$_rXGTl_';3hS==n3P$pUt]2)W&i3:!I_o.D`]_i!#f";U`l_a!4K<.nr6<HDSW%9KC`_poMreqF"'#nM<dlgqe8IW
%NO)iPAKg)]&C=&GG3#__"LfBd-k1X.k9A7"YTX>C(deO57N<44@cAKGaO*Hu-V5m7dD4_?VKM0n'S?S#(Va--$1_js+YTks^I_lS
%k9b>#WU/OM[!$j/GL&OCQBD,XkY9.>91sqV^>$eV\O<_;bV4S$ee6+5-!oi8fk'tq,7XTg:.71aNPuhmon2sNI.VR!S?/"=G7iGg
%NViDh;*\XF_uZJV5clDrZ1fh'*#poE:iY32I1/??c:Z\;8C(IsGB`_J)R.H)ke]e%cqIKC(AGD0B"u@,ON_U<8*/0a8.=&$=((bP
%r^`m4K(huSM-p5M[ptf+f'6G\QopT=ffGA!s7]GhWlW3rYaTY\WGo?MPa>,`T=J!Gh%CM0WcYdOi$C%.9GX&=U7A#DU[rB_.#m<d
%or_u`L4(8Kj%Bc&WVa1ihD%LP]3LgbE*^b+0+&uTj1@pWEt`34q)6H#F%EmU2K9r#[>Rs`X:%u$iC,,m/;\I^>i9&_%snq.W.BOc
%#"?NFoR38B6oiq:dMF!YZEm4HhlFd^buWi:+Gh#0<0R5:GPUVo]f3&>4gEe(>N+)3iX+?Qo#3(O.PUUb](VUo(,V.t+7;qV(0:i:
%.HI%bQAcCa?i4(k28o2=3JjE?mhV]BYp:HqY2/g"8MP;B/\ID%+96G'ktQW<pCLWFaYmq<F"6X#\Nti.HBA+7Nf4lFJ98'23nlJE
%hPhhm.!p&N-0akG%(.hNohUPX/qMU!0CgK/-)W]U^Fk8TGF+lWZHOY7C.u8TRtK$F#VER`"#LZedjX&]2`&%7jf(0.c:7[/m#%<Y
%2G.[mb`TKE92/_Pn.@K)Daa,@_:]?MI_/*!/6n:S&'u)$O;2oCmp>#,"844N%%3Pai'fII6W4icf\4bLV\JiZ2lQE'D+5gAW!S6O
%h%&G:&^l@:(7g]ha`h_iMbV!?![9!Wl('3G29j[_\*B0ZZ;8S<BkEo&_VR&af<tit[1rQg"][9]\VSl#BYnK'QP[1gAKArN7Q3P<
%p:/i6$\:0_,?:5ae,C+'I#B=H?Ut^0XklBmdg%'h0"8i]X`$QZdSXS=UosBlK-YjMMM=^SN+E'P$CpW(`EmUcC8GPkX$=jum/W!U
%3t'7M@1Ueid<QNDgpTB3$A3>,^_GN!"aq?>qtpaOBJJ9Ec(uEC:DrbO3DMOK3n>$qc5$V&/OEJG2ln,GipVka0"/!_^,IW)6")-E
%XgU9o_shpmeR!FQN(g7GV07MKZ[`["T4G4=9GI7[Vq3`BI1/>/:j!P5(Ff[kR[a,*S,(K>[Sat91W,socmV=t5<!an7tt3Q6'P%1
%iYr5](VO'%XirD?'ZjPs,%#8Wm:^F%iP@X^cAH\LJ)>pbR@[WIkn)5.N9m^4X_Ai>8[7V.RT0K@dHoPun3kkR2!n37;5158B+iYa
%,@Zg/T7[52-.B$ABn+,mpB,MLe<SP&LH>'=SS(1oP"NiHkd(@tLKf8_MLFQp0noTq0q=0-$OZNSL2h:&,D6%sg%_^&fk/<X'>ZE1
%YFf$4V*`jcFMU6$D`QCB081Z=2_0<^i&ds]cr!\U<eIr6e%+gm_#bq$,.'$&m?S&si:E/IeT5=)`!1YCi<$PTF2.KZV=/dq++\rj
%np/,Zl2\GoIdk,Ye:)aZI"G5)&nBEuA#,;&_CU[JHlW.'kdQN&JC4kZ[*c-idO_/L=7*fSjDS@k"sn+4JT1$C9@ZkJhf#F.PNJHG
%rtY-ar3V_<UQX5j'r!2hWQTtLps9%['5Fsj\#IJ7'e5&0q>.V^FlrntZts9$'3"<t4_S%?13T'@V'aF]3d)/;dY2J+DB4mLhR@!;
%dB0=g&YPn#F_O=d*'n$ihfrRePi)16K]^u,GEV"r%Er0HoIM\`)_`S0.u^3BNVKB-E@a/T_qOPu+n2_bI3V/5]^p+fPVMd$T!\or
%.uZXSbDEXhOE>iP0Il(m_O)h(KrOt=U,*NHb4a7df;"caj[M-B;!pn&HestHj#Y:\<B'Mig&c?O1elq5=JqUpjbLOpWKVh@hbk$e
%R2[K&6[W_V1M\=TY"GPfrl5L=nFb'?0g<gc=$p5Q9O.>omW(A,#=dTH99JT\*@#+rpYo\I9R63-$U,TIGBoLPg:%XY:Zp/m.J&\G
%(@/q%Lj2-D<S+3gCTZDfF0`M([Ae8#^4RWmfAPl4!/EjCW+q7ZM@iCa[_Bk:!btX]<sj$O<-VdE8Nhj!WrT7aWM"]-i<M/mL6Kn]
%!]Y5JhpQ`5hsC$Mq;^D.H=GHuk'1#r7Ej!7+Q'&J>,+@NXLjA$GXucb7O$;!g1"a5Mk@F:*,^DArc/?,Ois.36q)[G5HT@VF,2%G
%daSPGOeYuo8,+$c1A2O[U!7c%rCi\'((?ISL._?Fnd=BNJ@7oD(l<_s3'''nE_$d/5FW\)Y\ZN";O!iOdn=$.@f&GH9@M<PFZWoQ
%;7+c^l:+1::dsQ#5R%`09["<=`Lj]*6[a$gfilV:2]0Um6-sN?<4<\pjIG?c&e$qZDkY5VLIg?=?`*58k(@s\Xm,aIbE/>?S&&Hf
%gFTX(+k&*`1)?CfM]c2JNs\-JQ'bga&IHPI(1-CR80).R=Ulg0VG/-pY_ths$`F>7pVH\^4FXkokW&D6i;<pA(m.`j74Hf_l[ta\
%@cicg8>Fhr:6i:,R4\k3=;hG)<2@[uJ==-OkgigAqSg/";WcS9&pZhlQ5R^iS'R>MAmW8ClZP\&Z\1V]AF-(t(I"V9n<RfE^G[-Q
%3f`Gc_,a^e1$Nn2Ya$dq-bASoF6!s$b=c;R0K4pOdPX\\#@!JFo%Rbq`7Go-fGmi8;fKHLd]f-n_kfC_Y6N^QnTf<\32+&lh#r\;
%H,Y'u\=iJ!hIfeq^NT__8PIjC'+i0Y+9J)q!IN+YEbd6nj$(9nl$dPI['1$>e!gnS:FasSi!)]<o`PF<apMgZN0%2D@j$%kVTMj6
%7d$MD=Z@el*?'f]F:RRfE_(nQ)K`!43YR40n!U=Cj\dChp)X-lJG?>SC$C!'"X\G2/?qaOMTn-aV$3?$A"K&95<Ma/hfk[5<_Jq]
%J_P9+&A^i_l6:6*Ma*PTg)BfgRse=uX;k2E$NU#M7=AZ",>t2pau[lE_V;?[(6T=a]M5h<`qqPW@82lFJW,D$s&^-WnOP(Qfn6cg
%8?sEFhoo!7JmmOdS'U`BFfS4P!P1u/f4fA1.V(g8bdK((XJlXi<IUY1+cA*]quoDeZPgm].U_#WOaTd7[!>eF;rdib<\g98299`L
%p#j,"_6\JtVZMH\lU#_83'0C^=gY;8$>3c6Bt:1E'hofJAVBqS]NF5QN)#A?JTojFlReXrk[S6/gAf.ekb8,[")YA8q%fFlH\lF5
%\t2$T,e7Nbb*@<(rUQp_.*p:44>dDEbSSff@&+(/hj9NY.roWsE*0__r@)h4Qknk\,*@5s$H]7,3ac!8Yjd=Y2XQ^T*/0RiZp^-s
%dqQR&HV;,3"20gI-jt]e$j(QsKsMbE""ZmJSZO_S#D>1&GV>snfAA#m."SJdP[b#rr>hMS;1Wq3\XgSONCs?gXZ2iBn:p"IY:E#m
%maoUEi%-$K,gm!QG37g(;k[]4n`O_2nCASBDU5^Z7D'BPe&<(=;tse@Q^>p'G%e4XWLk\G"NF:6^;pN#-V)l#AR-P7b$ncga!O=g
%Z+!FbA+S-5Efjb_g9Q.0I*5/mPj1RIUsIH]1*Mp[j[?"<(>kT.)`FjA&hdZ<dmnAo6.Ou:]'pLE"t[lN)dd61'u;THa$X]cM#T>6
%QU74l!2:_n=Y(ol^-c@WI54^=3m,;W(SIThD,Or&d(op<X,nd&@O&:MpiD,d0W]*8[e5&5DS9^d[0D^gY@rJr^A*A>MAH;enp%H0
%A-E@u\8T%i99YDRkgG3h\LAUdST^-5dGM(J\JM0"X9l:d-NEf:i*?c==dsgf/U<Eb?I9Q(qig!T?"BPa9i;&RfkkRUS-02&,jrAp
%:D,aI5a49RU),2cKEL"<a(V#.a.P(*U8YUoRr^8@jn<7VhLU@qUtR\#?h2?gC2X$n.^K9;s2>!6=%h\CIft1DrG'HAOB4^36Y>N^
%ba*PF>7TcW\'fYPMt/W?o?Hjc#r]Vf=Y@)W0E>qNBlbni>6qP`r$G&W,7+N[W;Vrl7$cs9_"S<8/q3#n,"[(dauGFZC>V4*f8)]r
%lgRkK`P+JB+55_`43Q=+:m9SB53F/e,4B<NaW,_D/b6W9^=fQbnCKANFZuM9mPi6dhu7*=SMi,rYl-mY6_An(p4N-QKRAV*8PLJJ
%>%NO6V\2K#jeZK`c@SH5ISFZ]'-b68W@?T0nptA8r"km6OUtYR3p2EoT6>&Dj>eWEkK;f+!lZV#`,tUa?m>V,q-qCD(%'3X9inW8
%j=3MUf&l;&;YSU`Z^Y<C@Gegfr^ctACA'B&kMOjr<TKS8'!Kif2Rk%AqO?FqgP7DPC!!uT[UoTVH!Hf\Z5fI%WUGcWs,<$mFb:>?
%O]cIW,D6-(d0[sbr%59nlqD,W5L`lOXcIm%c-B67:)Oj$:>a[5BMGZ=Ij&r+3S:grr(sj$.VPU'&hI+S\"`*k'=Chp5e6^r*8T-C
%4-_q&Hpms>P&N7FGSs,e97"T]LRm^i_'DuZB&aQ5Pc#?hVS`Yo4EgQf9),pbp)1<_5h;$8XuVhFQ)*0f]"[PEd)04!!`Eo7+M$*^
%p1o'*UB!BG+nGc[0)mV/Auu([a"P`g7u=T6]2hYZ"5qNX>8#2sIXE7[2(luUX%cIZRr]E]Ht.g1);>eY,\(dG\n=N&`?jju+pL2@
%Sn;r_5+A^=C%H(;A06c,1UA*0<g/S*q&98U*&5V$>hM[LGsV+tWg,+[S7X45&Vs1^'97?rI5`L:R(1-g+a#(R%u)Rk5:*mO[VsI0
%#M5?h`R/P-2nAPZ%$3)`d!b.p,Zh*=9&GMY1aU<M#Y&<InL<a4PLVi-1>F?JiSEU7W`#rZ;Rjj(4lqYm-G!n]Co\p,FV"k;S4k7s
%%Bh]rFRVDQ_&0Uk[)%)11nn&(PGa5?\!>VoFUT:u][R$'B$M'66.uRSYUC\LD3*W\>EW-Rh!-,HADQh7>&rfA%_PaPXmf-`)FA%>
%HCS(tV_>@]B73$EQi(7i(`Qc=OQEbUT`a6Ws6rW:q.`Ds5ZJk@AMB5!<BH=!XfYH'[e'hElL`l@i/&c+6>$n$PLRb58F]d6+br2<
%^nHjZ+2pESk.UK2=YMq.AmpUbo$g)c:WrR`[\!Hf<W]0$nl:o"knWVTQRt!rAp%@Z2@^<Jo($?Ed*=/f(2_;b7GK+i26)LkkA$@*
%]$A<fRR7\`5S8i7LMd)4;t@PZF`@<gNo)n"[Zj#s<W+/Km`I\cF@aDa8:X<LH7:%7a/unDf?+#gk]n1;bmOo--\dom6n,h9XA9?E
%E26HY!SsNmJ5!IJciR4&5U08jYH+KkU9E)1lNmq5Q!^1''Y;6J;Hau7;'=oVll)$u:PlC7KfrLPRk!?jP>+"_D].G@rde2:]@auj
%M=7lrXnpmmn`Eu\aHVgmKNmBcC5OIId^j]%Uj=bF%?W8][)plrC(dYS.BL/c'N!\0l<JpS&d0#H.?1d(A\uKJ>3@d:fZ(=Up/*j9
%(1'?ci%dG!GdeK*,Pa-L"3A"e^5k;[(CUdp^hE"E,GGbEmO?Q:(Q1s7CG^.&IJ<5Gl2[.s\#p\-Db8;:)EXO??f5-XZdGe1,#F8]
%%Z_H0OE9O6(Z.]Qh5>%'1;nTsj8%hakX:3Yf'S\43F$rJc9GG,AD)fh7S),i39KGG,>Y((5O>ZXa>_@%O\%Y8:XGNC"n]B1?MKI-
%O3VN0j.XE#Q<[t(e-/IS\!>k=?6noDU>m+$&<PLuns<9#5p)9"D9ZZi#iA9+kb&W38C1!eC[bS9&pqR2W9eE.eXo>O5k*%4`GK@p
%Oht=dNr!_0XkN3Sc#"rtY*QL8a$/\s-hY]_-,fm#K9k&qpbODQ0,1SB97Bif/a8ciA#&K3nq\k0V[h!t##r;;"U*7DR_%'$%[,l)
%,p5oV(\\8(T?C0mlYK`UUt`mXB.<Zm<JuuTm(@j;C!pTKZdUZK3P"Q$P)_0opasofn<q2_#d'YLIPUe!:m1NXaR3Kgndq@aM9&%^
%6DE+4rej^mDm=l>p/p"mjem*aPJn''nk)i,>AR4uM.boQgh\Q"93bJrh;2H9l'0^1(UOmnLJ;!aBtoBm?T*-kl8G^dHepuGk$B9)
%+_DtB`3K+8!jR5):FR2kLZNi?L*MfcrV$UQPV.!NrArl@6/pC3MAN9:/(8SV6RcLoPs1=+4$.CQ[5S(s)0EfOdN(#AN2:6O/t(g$
%X^u[t7&]?6GF'$SB\+^,gJ2dhs2F_.0VKtXSpY'0e!"*Z;5,he+GlGfKE\M:'^A1'Z3`#"@KPX^(Z;%.j9XUFItgI;P_]q:1.QGG
%e4-0US_,t,js$NLaUluo3MgD=,W#>lD'I"2E-J6iDS+?A'g@,:m1@>r%D/_l@lq#g^/o,-jh\TD?W]=!QKfA>b!/37U,$Jo1u"#P
%:;ors:!#E!n/4or2CO:@k1qF-Xl?h?:+kIfP6C9,p5_c$Y0cBSl48YF25%KPYsY+[DeA*0%qJYab"JUYYg0srZ@;'s(kq:fQqQ1U
%2h3RT<[7//q#$M;o;#)6]cB'is+eukpUGs@qeaRZoqCf_7;&]fRdIA+d;5P6**_>)7#*#*=6b/SnU1lRdH"*(q_Lsu52ZH.I:UWG
%O44TD[EAc^lAj"mo&L<lNR&U@;5gGAL9Kk"gu't!9aIp91r:4FB*+^H9?&+lKd(b5AGWm+2#Qo2:YD(2<k^-K?A5#@W=)X]GL/n(
%Q&Af+eDJh?-!P*$MZP;de1Taa&^j_j4$$[Q&ECC2Q4V\akCD!?C+>t72cK5mCU:tS4Uo##Xc(=4JD$IFl*N!i+_kW(U@6"/>NU,;
%9UL)s4d!:o-&E*K\\uR*/4n,db)at.=$*2?lI=J%nk4Re'CN9g,a[t\-gu+;kE_D!A#W:Xp3Pnomb['A3?#ZtC%*X.SUIsRL'riJ
%0:47c&tS>`mAYlJLt<7pgM5RqE_\E_\[',;Pi[#<TAe1!DSsFfZbk`>n"5)nJ/iDLn_kO0p(e6[=#s0qq_JBoqC)Efj;!]l59&;'
%mTie0;h!H1A.X/'$o@i78am=\;#.p^fmY[Kd9F-[86Hchpf+r5/o/T_.u19+aW*cRX-0H,;qY7KDNJ?\\ea]hiiOL*l"B*e/9EI8
%f+F7K!"]a92]9!>&Hd<bpK#F(*h8ILR7d,6WTGVL6Z]T'3"rmeibd_KWZST4j7?bH:Q6l_dML7%TI6-X"f:fIElfJ7SOoTJVEh72
%%mLtI^NIuFhT('q$7.lol_6+KVO+8(6sEP02m2(*6)V"IJTjuR5U`Vj[c(,_NZq#Fd2:)-NXFJ.!U7LGkNg$jMu9l:_]sLe;H7K8
%k`Z5u3OVc;N=VbZ!Yd>rH*<$*C+c&$7N$f@#:dt:X,:?Y+W`-RImmt\QVB-jlD#+>4u#DP%:f>T*^?=qjtca"lJ6@;`a16i&m8AV
%nf+,#dWq#n0NG.f,@%;T=W(M$-!ksKdcg95H`tS*??SR_jgI*.GOY^qW_G7X:Wd6EDV%e/AaF:uf"LYJ#9Wl%IB3ft;#$uYNX@)?
%Fi@Z1gF8oi$MR##-_Pc;4M81l+RO/p=QG15b:Mn$/U`97&f8MIk"qKpAfdSg6Rlng>Rfqcl7=^He(#5if.EP\K_8u&r61s7A2tQ&
%&fsXm$ahrb+7<.R51(B!Z7I8eO<%9]^gt_:L+3efn3g;j/]k]Q\b7TtrVFFP5//-R9Q**88OJ6mqbZDP&M#5[W4Ih-Rki;DaHP44
%j[521j,MiB2KD%O2[N5.MacC0V!+m[W_1@VN^N%KUZ_`\(2AZm,$'q)=cBLJFr'D]AK@>89[UVT2\LS-j;jkf8Q7kib7(2=@hT>F
%k\cQN=u&TG&bf6,9%alX%T0'Y!SgO%I7s<H3*X^<j(2gd/s4hFEm$*s"\=%Ie@Gi1FT1'(1foO=l:]4!1bmIQJrW:mBWis;$LW]r
%J'6nnMBC?Q-)"]r=c@>]/.R@n/XcGrf=iLkX%lYPF)+oh_[P3MgV`dE0:_[N7ii&[,FLMS"ju]`Cf-t;EGVRqNlfVT[8,#>_=?!;
%2$D6rn%/nM\HJ-\gO!-3F[F+!"X1?`76p^RT@..#-EU07^mlbO[Ob]2-pNlbG`7dH_3F%pUu\@N?gE(FnkBqk<di`jVSB7>aS=m\
%3Gm0HC`@>c.rs^g04_pkL)od-P3"^86m;].U(?g9dFDI?`iofW-#s3+G%m&/_DbcMLp;oT$#TC]C+N$Kn,P<ZR_A9k8eXJlmH=!6
%@EFs@aG8)qS<]>h\q:^?[t`*0SO1^)<M'!T]cbAdPWhXqR+_e;!T_PD7b*4f5_6Cm<4^N'%X&jZeSK7UZ?cC94dEl%[#/[>EM+k#
%76'"g>8eJc$=U<CEo\B8V&Is$VccuU8']!u03]r)W$EZ=]1ohek_p4pmUQ[X>D".t[jfL9PW2)FC;X%-4?aP7UZk-lYXZddVWa6L
%;lPoOHYe01>:J8*H_k55F[Y`,WV]Zi"YC0ShX!H;SQjXCg@#p)kHo#g0\J2"$7)fNQ:b0""+(&Z.N?Nc;QX_fcIN,1Bs&Eu)7d+2
%0ZkJBrBXHnd*J[4:ekUh=iW($P0d$B$1a4Z;1N,$QA?#D@OB>+L];tWTDrB2Lncrrru-[%i$'3eem$%/-bUM0WD7QRaWn"N7N2Q>
%q)E/urP]LeZn.K,,3kAP!u3+`)Ko4LCtk868r(+u^ri!'g+>H]7#U3PekR]\>jb"V&a40,!(rHX8,PY6;40pq&aCN(N2%ZYmu<2[
%hFUQ>il8td(?GGnbCBK2fda^8]-OU=']5%_%K3uf_8hE[!PTefA7cM^'`.\DSbSl)lchkSqRo?gAGj-gd3P-dNXhAZI.AH-cT+&[
%?mJ(-HaqIU-RWA2Mqi3u#$2Z@^!U*Z_&9C^q]Ve&(MD\m,tM6u8@:_=Lb9(bFVJQi`ep!X[XrT2TKjl9rh-<(brs:`k4b<Rr#*5V
%gV*uJ0A+"r"*-#X6qJktA8-lm#]qd>*`Pn9\Hl'I(Sr>9mu:6)J_198hfOm^5Sp9j?mJ(-Han@&E0/7_^IT<R+5-T:D;\)kZK=gK
%"8<k"i)R]pkTh`D-sCt=&Luqe+44fJr"7b[*u!s.SuI,JTg0E.p0^ipRX;Pi8OKM8qop/V[^b]5FXt&abu`&,`E_"\R6VR"iBc#I
%RZ#Nd\!`)'^GjeCDiq7YpmO"],1&oK58ZtRk&+L3^'\4"rc=hPLX?oJn0Aml>W:m)kBIdW\ekecWm]Ig6dkElRE5/MUT:f?a9D_(
%eiA0\?(BT#;.XJ0iT;;cj*nDuMmU3[?Jm`JNeCQqR*I`f0?Z't.s-pi*u(ij\Hl'I-YY'jmu>as<:"/e#Bc8#TT_3^0G5PR4l!]G
%iP`IcY@`Pggq4G''X0Q(bn''F*3Xu](MD\m<E`UJ7!cNp'+'/,FI%5(W[KK+juIqn?'O#p;.42,@HOC;F"$'52ql8rm#:3mSp$FY
%HZmWD$=00U#?>PT/je(V7@M;BO[d0Na0OAI*V2:C!aVVTK<C_%pMf_ceeT5tmMW-$,a5a)9pDm?4PJB`#IU-60bl`@M[t]rhHY`4
%hifm^nb5KXQh'fE(+2;&dKjrXjpsp*Uq)8MQSc3Hh\01g33o$Z`dXhjDn&K<A(jrHU+AF*3a6Y;6FRb@/Drr6AK="$c%]VtE=SU+
%(Ld$1X(KW4]Y&X&(JdG=n'`Aui9r$2oX/b1LSSG*<TmmC4K(kVEtP-q0?Q]&h]'O#8*km!.\4I)cpa?c(jY&j*bHJ9.XVfUD.=<I
%m6+g@<H<>SOg9kNHMLYZ.2=lmM[t]jhOHs]mn&qipj8dJjC?T=E3AHG!%N)2jpsqHV7DANQaDK$T\IaA\a/-r<`(Wb*d1Qr80OV`
%.],HIC#MA.g7!p2om;fJ1B--DQ%Ke<"*^I+*'o-.cKrBg6Tn4L[+CX"S3^k*>=A)Sm>aLK*+E`4Qd(AnK9-G2N5Z#jAT,jsi,13b
%7)Ih#>tMc[Q*JONeg"Z+?&[Hh;.42,@HO8b^hmK(M_[oF?LK0Rg"\IG:,s8@Sf'O%ki+-UW17"3&Ya_MdT"5M1b.OI%PoW!ZbStC
%"?K-G#@0?*mbpX=P]1WVPmE%Kr$1X2T'Un`3Mk!?(aWak99Uem'Wk8q&UgQ""`WI11MNh%atZTA4e&d?G>9q:^YPDU%9`EUA`#cO
%mja1hCRa[TgTq[>W-rU!;lZ!d^9Y(-*$i"8;Q"2j,dfb-AL/s0/_]4LI((i1G1*3J`o(h/6=I>tJ#\@iiBpoH!*V/8';LJ4h.$TO
%8#];MH8%u%q?&b_k\n(5C/(+a#TT1HV7*ZXf_XN`&N)(<8nJ%L`+al3"XBBBm^?"!RBE9(!B$e%OHJ[]DP&nA&l:4SgFAIZ3p5n,
%N0QP!;Z&l\.tFG<!59&^<U<OoB9?(1V.c=r4fVK5QrRscmZ-olN0C<*D=o&-)aqt)Ufjhrau9.aDUVs'ISMZh!ndWX"bakRFEDep
%><SQ^)C>iK.36_r6@W3bNENY%_LQ.45E'pM&b\<SaN?%l35oAo1A5q;h(Po=9eq^G:TJQ1Mp=ND1mE*[!q4Dcg%2\dY40Zm%$"&=
%T2F-*CGPN2`@=n]!f\XChOm<_>1`uWMA3<N29Z![,fc-<aD.8:8jIVbBnL1sNbh9c/+$k>SV9BP*);7?Ebg++K^=Q[G"PDY/s;Kg
%..#s@G8^MYiEqVVlh01TdeQr8)'"(`)Fr5\cqC^qJhAr5e:FS=:U3!//la1T30@?#.t(.Fnfme(H1D@?qnQp_En++N?-7^XKtseC
%3=qggXM@1B'"TL!MAiCC,EJQsMb9/FW^kH//"DGcDK&i<c2sE129J$tDB?qajW>at&?5.!:U%r;eT&dgIbC0QT.-WRqK$0YbsGYY
%U\@b/q;G[Y\qT1L/[&LtDnpR9oNdrV<pJR&c[XPkjj^2=qB(r/(G9s&IhTrram"n]R\b$q)uFa""'CjWgbt1)7G33Uop<=QiG;i$
%9d&Ft;h0oU;::A$,6MDq!mG>H#_#o/_9'*g$/HTdJ_Ss3AP<a4Q,-7pF:fgc&<t`+3Qc9`6./t[Q!VX7p#hDZ?aR;LM_uco]&tVl
%mOYK"g*61,^R_L_%k]G"Z7*Q[1HL"MHb%9*Ks/003HO"\3I(,UF8K1oYq^-f9(6uq>ul2HpL;]YK_BJWWtPEgka6BVTRFV$9en#n
%0EPNA3I<I.+O*'nW0[g68kXV>Vn/9u;CGYcOMV^426A,Y[oAlr<Hsn5>1tDGC.(X:G*eF3&Vtc"S5H)$l;U$jP:0$DKYdn\31X$3
%0kjcg1(LF?1!I08DA.)lq,^=9dQ*m/3ohG%X+hDid?mGZP+$f!>f;gG;K@OZUKQ2"ZP0u*-%,pGi-6ZCI:[CSbt[)Y/.q<Nmf<:l
%:K@;"#KJ=JLH(2u_t1@&f@ZT[#rMmJh!6'P4r;$kTC"E;+L*j\s"\<E$ZW(sK=Y#5J_,mmKblYi"OAjs=W_4r;alo(_=q2XCucMY
%^WhDo<@X$Lg#9D>f0S+Oa]J]/G$tbI+!e(#DXDY2o.O)Q;3A?LD1^kb\V+l&jcUC)nHK2/oK#(HQS".1SJU7!cUh/6'7_rURl*RS
%>%O90VbU=WLOUak>Bk$ChPMNBE0\3;`Sfq_"on9>]IYXT:WZ-r].o'$*Kk_J#r<!f0rdZFY,bceg/djTR9_Q:?kQ8$[A:@O)]P#@
%=DaP>2lFJWK)I"+-R=NtSf:,rY-#!!ei7(t(?r'b-4(4Kj>W??6^"T"eY8mTh<)DHaN>oo)n50Mj'+K!7aH/>i*';i8bb^99qQ#:
%TiVT+6QL&5B+*(IBY/@[#UNY6Z5h[1\gk>tkZM%RlBq<K'ZqBQKAuVpo?>6X'IlJ/GoUEEF=o086!52?\Hl'IkLuXc?>Br.m#Q41
%.R6qXF\\TFBs@nk*RWFZApu<+Ce0R]jQ3!PHaY1_YC--W1rLOhQTh3G`>$q1XdagIVo:=OVCEPf.0M+fK>)F=gVttZ8F#$;'qD4m
%%g!'Rl$F,<B:RKfTjeZ(^GrtoVVFV3(k<tm1tW-_($KGUK2QXj?_CP-kVP:>ir=oJO?#radQM`P<PZ^XnY*OjN^h4H"Qf](:e,NT
%PA3[hhd2Eh+)PX\If<&6C\3'>er,u'h\'FCNf8Fe:t2U&YiShs;3E\CTQK]aV.`#D;O3,E8_O@Z]rmdF-5)1aWo*%<Fc'o[>h>.e
%>7H.p'G*^0%OjIpA@td:,B6mj6ih=BN7tX,7CHBlPX8%0K"bRUVjuM$9P$":VUdX#4r(0RQ+`X&@LqqPV$ac!!Y^[kbQCZLg3/`n
%FfF&^(Q1C%8LP&tnqbX's7Y2\o]s?0$'l]+cMOep0g[ocA]\@O#!SAC$W`jqWEqjLd(mdq9/1IM6ab(,O)aZRZ&PNi;%*ISoJp#-
%M%AbC2brVX%b"CYV!B"T4^4-?XD)Xt:iB8P6JL-Tdl,<U5.JmlY%L]1?%#B=,Yg(QWiSc)oi^GVgp1M`X&cc`C:7$L=biB-\rq#q
%N#quF/\B(^PO-L;YG*hpfSp8&/ZZWRcjs&$8cS]S,W.,UB;$T-$',+5(D`)in!bI75<pXHmu:52LUaSH3+j39^'\-R96a:b$Yq@]
%eF0fLLlB)-9">XG-b+UTa'lJEkK;cp7O"Y=LRTAI;kXbLq#b!WdTOCcCWocB(_@bpAdV,l6^:Q45\!E?17V03Pm,<3ai-WV9M6Bf
%IQlRiP3*TOB%6se`jX#+UN*)1'<]M2r6(gG#hk`5+"GC5LDip0Ef(BHH#A\fLFcG'=As+-U-EKp?EmDh*2ek!K2d_=S(]nN2r2+)
%e7KU[768P?NMI_SHemK^2fYi:3^/^3eb1-N,q@CmM!5p#rFS@6WK,!-H`L=i/+Hakb$Io`*TZ)!<Qhm'.LCo-@@e<tfreG^M51:]
%AtGH*LaQGtP82AU\%2DT'&kjngq)Xt7.h7&8K$s-FHMYbJLbE<5r[lBZ/=]`2&23QY&[OG<4#+e0:fEQjd];[U!^M$J"dJAeG-L!
%CS_]%^B-0[]YYFZ64%M:i_@B,$Km"=)f8O>L2k@6Kmrg+ZYL9qHZ4gha8stj>hM,&^:^PcD_Y]04W8b=f4LoN\ifTKXGMT?$rjCs
%;J??"eRc-3:SkKZ'Rb),N$'u1kbE^&4?YEDYO^W,99RP'R=MuO'`!j_l]l6=a>CX`MgsPdqBO+'m)t43+.bo?aB*50TPT:7mTMX+
%rVrPY9lb+*OX77Ej;d"Z?@[1G'TSWkSJ/M`>4DT8IKG#mg1G6JC;6Aa$'>eK]@RPEihDX+L""l%kC!\j3cf/;5$Ys&Cs&`cKpnG#
%<mp20CuRn6L:"I<Np,RR\9&kU(p`\f427,'B,2<VkYX8C8BL5$/^[J'UsClMH7>=m=YeBO68@T@gD\=Pm\V>ihK1B!b"N@Eap#Fd
%5#6cjb-a(K<).<AY.p'fS4Z5^XTZDUndK4G9<eOYA:d2)-<ZEHa:'5IrFC*-Q.Y2m8XaiH7./15e^YL/GP*/!Sl`V1PqIcLV:e2P
%G10$*0bH`mmu/7@;fGG-`M&ouP(E'CqVE%(\(9DOC"NgVJR:&KlCC'MUKosQ.refQOlqmU'_I*-^$^PUn$=[o2u\-N3QH7oNF-1O
%pF\n]ZS,Dacc53l?afJL-giaaIsL:r3V5WY)C^5B8XNm[kScc$*-[d;8!8.4MK;MDP*Lj3'G/D>3^EKCS*F:,,><A=47B&&K#+Z0
%'=\n?5iU(B`QkI3O<0pP%_k=l_'%d@MQ0qi(,V#>1%HW#F2aJj!h5$@$-d!MmEE[dhR7$<ZY?p_8m<ebILfTFQp]aY'fq9X$!$Z2
%KN)]KB+2\*`j_UHC(lb(a4!J(M32N^A=R0('rDkh&6(K`aA%CM58_QoU$BK?0f`$LZr#mLWHHR_MsM<8U/i;:?k?(HBg(\`B_/QK
%P&<^jY2PJJk3LrD9.ft'Tam4"-d7IVE\*+H-kG.@>VjGh[!hS7a`SV9$sLWU\i^g0Aha'#C[0,j?#)X*8l!sCBT22_B@_+gRL[Tk
%Yn3O)l;K5cXbA1jVRpX;ne01f9L5',<sMlC&+K0kS+e=iWHM71pM)K*2Xo@bI<EnocrQ'r'm&[t'bc4oba7'2?`9]HL<"XS:,aY)
%:j9=G7H9!lBFM:r'f<Y?$d.RZ(2#tc7A(0[.99B>(K3)pP?'ODniCe&e-B(<8SQ_15dT3?5g*!GSKi(f=3V8,@U`l5p\>tT.>:0,
%UBP@?MWS'T$5sBD%@qqE[4\.qUV.7O!N^#j4mPu_k!_H\Gl2Pd_;dlM<Ttp/<Frr2KNRKP./=,IHI7oQ'jqfS;*pl31)EUEq9>tu
%Ba)3<b:n9?RPj@dQ^Tg0QZSTdMo-\Q0LT).H]k*jbC.X`9LSp0PV";:NdFT(&)\Lm'6gDce\+$)&6)4P@dOYoU#;CGp:=Y0'Nf(f
%<H"fgcs^)7J;VrOf;:j7^"L@fYU)r]HZVm"0F\I%>8kZR:9Q];)I!#)bpm;EoEDXG5e\M/:nE9M3XuF7CA,J>#OU97cTYK['G6M$
%2(@2S)PE]WD(URoLaqB/OCtZ,8kI9S8IEjO#`@&=DQp)hmrOXFeQ7NB8.9L?%R\AnnB;;d[u/@HoP3^2kN!CYkYO&G:2rKiX>qU+
%A!OnAc9a*S_k<7(N]gjNqm=42^6"`E?e<3BAX+'P8`aL,YY/Q'bAC=/fZ'*@YgmQ(ETkH7D:@TT<l&*I:*=._F$.-WSU.pt0Vr,j
%]5iP&7S$)kAS?`@(jU?BpV/Mpn][2OgUWeS750R'E*!;#O8%d'$cR`WGff9O&%RR>8;DO+**EL_o7[D2`N0gAe!YM,3K%_`Z@\b4
%e*Dtmbeu`c>1+\*#TL]ib@)*eIkuft]9mchQgV[q4S?4`HIarq=TbPu*I62>&u<LCL\5IdV]M+ui9K3AOT45U&u&/1aH9<iq\VLR
%6W&/"YS]LF2?Y?(KIj(1:$4\,NgOXB]'Ie,$VZUUZ/%54lXDCqD/\&ueAMu%:6Hg?R`T\@*9+pc-2"(7ma0'b9]35nNL4*9Gkb\a
%M`BC]=)*^jZ3\-B-"4<`MGb-tYZ\FRAZ+/F29_d'R[f^)]C,Z5W<]4V;k)O:>dO;^6:tsA3bQ(tMJFb"BY<ZX<@e1o0O@DtWo0$L
%\]OMEo8lL.>*?@&?ZLI8@pcOn)=gpUL5p4B2MubW[T3e#p#&q0CmF8IN=7pkgHtcTs"6Xr&J4Gc"P;#AdVZ!/WXXg7f=%Whl9a4F
%-;DDcFQD2B7)B)g'Mgo@37Ri*G$8!':bmVElOh3&od+\OG!L*5`G(:YX!!W[>U7+Nj0s5]0>>&_h(B@INkbL$^Ing,;k4e&GMAH-
%)5q@K#>d\TCH&uT/=:S;8I;@?.#?S/fEES2*)g#!EMHTtT_E9XG'1=35VVK94H$6O[/FA>hN]6aZ/S>E%'K24O05[bTe=<bOuA/H
%[=U8^].B`pd$ul4aNc49-4s=&R$B5ILnH1p@gImhN+<lfo72;69VM;B:dGZbft'nMSeOT\md\hEWJ@6o3)`IK]JR#M'm]:aR;,Ag
%U4mC9gCg<hB`)kQgbA)T(4@91nff_Z3L_5//hkm_6699C9#9p=54c`-,Y#>4?':rsVg=#cf?m3.8l3j!i;EGHRsJ%<Pku]:YQk#\
%;t^Pq4EInU=WlJL"C>^N!,rb"jhVqYLGP?kn9rEt4)42,+VH>*e=dt"D)AZLZXB6)"]BY)90F<VWuFXMeD^[$$OKU'o.7ch<O<4O
%!XrJR0hk)\:,b#od!k<6lm1[K(/q.M>4CaA1drjq*fS\irb/cn^U`%"NhQsa*2LJQXV;euF)#-bVCQT2Rbtju_k'l_L5Cc2iE?mn
%e#Wjcq%#RLBTa3@\sc0)`KWQ\L&GJfc*8N[;Mm4r[2goF6"9F/A$)\Flo#BdKPI%Kc$Q_AL;o@IloUg<nHH'^Z_4oFU_*UV%bra>
%9.#JOF-9D29-kj#4D`,ELT)2Ypn(Mm(lBd\8VGG+qo<Gg])deT<;]T"Mr@ptm7I%P:jBgZZK@N,Zf$Zq5bgtiFQfuu9U*_J:aH*#
%7Dl[3k:CsOm\7thor71FL#dkO1*k<mpFt#^?Bii:hUVBOqI5@@Uje)e.;B8.ntW(j,t+D82<cpl>PXc&nb!?<f:bEn=HX=k%Z=40
%?[=D?LnQb(#2YRkl3u.Ra4Id);)&gPTc%u^:9N[)Oter9TdOVuVFOtT3f1>"]HM9&dD3Zg)i[TNH2#PUCan6"P9HJje*,J3_l,27
%ER+=FAGnJF`8VPo@`Xe<"bi>F#r0"L88X9R1(Mp@BFN@Yc'V;VNPV:SndeI50=5$+Dn0J"1$l>b7Xoa)Qa^_RHhJ-<6hs<u!^$pO
%MAhAk,q5WIJWjB>5'5hZH`Y%dl,RJ7KMgos9g;:cd63e0F$%5hqhbU#A#Ol%'=u7+3Rg]q"_4JNM[;U+5Ph'Lm+25dgLM"X/\#+^
%[UWh?J/<7gqpDVH@k$UUj)&:DPn2"!;BWltb8d[h<F&!4VQpjPZ@6%d.HP6]Qu1o+5X5,+lG(29E$SNB8^op&mNV\Q_$T/Or,[\B
%2&i;L_-XX:_[>'cH<rrm'o=?UIZVeLmfk^7`[RiG8$XFQ(OX:nArJ1p`D:O3P`I+df@JlF+XedlCCJ^#gl&GJmR:L$bolq#0&/.9
%j?TTgMCD&B>:iUfT6_@RC`D6Ma\nnDj)AK-BQ%si:V`NMhQ8A9cI>+`:KrYF7g9WB(\2&_Q:UpNXOQnX+e+2ScLDtr73tnG?L>K9
%9J*e7e)\1n<<+!WgiGc;I&[tQpAVL5LHLM0+Z6jP3L\/SF#)Ih$)&G-D$sTr%,h)TUQt/(MkaBGE>l^^h3cd>NTtfk/T1%+ZKAQl
%.2']5*QlcB#YJP#!%QB00^E]>P\RkUL^/.gK+W6T"0,'BU5?hu=^9Z(`G((TEF$YHI;n\TAJL+e'p'($]5r?Ma^d?`WV*+W`e\_P
%"uc$!;)-RZ:pNBd%r!,E7E:/Uf;MIM>T94;UZdPC%&m9p"<Eacr8%dC1p2q'.UADI]s/Y=c=^\a.QT"TEhTA4aO,dC/[jd%l!)\9
%66l$mm;`Z.Tptu5gg"1)>X/S`EOhm0kTiPQ:6+2=H&6:C\7V4:XH$V8kg`R)<FZ6bFWg<dcd"9!<NoXX0p+H?:j;s7:(gEqh:mkc
%\%`?Rd_*@e<DjD\\-u3>)d>]H2EgC*:*re:(EtPB9gHA&U#8AbQ@.)#FB+=7P:oP:h\P;q-4@g3oX\:b8Q8B.HO,$0K=]iMoWG60
%e8CDgT-(f4m<1i++0kdM\n,^CfiieTK\7m^]T/s'PECaHB8:9%e>6Q1%:&O&adEGWfVZmEm/E`K#f;=FXM%2')+VN5m70;N9Q$_W
%qT+/.;!mUI_.\XtiNFlg:D@3)d_(Dp'B/Qt:#9?:`#Qf>^FU]4T?-MIa9-@i#uXUGbFg13Bni!NJ+BoaAj^?6'epL>XGr)RN40Bb
%qe(8c7'jLSl.&Z5/UjYn(T1Xa78q.o4CNNC@@Fu%_]9_49u/(bd"0*K3/=T%2'es_d6-5Y]e`1pM-itq)mPmZ7S>HXd#U?Eo6^q+
%3i]qI)YEZ^s5p0jqcSQPk=Np/Utlcj"/a3]Z5J5A,*>\QDZ$ro\"K+0=ur*?7IIHp9#Fu$@SrPT\$/,rcE(qnn[STX;%dQZFVC^P
%h&)^q[of!,7B'"R&o^\Y-ta>[M$S'oC582C6-\T(4)h`!'eI^t,nta&;6.ln0jK?Bbdm"5/]l@jlPo+(h)f0b9rP_E0b3EfSo)Tj
%r/ZFm%I&3B9:^==BA^BKYs]g4gBf"50p2j<Ed1,nn>GM."M6/k]nrAo]:oTHoXZiZcYA;',;/t<*WrniEQ7U=qg,\1Oa[V&YS:^_
%8[LJVZ,Sj9I%*b\Gin!`"fC;\dh`<F`%fNS9&CM[*9E:EK&m)c-ei=8M/0>sPV$+tW><2hD9X0)1FjoS$ru%e/pQFk%nQ-13RV&l
%GCJ5[YEgTChqd>I8`Y77R:3ss$9@J%C!UE3nd<D$l3p\h]4#hZ+"iNRB$farmD6GQ^@WY1;_H6mW_17E'mO"-"k/)aqaP`(NR=Ou
%DeZ:(e@3$.C`46>@LCBVk+q"!b9c-p;tjJ9>cu<_QLKK:MAPkKIJf%cCjM1-I(sAhe'1i<B:Qu-@Z[(dPh$?.a.BDK&?UOa8hC<E
%XtCT>FcW0N+Dfu[l9-*>&i780KhdqVc[qubAqD;ooUm`QLU`$*E6Dqd;_lK.q?BjJlU%$%#S;DGS:iNAh/q[LP]>NHP_KRFKMmbt
%@Rugh7e2dfY*8]!>(d';pNc5-2N1hj0Nas;QKH>cee!6L2C=VVCsW\LP7J*O\t`tNaW2XlX)i#.0dT0XKH,e1-:?Ol<K:cnrZUp`
%I<X&s0r_<2ct\V:0JOlI!)\(6E5X%W;^n)'LPZt8(NJjsM)$S!)4;u)JuV?j\I56iZ@B%S!-I^,a*#BkZ49stW1M$EZE'\#HnRNX
%"O:_aO^=>'5`,&BbV!IZ^)1!l[GHQHQe"^]8gRug+uFpu1=rb+20,*'cBT$MW$H`+f(HWB,E7M+9=f>q.VDZK#6"'NS[3_j9bKs8
%R(KDp9ppNbl-U32,W.lY-6Dlm)_*F&)!jR*b$Zu"B!)1IWU+Ak#^&pBW5'*)["1*(>9rMKJCsO4hMs.>7_8uTZY?o``aGN'#)s,d
%\>dPMD3*4s];$oQaf*[8.*:3UP0-4Nm*[OdHkIm^JcT`fK8udr:FZ.`$N64qN_T1sj=2V4-6EEYDSXaWWl]NkS[2TJWVUOjIK]I=
%nshnCR9&Q/mOlb!`V^QiCe]ql;_dkpr[WjQE=m9a+`:A>Lr/[h:iKSLE2r^RRAs7AjCO/``kkoUgjt!O^>(8N'\+,S@Pf;+Dsd.;
%Z.HtRe]';/Y@M6HeDXkJ6E:$r//LjDZ3GdLrX6bl^A-%(-AQ%+,dM*m01jOp4UB/4P-WD!]3s<J[J&jWhuAS,h2&@!Q*hR#nI68P
%G>L%=Gj\pJ!Y%]59XiTH+6s_3cWFe!G6*WJR3<WM6+)2.ja>X+]'lXV^h3>bc9foe3n1%t'mnY@Z.W*sjDE9iZT&M8,p]In=QBRX
%\qE&UF[4[sifG%2hSpbY_m`LXqa"+/s&Hf:#WPq>F8CMdZ+L_H"/0P's$/cC='jhDC96BT357oKfV,&@P"*Ws9AF1rr`2=9),7$L
%d@@,^>(%NJH[HqIZr0RD+dK04)AJ$X9h^Y;et6g]kHr?D14/cEcMp9Qn8pY7&ECD%WL>F!JCia%]:[IFbd*k[oY5k_-<t]`2@jH7
%AtcSBBV:;r#+l(]-Hil.KPi.j:VIsu/"'f=J\nlSNB_T]-G,M_+69WHgfSI[I$rBn&m$.iYm]Ns(f6V?dHdF^*#).3P9?_1,Z75!
%UdEI`.Oa4;)ZQOi,\)"@dBFpN8WKGA`TI6($o2o:8a"GhA_7X@/kY'W!G?F/Te,P[Yke-3(#TO8enm]Po!uWD:6,X(/>%b.j'\=b
%fQK?/IJ2=uqr(W(G$s:YE=:Q=(`=3<j/1H2dL)Mk^`?^c7i2#I8O;PX+UWL-7+3<9i.S*ZFoVBcL.\_P:U$P.\b6!q:k<_88+2'g
%'c/SA#bPG&NC$/K3Qh+36Or9h?O3[b(eMeR_0f0!F4>&cCibEPlu+HI5Q*>8)_;+mo3f-MJ+K*.oX95rh1EbJLIQauoR9!=S:Hp2
%`LOe=i!E?76nI_?]?sgkArr"ImEOAAE3FDn]m]2AIlq,Y-o+<4?Cbfr(+B7@1`VUCV9^Y<;IWaC32_-sB`gX)ZBIipC&t;-^khTC
%^M1fNR0P34U^@J<]`4AY&#QWTaq?O,SBiAQT#!KSWtZ*tE,Q*+$2=s;Q%Ie0me01L=YYh%;Ti=*\?JRZ'NkEXd]18=@ef9>,mdNV
%5JLp-]VHd3<#;0d&a@@R!fP0n)<J#dj,Sb6Eu7K*H=Y,EX+\AHRa:p%%B8&"l%ine(!I.+nA=Q8cX7WmphK5X:V`ZU=p#HD3/o+2
%Cm^Af#f.kK1'7_\eOjN[XQ"ck)^@N]#&I[\pD+E2f?]V&(Q^=%2oJZ$E=3b"_KPZ`oDL^,5%&$6lWqkURs(ip7';,Q,%LnQ"baU'
%gBf%o=+bFdbdTMoOV:/Ke&N(T@Q#i(PB*-LFggXLLY*u,bLqI;f1f--Z`GLcEE7*FqO4%aaGn)H^J8m?[SX(bSK74U;nr?>s(q[m
%?H<$=aCh>d_"TVOB1%,"-j:p]f-:\pP6o0?HIQX\+TR=U/'/QAljbae<$krZ)H$`/LI;f>jt8jU[u"nL0'UslmTL6h-auu=U)//>
%+?\4N+G_eilT0**rbpF!R2QBYP*S:YO_/s_cQ5<f@`'SS!m>R<Z@A5N&R9+QXuQ$LBJr9$LN3;#V6j,,@b^dMGO`jBMPq,9inu7)
%G3il/Q\.B5cf[QX-!:T6s0$l3"YP8dd#ittH_gh->habC$7;uEQt?O-K]p-p)/<NM`Ui>;rU,2c_\T#!if@MARB(G9?Hr$Y/sP?]
%_7gNPQ^m1B14Z\'?V5LfQlG6kfu/hXeiuO4@GHS5^UR?bm'_5@ENl&H&oU"hQ2bh?A=D`FN>2qOp?HD][pdM7s$;9mJV=W@c%,E@
%A1F)IB_pm.^crTAF>C;;$l&eGCGGo1TIhkCc;@==(6(fg>PrRq-qGfK5`p=PI3[l&"+&lJ`.6%IV^\^QB)&ZohpuGaB\UK[lcJ8H
%Y?K;QPKViM60a.Gds`5rK+YQ)CL*$o=B^Vq_#haikG_*jJKpb=c6jW#&FeUtV>l1gAW%IZfC>fh+c`hA1>'6I_]HmLJKTRS+T03]
%SJT;9q03STnI\Y]NqsalD/2pfriB*pfk+X(Jtr9t[WptpEnWP1L1pP6Y$)#!CTB'UG/48IE&9Jq)nK4a;8aN_c@RLk'd1re237rT
%D+i^F;QO7T`e_^]C>aq/TW;!-ROEZ&1[m6`QGdF>??JfrSF1Ej$n+EeRZ=r@J?BLN-j+,?_HCe5/a_,ledBhZoUl^J\/ZXgD;-Gt
%ec&gF')uD?HI4SP"R8fjo>EGYr:o@F+9*+Mh6R<!NS!Mqehk3I8)^$fQCNR@)$2($BMVbMAM-Q\p7<[MY0K(ir"A>G>X?-L<'Aq4
%\I*poc5(5GgPN.8g"t-2p)@"1FrdX"?^CN`0=>j#_^':&?1Q&!(EuE(oPne+8L!Ca4'=o9fc%dj'NnYBETm/Icb&-#W;X<`GH1E%
%B78ghcQo"E=%>d-Xej4LJq!-J?3PP:fB^.eA,UEdU)PiUD)?oL78jr3d/[(;dqHfe%.,g=TZ:`Hi&9;8h$J5#7@gBkn^i\Bm^\?M
%L2kV2?S`H\c2$%ni+WJ1m`RLQs%:K3J'id9c6/-'J%]M`]%GIjab\d!7O"B`>XQT+Vf,VPD;=fq%B83^DtK#bhgbh^NiR(h^OJrn
%%R#6H$LYp9f6u?7HU)'sT>kBJ"sW(k*i$,O=!U<'D-0QRnX0mC7b\)JX7tp<Uj=,Xko5,cBYtk9Bf+VfL2e)*cssF_n2,f)pLTgI
%UZ%`'Mi5>V1r+,#(l^9orA#;@2s*!G*.!RP$>p6Rf54(OhF@*T]T(K]:(6_N>3hKaH[^sIgM"4WDVTQoQYjHrQHU<<f8CF2H6/i4
%Hg"Wq)]\##RQ2C7Cpj]=7f1puU08Y&kmJSsJXJ],j/g'G1[!5<KH?>ZK"Ga_F^LI11)ZV@9ci!j*Cf>llU@45I+2KE^j@Z\%c'%t
%"]qc!lV<9/hF@*Tr:QfU*bC_ZkHttEkV:a?GadU"U"B*W0^bgqjgcSLV7t,/oNZC4Hl<DeP5Q;0%Qt##"a>mVlSbPb++res++qE&
%2m;>R,!0pPZ^F1ia`bMV\FmEdgO'qLm`Ft$Rh^-[okTf.hpLjhL?mrMc"7GK7U$%?X4QZ4M"Nr$dl78PdF#tADH=h@N,.6kkV:d@
%GT&oPqm+J5d3+@)W3*g@1uZ%22Au^(m8drOrdb+P$]`PTkVh-I\6?RQ[is:K)pQ.f2B)OGj-n:$'6:8Obb<d)]ARS^HJOp)^5W>?
%OSQ&KV&59_Y87WR83L`Y89)9<etL,tX5ImgHJJn4hT'=+`a:CQ9>>)G!hm;VXd]e`7U$$l6g/Z"[eVg"WUo7f1ief)f4Y^;WVJ@h
%i\PnoAeBf9U[<ZFea%>s;SA.=oSnpZ&mT8G10VQNh`]Bj4[rWZGN79?^23CP1oR/nAcAkLAbtb11gZC$]8]LukA-kRoGDE[>clkd
%gQ:^6NTT,C)\#!eqeV`f!n-A_K7n-3m=MrerjFK'I%.3f]&XlE3EsMpY8@0(D=2CuE5ZeiX@&&j<l*VSostfG]oU;-NK;2[IFp0A
%+W(&[aFu_lo4#=ClWmkPq6h-=.=6Ip7LI7]3eOGJaObO"QrSD`S.=?jgBCZBpZo7&<:=<OIH+fl"@BQ?<JKfPUi>,f8*I52._(t\
%?MA$#0;Bhhb.TmD`2p=ih1YDIm_qtkJKZ4El_[%1buVYtZh:mC@_K7qoSL=hE0beZZ@k#N^%U%fh'Uk[:G_3WY@V7L8f@/0GaaqC
%KjEgp;@oSq&)2=)o4d\DJBGo8:q%,oCj9Q0rb+m7TrN!d*Z1&q1hR[jFLgIPWFe(G#g!/^%.C$h[=pH<6)74V-k/I()18[<ZH+S(
%=R`Yl;:h3`V(u+13M^"I73=;0S$IebHBs_0**+>/&W0G3Y%6>MU\K%q2kPc6GajUdd\+0-ktF9akXUqWjXjP.W/ZnpU-.9'>Q*,S
%=X4ECL*!hfQ;DH3U1aqE-VZCq_!@7'%iL=8(35:][]Kh@1*L#/TlhlQH?7&$c4(NZ2d&]ClQ<",);$EW+dc6krR(DGq(ZqhmkuV)
%!?FYP`Hu4R3[(JM8.0S`aI*X1(?gu"$g8\fR[]SK<#s!+@0ejQ!/WEmOfi?)olFrK6Dlu81^FZb&1q]TFr,$CoOEVoG29_;K$hhs
%Ac!R!dl6,ti+=Z?4D'u5.Teuq;=o):NrdN[A%GYirGIl/e(LBLJpqRQ"CQ*#J\i0]ceV<V>mh#DQTM):[N<]H"\K/-T7B,#Xr5/3
%(OTI.Xoh>%^Yeb,4h-Y(^$_/C!ZFu@!\](9nM4&"J4]kkN??*)fQ"u^oh]430W6^&-;rq#K>jcf'/r:Dj[+*`h@?8$qqP!Xkf5lr
%)!CQp0MBt-EFQnUqXffZX\js\ds_$3MCeB"@Tuiu);nm)e;V3GR]fu0)Ye+7Za&'-N=`cn$Uo4STX)K^&MsWdb(-u6;C!`$JU2D1
%6+ZG%i`N:C5[MJr#*Qr;muFBZ<ogg%@0?B9"nNGX6$u)(e^A0&7J:Z@/4hTT4-!00<RX!)M@F@0s)MThfc*"HBF$"lYq9.VZd5KQ
%[@"r7rReH]Q?!]c.?]0%E`2q7K@Fsu37>K'`,MdUi,GtR5#s0P"fS<Z_gGLsVjE>W3n"Tp"_!VF]*UFOKXq`7#3!ZL$-q,UMPV4a
%23q2BN%.qmYmF!/q!eQP,=l@\Z9Br"Q`prhAmAoXcWG=X:Msom6FQ4BAB]^QZtfs/c:`&nUeK%t@1(05<LdiiIi+Fd0/tZ#j+BkD
%^6Vm]H1?>M$?8Whbc;kl%Z5]S".B%9dlY=Z[W)R@D=:=CNPT*$m,MKYFROYJA'*='bFrPj[gMPofQuA.<:@/Sdl0H03A>/PLJk-\
%Qg5pcd'Jd;"aA`!D-rUV4q<-?aYufm2#7Q?.`;.u+rq_$b>X%RMa-";A>CMN/4U7Z)DYDdHu^ZUJ#7g,cdgZ)#Vi%gh[iJ*!E#`(
%lYc2YfRcMb$B*:=ZO*WpBN@M\RuKB1?3Ud;bcuD>Z&%ml9&-)49Cut'.l(*kZ503&ZAWp>Ya4"NL2UGAIPaLF/$GUu6d)>B)e<P*
%hPVsB22?Y)8qef/=2@_GTO":>GE/jXc%KKK1q=qD<QrJJR]r=T-9KkG!X/)heM<fFPrtVZ)!I'_3nC3;cVE_5K+nW=KZ5$)2(7U[
%M7U<T..UIOJqqN*e%%fF3fXtmQiMb%)57lmE;<R`?3M-"+Y/>\[p^G\:".p2qN!oS?/lJ(*Cpq*-!kfKf9mN+2d@7V;3)psZSArO
%"-AEW!jR/)B4PEOWn#Y-$2mt9;lfR@fTn!J?H:ElY7C,g"g#I9T3ZOZ>cJFnfk<F/$8Pl!d1MV8KM8NqOoHtX9[R*cT-^q>JsN#4
%=obXGN8r$7LcCoeF1hrT=cp.bV/*(NdQJEk)SD!FV_`a$nh3HN=0Pi<8<P#V=NQ/a9!9.4-)]hMG#Lk<48?dN$6?EEUYd#kUJYHn
%1Mb,3c+MYp?*.A\$Cm(3*Di`<APMC/*Xt--X'eA6B[mqdCA)lOHnR'bE.&a(OT]0t,:ZS8ic7FQ\<DJoHT$*3?<VNg[5RC'SIk+8
%Q54o/Y884<3'>b-CaebK`K4_DnRAC2oWBjbprWXNNN>^ELcF,NJLT@+eH(-@d`)Cr0EQ/2#_QCtP1,_G[^/GsS[6I,1;:dM,4h/O
%>0n_)>[$cVVF]5BnW`f?FNe,*+<;4oLHB[GrJXaMUE)F9f@2&Z-6SZ.*,+pd'N/#fUA-2,_C6Ki7`ST]1$ji#"^il?+/JY8]%:UM
%JC\H:9&PH'p8Em.2fAI1,XZ$)TH@sLED'R@o5G<!g68De]6C]9?ke[XS=nX6bKq;85r8,$%,Lsjq_e##6(b9ZXPA1F?Q&^DJsEUB
%\>qJ.CK#lP4M=752HU1;ndoo,."Kqm"!DQ3b$JpcoX1keLhE&i#D]>=Jt\ADCdI,qN#D"F$dLUN#BEsK[8kq^"2-Kn0\7o_M$3Oo
%e(&\K)M)QQd6!mhe`g!C+eGejQ9G86d#XTp=MX_bLl_:]<<E>4^UhK&(MFgiO1U+;KT`7masM!s$R:n6TShPi+og5+#r",'EqEpZ
%(_$3@A*A+M/VY"s!WR.n-k?b6=$+nuS.fEG]P:&)"k0P2I2e;0I[;dS[5'>qk>4%6kNS_gEU``hd9h$8:2-gA[<^L"bZ8NG95YX1
%&:@]!lAsNZ$FqeFNSgU6iB07A\aum0BFg)qJ:dnf=,p?JC`\e3-.U?!oZu.SJfbK8.t>6G`4kqJ?-nIRh$cSYZJGVh%R$l9._(h.
%ostU3hKsD8DnK-fA?WK.hNeetq77Gak[%S=_;.#!gQuK!H/VN?a%4c`D\RqB5)Vi#UkI__X<YkR,)o1hMd(4G6^)UG31/rs!C]B,
%UM13Z[g_jn6m`L`-\m[AS5GE&%0)-gqubq*Vidi]mrts/2H;s<33\>ClJ6q&g;T81hgZq>f6e#NHp5B#WC**o.?oMJIQCmdoj<Q*
%D<oJ7;!`;EbhqQ`Ai-DZZG!e9Ei][Z8_sWGM=5-SXTgqZUOeG:ZFVf1O[ncEYa)Yo'_if]erB$k1>6bS,ZG$#JD>a([*/#JL#^#f
%buOuV7=psY^Xg'Kk&/uJ&D@8@/O$>u/cj#4d!c0tG"J*^VMp:*c5h=+!/h&S.<S6.LGVX;qeXK)5Y:p+cUo/lo8W<9WoU.a+iOWr
%;"eOKPA@"I\Aa^.aP:[j4Hn+)L%?LWZ%S8HrKu\fG%LAI0M[sQ0/sVopQ)L/=o9T\.`IhS0;1EmjF>g8$#5_XX+K/k8<j6g',)o_
%/Hha($;->D@!Elh!26".<+)8Zs1)+(pG"MX/3RSX13$Cs1p]hQ<mSK(3rEKL;FnmSI50J^!?op&6`\pI=+]LJ6%:qtP0^0d(W9Qp
%d[s\M.qDboT@$.&3L6`sKZn'p-s=j:0F+FA>$4a`=#jri6n-T.qBs"hkP'#cb\$`"KTl&hm[\02`n`AH=j/2gDG3:MK4jPIW^1VQ
%QNZLd(mnJ0arUBP_gPWEd1'0>*I1V6Z7WITCA,O++anWpib?J-?#QKOP<:EsC8.)/nMC21,;7m"dEP78gfX7FLs)utm1],#P&c.2
%Z%9;9RB*<O+d7YH[Y(LR<)WO3UU[gTVt1TSQsPH-]K=51\7`Vp>Z@0d=b"mZhn&n+q7XV*+LHL)!oPD'Gd&j$;()-KobI+8"]iIQ
%QESo2:jY?mqRg/gfYRT1epptabF:!Bf`l]+Zi,4%CD-"9R(M]?`W9/UJ(\)Y7'r.O&'dpi5.tLR^2c]%Y*%GEVAIOAZ<p$GMOjHW
%ZGKm?ZtV;=T)o5!Z;-:R#O*d_YW$S#d.Dpr8$li9l'jR?;J>/`Z5>$;9JV>j9pUMcZVVMcT3_-!8NW?=\o@l8,%L7Hs&mbH#,lk6
%A!.3/\je:;(YNcVb[o#2C9T),[fMc\MU[<.ZkR3bE>6W*-AOqej);MAT2_Uu)/U\H5pb$Z%]S4l+]Qao>%n.V<A<#rSsJG&l_NO`
%C,"=I>Do4L*UFC@F-*:%cD[rU9W6L*pleG>aA$`l5r-l0C+l_s3(5H;-]++d.`YPF:81SDEjS9T]/TGn=!Np/5srMnQ#&o5TDb.f
%W907crCgbfW+*-\0M>@[\b>5&eQUIFZk_XLPrueg#1#PO][hD@a-RHm5PSnb$6HE3:r>&rC)b`<bk;`1::A#1SHLj,C\p2i1aUC5
%K;tT,F=B56CN$YLetqHO5q'9H/Mh`&8$XH9iZ>!bE@$ZhBpA_$k3Yp;WSZ"dG]"^iVN>`cMi),peb4P/],mc.RoU\%)P]h/<UXpO
%8MlVZ2m`#E(lMEjbFj%W&=+Y#Tc[ED:6`)XQ9[e1[_%%'<YVPJQZl#p"_W6!'hGSFV,(c^L6Q#)fD3jgHVrH"f>=b![is:K0.[$]
%caj`_n)@SR&@.k0TJ2.mQ":]clc=D.QYh3&=f"`c$Z;BfHu7hknkW1FKj+XUWZ#@ZZOihoc\<Q<(`*J,=[[@k2Vd(ErFthk@Hog[
%@Si_&fD^tKi3"?Z)4s2dmN<[tK\\[4.@7kjg/e>pTDH:;j!iLC,ZOmq&#BpMW=cq7HY"+@c#7H&[A;NS_92+6+k!.cBPRt@R.NB=
%D:FS,G1&1BCH6K6A3sI+68R#a<KIR7JcZsBh`\>b=eb;&dGgk\h?&"5'@t!rHE`5Y8c07>TGpk1]bFNUD/J6I>QUp2%\>.A;!J2:
%)I\d_F?.URq6t<%a?*.:!7^)8Q!?-0Ul)Ul<-(t%d*ZH+_;;do%=#1(.IrI@M;CR?dT8:g)`?7lY>506[6IeV!$[2eL/="/[s?Oo
%?),K,U$:#S3In4D4W_t2:1pp-VdO76'2$KrTVm;5H0)B&b,/-5e9RnEBb"Y1>p@;:b?h3t6;k=9qU7iXPo'hb8TPPc_;OXT-ELE0
%DU2sZq-usR&Y[N#^9e3m2GX\5AN1?8A5;)4X+Q3!"PCXVm;'c^b#N):3lDd;fju_S;!]^aJ(c^h/#7"ES_>nq)7.2T;Y0nT;DmPR
%AYUQ/XeJ6Yb.['sd[CP>'@O-32Ob"S6#=?#TTU#bo5p*J1'mDkZ03n%>%G5E8ES82-',&J=J!@+j^Og'NcWH.LeD*0D%,7+:j)G0
%BhDa8_c;h?W6(\!0rjQnnC4VNoKLAVK;Bj(ZtG5eiAd1r%p@L9'3t**'qt^3`faj!/TlQK]?i3K,R?r!Ph1tJ/FnM$K]^F9]:'nM
%drC4hq<G"L%*HY-,5`#E@tq2;4*VJk_mR-eO;%?PT#2r-V^,td<n%Q)-"n668IN_9UCFiHRaO7:Y#:;[:80&.OiMcmRTc#;@O8!P
%VkA&e.-J%)$lpi@ZdFCW<M-U2e$D_R5k;4H&W+'$'f$'&/J93+r>)"#i(9L)fbrDi>0NsshfO[_Ngdh@.1fuJLiZDc=b@E5rkV<i
%:2o._bgUY++2/#UU?&feaWoD`]#runWo6;`eA(5e?fB]OrPBgk[,?-$R,,f(P:%olkrYphAWCTnq;[k5V6>g[G-WEng<Dk$2mP"O
%9rf!#3kO;4#FB;O]I(W-^B=P#:'?C>MRGtt\?3r@LPloa2@UX),VQGF4]MP1U"ilY2mp3+Fcn"C_&L@'$Z9H[D3q92KU)UV*H?cd
%N#?0>dAnJeC@hPQ;%'B?WEfm0*5T"\Vd0iufrEY,&E$Xap]?5,]qOm$6T]:B7(P/@1kq<,gs(Ml:m>L0jkDt@a,FdAf1A`mMuh>0
%&j&[$F811di_UIKD?3ucZu]]2Dm-^cje13Go7'Ei[sj9%[&=AC((e^[0P9nh'Q'!b:SDDe4nn6b;^p6]\$uf?Une^Z/W+nDRR(s4
%lb9,?([Nd0^<dh`5C*69GU_)'7XhG<,PY*?@efGkGNH[9YcjYgFUcbJ;.Ql&iP1ahl>X.:L-]j2#trec"^.k8r9FsTd=Nl!:++h1
%X[rP5AA,,.-*0,f7E(-A>gG.EAF"oIS3cUCa;"l%5b$q%U?=a?9['[>QRehD80tFD&lPuI7l8UdoVH$0$=jJAQerH^%\aE=aaeTQ
%UiKLOkK'^Xd[*dKihSss2>)6a`U]1mKbHH,LVi=E];o>"qA$B7K\`PYI]j<I=d'&)nC13d9h\X4[=Ch<;G>cTo4.k#_cE*bWCMt7
%.`MZR\CKiJJ5=&+n7a9Vm]chjlFO%?8+^pY\pt_G]Qer5B%:9E,[;/+:iEe(QWJ2a(Q[kf2;lSRrXT9A.P>;TL*RR>2bqJHBqWdD
%NYWV<[+e.>QK501-4Rmf\2,rKr9SF*MHKdhh9<ur>sR]\o^grS^f&lb0Nq9m's;NKp"`!L^(&:Orkf&r9Hn42\`e!D3$X`NiUVoE
%ef"n`9S9?%n//:o,\X"_$_!r7rL[!=[7=GDdEOLi$j1htdhX?NaRD#u>.Als,`a:X`HCeZFt^aGdD`91R^giiLLC&j\X"pBU\[*8
%4O+cmkp7%9I_-?mS@[L1N39=n)==_Zl&#kM'XCEH$8<DG(uq-/$-rfHqFFopTcZ(UH#:lJN;^(Db-WShVh`cEi'X`Y;>_ReUmMHM
%51)WGKX![S/d:L6oH+J8!L2c)W!ObBc*VWUL^]?RTGFWJk60=-MZ39^:9GO-"_=BDQm-KbjIARY5][OddJ_XQ#m:%;OoufPkUrAC
%kg;Y?6(AR-%'t.bQ#$+3+AYEHo\lgkT1tk>>@u:8?uUai9p-mDSBN5hN4,k"Sil5YQWujAp<B3U-p7`DnnC.)/-"EmhK?F(nK3VN
%)3+&^X+O/1n.#k*,=:TBPP*?gL@aTIW5re\Y#j;F)d,ET\st;>C5qLDI73go*h@@E+-7399H5lUIY_W:AiJ[fBDclHAVqlW8Vc,O
%M3T62i"i_f&$">m>?Ps,RTp?3kEUg)f,U5q<+](hZ?7rYoF#:I?XU4PCXBLj]HDinX6r^l,',Uah(8p/1"4b5q_8i(mqT@5pY[HL
%430JnS'n-6NX-Juoo6U0hoYI!G5U9V?UQLc+@"5*GA&9]::p1mf"&(/9D9m=%RE4>RJEmr2tG*k""$BAQjJgO\j9_.Yn*h:ek!4@
%heGYtaa:^*Q<Z-;?U27<q*6Aj,QIE%>(jlF23&NuM_)T8?Z76@*qT'[J15b%iV5ob/S>]T10q)qSJ&jdRB@@S$2sc\,ufo&>_m18
%-TUBln+\@;K%7!jY/K?5S4jbu8dsi=R,+$d1XGXrEVaQ&.]N8V9@AIq9A*jl)B>c6NkcdH+8%TV]+!34c1Dn4+.]i)r+rX,6(JEe
%j>k<H\<oB44"7k/+pl.U*0s95A?9R_)-Xf+m[$0BBE#./71>C_j`JuXR[McB#Y/nuk"rCQ)c'>mcL9dmWi;<kKa$(+1N)9oSn(U<
%;%+VmY4Gq2[XIGi5JFIWn805ID;Bi6UK!JTf^M-Lm)$Bi\<B"f\>;[HmKCW9AS=X#5_=sB."_049c>Je_`?J"b!H*9Cla6hB%0Od
%h#Wu,0>nlsZ/^$A3REM(/@8GpBU9iXA&LqLk/"EU&c.BXb!YQhhi7Nil&;Tm_)-PSe"r@,ei(*7NTSqW7+irNL<Bf0jS$DVkf;E2
%>A7/)q#4Q;]O2?JS*oeg*6t9I2AjjfiFo81jQ<8UR$<sc1MCUkG0,gh<3Q/N*R2eu=]'NfNZtFPC=g`HP>4j"U@Tr([[[6(.cU:n
%)_6&#LjfO35qO\77Bd87OSuPTjbOQWbp?J)[7fj5je`M+qNWa4MuTTHT#_i]#qI6U,O#-=A5*4b3#aFHGp]$b%o9ReG["W:1pH@V
%]>Q'Mkf6krWlkjM+9I;/^CIaChu0l7SnE/Md689YK-6g0?.)K:@:&:ioim@'@XG+hE8ah?/J%_kE!_N7:#2@8ftO7iQcCD__W&d#
%7\eOF]icn$&f8/;]3])]g,`-.;H50FP`h-2#TMuSVA&X$-YK3T^LKm%i%2R'H??NniQ(OHB9M>jqe-]B#g1pX\a"37,)&X.EL!Mn
%-1?jZ7r-"2b2VIM5lmVMd?gb=9O4E3NaVSu:]KdN3(l#9@itfTKVqYrkh6`cn<ks)M$gU8$]tRVWKT8AkX0E:`o>D$F,>1*Vj#_H
%fbIc@MSk'@Q2i2Y^6$CbXY2-M?qF"7k@T=A*iq(=3@=]VKIsO;4!^XpXVa]sMY]oBS<eda%bKR^_&T8E'h<R+fBOpCAUJ8q(P'1/
%%E`EeQH8D/d^VYr5<$n%dS8M5kq7daJkJQL".nB&pMa!8Nk"nbeaMIKj:3'ABMM-^6eF(?O!2/Q1!*D-b)j7*ZaI"5eW<Q.%aAg"
%+0g*!&n&.mQgs+cjTo+V@HfCb1Q#t]Bq#<sK85.$NoEAYD:T_:14phV43?u3c]qei@MF)<;tkhTa)Y4@PbdK1a99@OU1h3`W2mh-
%Z7Ne9.Qq"2X140V?ReE![4m8;FhP5:WX8Y%2dLY(:ONsg;MIIl-tMr;U?t!E;PcBuW%ReWY(DQ>2Trm2Y-?N@AVWd4X!5dDA[`cp
%4dRX2\")t$>u\)`MM[VR[3D)Y8'*PaoL:;ZdrQ/(kJ3pLaTtQUZ)BIXHm6m.MDcd-Rjb!;(C"b;(e9;A]Q2l]rgMK+r%?9MoR/8Z
%?=fEI"K]dCZ`hCBiP5!"X&o.NU(#;a!SSH)h2%RJToQGnaK;bf8uG54=4d5n/\%Z?Z`Jq/9Kk8,INH`Em\;,B!1OQnOQs_28bqb@
%K+sNqLa:[k3,e'5dBR4$A*24m9Y11U,A"AGB'$H(Pm#\RjkL8/6W@]2^F_r,^?`.<F/"9=U?fo&k9mqmc1OV#*R!X)o.ZU&L\XT/
%fP9^!r$=5t3#QN/MdT5N1GUa<_P,0/7^oJ(;G&tmGF+]Bfi^!T*u/%L^,j<\h!ig+2]mF`ns8q-/ZF`Z6b%P!jk$/-j\!MYB$cpf
%kbo3+:I9=5#A6=VV_Kq3KD@)sZP>L9+1$>*@gp&U=5uOq)D(MS2Y3Re(F1"m#;A,76M%ap<:d0/Q=Yccr@_<>HoV[8pB'iDKW'JW
%n>srl$WkTMT=\]n8iN]U-&*&.Yffu]Q4%[q>3R^"8j*\UhNB(hXFfsZc+R`\a?Dboh'KeeTYj@HP4"N^^qc^TA@N)-@L+,94soIb
%,XkrM[iuN(H?-&YR?]T7V@^UK9$M^*4\P08rO*u:0m-(u\FXD--/,I)>;>1ikup<($'MN$d\4WCJ_VWL9HP'gHCcO]Si3\).$gc^
%Rqo>:+q3(iS^&\d1_2/XQ0J8_Vq4c#U@ob:k-:$jH$<0OGHmk!!K\qtm$lo4MQd!9`moMDNSr==/IN(G?Ztm6<2'%$_WIG$b:FQI
%93>>ND5]OR;@c-7h\o8S;jgW3ARc4n$6=n]jBLqL@UG5:9.uk<ZjRcQf+#-25X0Ji.(uICJ?s*O"$M=)n:?Od3hTEdj[>TE]D:c'
%`4rSCc[RAlEJ_d9a4\36nI4We>,\1=+ci[9BJ2*T'#,22Or!\)fcBHbr3an4$_>/I8P;!G%sjV&-7?nnQi=cY=S.7in1r32?-t"e
%d'&&?ipZWr:8fdgQkSR/rd)sPFg::u8:Bh%)F6U=&:O4$G;`06qm+H2Ti8B9MTSc`4fcH"Uar%sRtRA?*pa[8L@VG+Bm>C\3K0lp
%d,^i-EE<4(b:1S$I>pV/c\Cn/X-NR!-cBbLm`sE3rd%GLAJt5Un7.lY'clHZM:8t4*feeW4kgD-\Mc'r*rYYu9P=!)0?RkmVuofn
%H@;VW\&DCYD'"2[M<)3Mpbt67DX^+s93)ctF!&#A&&%F?GWpio)r;1jk\6)o]E1$VHC:rs'-+jW:TniEX-Yu?!Ts.q6+9!Y\S[K%
%[M*,XO$WGq^KslV=`k\nIOt(R!\"c=?]tdZg'h%:F*fO<.nKY/dn1`Bd1F:dY=cUs&]H6#YArb]fe0bf]\dm!C#okqBOCQ;-`XU+
%P8t*]/G!F.36-X!bDt-Z4kko\\lp.'If3mCWI2`'*0*c&lr@$[9ugg!6+=[2\_Z9<[M.rb*FelZ?SA@$X;[,=5$%J;(Xg":Gg.Q,
%Cb\%+ANiq]q.kXL=**HS@#3`Tf-H.@\!aEAJj[#`<k7&KosP=/g;d\!`*Y0t[]DNM#!\FL1)]:Ka2j=`*'N"\Oea<BT+(sKGA`Uq
%eo^P.N8[O]q7=6PD#Mg?)*;r.CmS@ChJYJ!<dU=[5Om?`W\(93UVW"&^.j@7f)DhJNh1*B.liXqqCLUoY7eLYE0WU66Ti3XX2I<8
%VsChMcu$$fDE$6U[LlO9(ec%HlUB?e<Q3A@a"H6R6aUl`B/)p&(+23DT2;nra2_S`+8m*fE8B&kN%o_XRVX"U/[igh2QsT\&?C4Q
%VGDS5[bA%P3#_]sk0%9@EroS<D)+VB2T+?`imB-<Of!Jp%#gKk\,:R"k%rj[8[if]o4nJ7-JRW_S+kZ4Lt1?/o2#;WU2%lOj(Rpl
%R;\941T%j\bgEcAA?!;o8eUC$',b^5gM8JS7[34?M9EsXY3FN2gL.);DXi&-$),qj?M8f.\Q1dm%7anMX*gBErpoogQ&_FfNmOqT
%O;3RlTV+3B?hQf;Uip'N#J;DBRVNqTmBt+(-EjnL&?C3fVGI-_U=PQ/`R3J]/meh+Lc_U)9'PQejGXJp=<FL7n.%/5J0IkO[TMZ4
%Bg4286(Y(9]75g5b@8*=C@Zi.L/dPW1&o1!0<2I^3fXD/QMEEV3VV]P18/?M$_q6N,_l,TZ(.f4rE9VMj7sU')*'$)\GO;P\h1A5
%m3]$GSIhiM/>c5@oqGTh&$"W&mUMT%K1094Igd[rCbkpdpUNGN<][o0,FeO>YV`3;^$A4FCDk_tld04I?#I&p^MOq+C45HF&,c*p
%C<86`dG2bp?Ns0Z>iW<0*'Ke8>ifaW-%ll?;!<`k&bah7Y1u1DU`gHPqB7h?>ATSZ(0b]=+]`rZbWkVUfl#!5j(Rpl)4?G@(diu?
%C$:W]eHsiT-:lMj&[m>b31D-M>%W#Z`Z$7kE&><cM#/L00kV,^8%"g.;0Cn;@]VQB3fV9(BZ[hB1;+$VdP<^$>T!J>>WjJS6od_5
%9DX(KQl;8-NXs7fY-1<`WhGKY@XBCQJY^A$FTc2]TH8Zu,`0d\iKWf=QEZ<<b'M3e/1H4F7sjk\:LglB>B8N-EA8Wm(V72uqlN48
%AGS:V93MIhQ?8dQHJ\hR3#jN(Obi#?EK=!61Hr]W&=j^TPSNGSCXcF@0\3S&N_k5NQ5(%iHuO2aE0H?(W96eI$XVU`A.dcJ`k6hG
%;W94W!r[Dq)j3jN0s*E<Osh8AAoY9(73Wqn#XB/?a]3kG]OA;pMI%f%dNL>C>dag+j:WK\bIXUHf5AOHelYi/i;Q@(gS``nrqT^k
%Zt\(>6X'5k-09EFJ6Hn4T1Vua5bdX9@_6![iJuO_?m7V7:f-iehd8<VM_$S&#c!2f&78A+]Y9Sa\4X-P+GSDics\n:H0Z)NVO!"<
%1Xn%rO#!`,D)5C2$GZ4/Om#Sj2I#6%q^HV5N\l`_6='qT+Na\hY@reWPFJC]Mn5;/7n9lkDra9.L\b,TNEa'7mP5Ab?Me7-Vh]^Z
%aeP]OE?pCS$m>l7!%iMiqLE'*-rMSD)S^Dl4OtS(DdfdsK;;"i`KMMAdJ;\A(!L<QO6JD&@os4LS:/Kj.*^0G0;o'e(>WG]H4Ynq
%]iL9[,?U`VYpacY)kDG1/T]a3BQV?MQE(!2MjctqT9IoWH9$75L;g%Df3$Nl[iAHVmUTmp=Dj,-992jH]W)58Tmq-sXaYK>c\arE
%%*bM;8TaN_@<&XnAMd)`;DT1bWP17Ci'>MF8'6jgh*aH*U9q*T85unT+3%Rr4cSN*?c+L8L^&To+V[PL*eN!A;rVa4XnZ"?JRD,j
%kmaLl1:)7gLps*0iEER$ieR-i1U']X%2:0sTn`L)iK(QH95,#CZ(l[?`Wgds2j\#fA5Gbb+_(jRi*`B=:R)i/2b"0#CNC?kl(.:F
%*(!4bW-[g9KV!NF7*+.B#&$RHmq$*?!8"iH6QB":pV+`N4jT0\48*aaZ<"NL'jGT<U&!f]oagunU2%fMib7ai(S@4TZK0Y6dQp@X
%?cr%,8[`&A4Gbn2(2hcZX23;YXZbYQ@p2oL(0ihY>qqIaa)ik!o24ONL@G1H@TlZQ&Ki<rjH.Y&U`6^B+J#hk0!*CSi@5mG!Ko&I
%O\EEEm?7#BkW-g]k;Kb2T\O3)SND/DIF_-s50g,+m3Q]MXqCR6C&H3fL/sBhSJ'JUU!bkQ9.\1Z+8!Zh\=o5En,Dj+"4L%hY5@A*
%_;LCro0B9j;/GgBP%2ni7_f8"#+m6(Vbq8ANL4rA1:n>=('q0<@%nFY,>;a'6@+GZ2'`=uFHauUaYbu6c.aNA<iOTkY.**6NQf:J
%?_"O3"&pkf4AHiDLk]Rnh'>[t2\/?":MHk;:Q[30I8'\''rhKfX<RIpc=eRl2V+TT4Rf9];8H520*3u-c^I:>'u?6dfBuE>q9%,:
%`6@MG\rJ#M[nRr28MjaY73mt,J><uEH^AQSn=3RX,Z.e`g"ZgI:@D"24UdV_H-'\5>=E4,UK>So]DdC:ruj4GWFs.$#%bW\P]%D5
%'q`L-!nR?Z8@M;*$^JsqBM8:/*QE_,E>m@>X%5Hin8XQ1An8*IBu!]3;BfbRSo%3*CNJ]B/09,E>M_FMeZ+uCZhNrEqpRdeCC@H!
%dd-7AoNWCflLI3ei7;7*']]W5V#'CG@uls$$@3)^?d9(8Y-hi->H>YjgBk.=HZAROHkmN:b$&#0k!!tY3=7kNeb)8W+tdQNAHZhe
%$'KnC@[1*H8@YZP8l4MP69EZWg*.gO/Z1*F=Wn\V.""H9<tR8`GLC1T(2W5G`9n?:T>Rj\aCIso,KA=$2GH]1B^/4b0=GQt=ZB3=
%8Gs0\1-&If(T55ihK\<N7TaS((dG&a)f-#p[XUMO;(0B-&lZ36[NO#UJIf,@\7Fjne-5&BD>"g\3gC2Aa,4k8A+._5K-kJ1L+H>i
%UBIe@QlWqI]n*m"T%!'8%B/p$RpgVhVA>gMpTV4$LI<Pj9;V:?dD44FfP%s4OlEcn,pc'6b4&2`9B6^Qq[X&>/>c_c--"ADp.F0m
%;2gPsQW$3U`Q3bN>1VtbRl_q7U_bI6[2PN.`Xn+!Pf&+Y+pL?4-M*;:-14UlG(ugNSFi@:20_jXpp0eI42.XE!@=+J.d<Lm(24a:
%Tj6ENPUHVZk'H)\QGq.<A!'nuR[U"<U.'5t]s@G+A(d8uftTV%0ZEB^b-JG"g0)AX=F'49)G'/fVpW%NS"i=WlDGVj-2Uj+3MG_+
%9LoLAMt`d4iZQ82H5gSs$b(K14#ejE_pX_6&;X/kQqSu@#Xn,f]hH_CbJi4UfBT=ZA/&2&[ej,2IB=tQK?o_$N%ag.(FV4@+"/?k
%r`N9hB(k'eJY/Qn&P"-LIG<lQFm*.4<k5nIXLF`3X*p9KIH%FH<EiKE7tVo,Ckp/H_t>a9\;V=s83MQl.%M.(J#*=>7.3TOORHbB
%f@=-t-`:K8@<i9p/lBUj!Ai_i7e5J>5*[0o?Xr*i5q'>Z_B:da18g>(E:d.IM39ehdm#L.FU;b!fIg#i_nkH6=\*rXlDW%fCW[#A
%>].ES1uJcn,2R7O/5=Q/Ib2Xl:uh5ieULD;_\fS4#?p:E=1r`5f4E$+I\>b`%0+jF5DuBl8r<\q>[82!TuS/4NZ++B9>>#90c5+L
%:m4$SJcp0bi"W5g/-0If=u&H"iq0CqN'GSJO,i-%CQ]<!)aST>M&U_f8[2V/1l0kc2G#P)6sJ+Qa(OX3'd'730hc!c+pDOp7\!;h
%%P]R.WX:em5DX!*>]:XjF@&0tMTasd6d1-/V\c<\+[3g/]j"*8XM$n8^arfMB_bncB3G2tT"Vk&mVUuB;I$S?.lR%`Zf]IA"e5@'
%$tV`PVbNd.WFY8SjO5t:W'sjVZ7Mr6]Uk\>n'5l<!/juE:ME`ekBJn]#!Fu4'YlP:V..(?K_c['6ultZ^(\Qa<eO#@'JbXuPLT*S
%O9(fIb6+Bn>$X<"Z-#X+.7=F+SCWFVZJ*Zl^1$hmI_bG0%-]D[+/7NRGOKA:Ng%kCAiWA*n"cd16Ib5F>nWotDNo=@]9S9ZKf,l`
%b0^(.!#_q06=t1_L/_m.@<l"_@8+,Gie(08;7!4IZSma&fN:qhj8oq(ai?^o3\*0Q$WY&FS:.10B./XFIFb^#S@2k@B-.2>KiLcU
%b):>Mk+[$1P?uFA)ha>O<4ZskWL3+d1LtX;*uhdh"m=+kZ2)j/hck\K2!rVT5j5bUUF@EO:bV4LO+mu"ao1n,U#$Y):gtj?5&&#b
%?b;Zj<Go#)lYS#fC7d)/54R6_W\(93UVW"&HsK<OK.UE?(b&2'i;ab#DTkEAmO:cXRU''lXnb,2;IB86Q&=+hE$Scd9O^b3-q1&6
%GLe.A,B\"<:XZ7oG?"]FPd7bo8Og3bToHVFC%9Q$m[YegSJQF'N)I9R1TU/S#1^*k8q/9^4+[iKPGUWX"u2d6MDn1t?`^?Xc5n7<
%<>BAMW)V138JdL=[#:8H''ciDZA&O^,opTI]'!0sP%uUVdFPVOWmg'.M&+Q`FfQ3d3$@DK0IY4objS7q%E8m7KtnuMVJ29)\M2_l
%&gXWZei7N*6bc',jI>AeRAt2+=VJ]&C5\)t2:l,A/tC2@acI-65NdDB5W&"EEkNm(`"7>'1$Kj/0fa:T2/d;gqp@0(H_X7*+rYA2
%PW!n4beqJ(o2&G[F!O8pgJYCRDmS?7Z^6r[N<n<oBh;uoONgW`lQrnRMu\ctSWP@\0pajt[+%CoAj+mKXu_b<ZqYY0(?r(FXm4-V
%R9U*MU+L#$\.]k#l;3Cc;)79!U"6Yt(Apta&_Mj3/=:fu`$k)f8D:o.\G6r(ph7Ln33ikq26GE'QdoX^Nu;WD)_F7BX&W%iGLN$2
%2=A]/>]sI+1FhJA)1[$^Tt;PaQCor!@c1RE*'MjaN:VEeXMZfg]eO%>$[2G)I_BDL[ddW0Zmi/FE$<g7Zq@G(AA@D_=QdBsq"O`5
%;)MlaEO>Eob?f\(*QOhlJqJWX5<8H?2/)+g.c0+K#;*#8Zg$4]$N4e1W],/pS'U^1+[D,p-R8T-!d>c60WM6o]t;4;V-!h'/GXG,
%[HMa3Dhk\)H/S00WAoBS&J;Oo4!D_Mf=[2M1r]1e3*t]!.$%sjdcZP\,q\k6Q9+7/H0n&A`>`F;U,Vp`D%E+7G.:[qCt@Aa'#N,9
%GPCn/6RfXt]&binXe."[*K#?@V0M$X+Uk=k/E'j,[W[3'TBC6"404%aH*0]Is/5*g`'Y*XV)K"m6!2Jd#slg2.SO0,(uo9eY*e<0
%F#=H5Mo'<X8Jq547e_%$*u@:,Zos"BX4,/r2PhTbI$h3WYHI%dF'Qn*CL)uV=WHO>P=.c4])rD>C90i7@fb:h$mK:tCllHm[enlF
%HNhP-9neJJ51nq-^g>U.`g'#>eh([Z$hDXgbbCEL%P8.pZ7Y>]p(Ae_0k$O70%DVp?:LZa+c.T0@i,fZO.L.oC?G!ob^Wd]K=i*6
%K,E;,9s]Y:5?GNN<7cmR*hUgsK'93cUk[sp-@$m[-K>t7=tnm%g@XRE2*7a6B[fBZM5qnK'Heq<qVj3$fi:=AOQ9i/Xp;3`Is9:H
%>>btM>lg[(>$HmOg`-LIqUgGXTH9Z5^8J(=gl'@N./r(9]P><%K]ZNc.9\&SXs\fP(s#C&>,S^,&&aFtgI-QuN'L:e7["5ge/kqP
%d'NnVa\*I[&Q-n=E.O4skXtMGC'kInG2&$QNldk5.I,UO)b-o$h;:a9,$%Th3[$kPI@R@_KU"YT9HQg(o$4(LGM<#[T^BGibiid_
%$*!"!o8-Tu:GI%Y!JnD5J;OqT@s98d4[^S3pH=@lZpMp:N#L3'UM!6R8$pU/-USORXT8UWnt;iaCM:\Tq8]KnM!CT;F=f/b8_P]@
%T6)ZrNlU<.'n+'Cc&(/r]h<!GF;fQPGlfgk^*G;d>RE'_\[fg>R4SC?[/M=a!@4CMOWWlAiYi@qkJAS2ho"kX#OS/do@cMH!:i9X
%kBK(P%[8M_G!0@s#"Aia;O*Qea?$4C&55D?=b4/7VH]`_hR29nbCpsOW/F9NRJ8@5#GRK!aZCrIC;b3?#B=Sk%i<(&j<b@N._Lpb
%cGg'@VhfH,lNDcgg2^#,I0q"MP`7.Zm.-NY+l96[GDVQ.+#41Wg^'<+1n%42m6[L^NL$!t(;H$H(*.Wt]$b#,RJlLo?fp9q$n`K_
%2-#72DJ<bq,rGQ63K51N=4J(#<gj/8;N%l,lEdI=R9?7HBlR#/&(c0dqhibHDSl%SR8-#G)XV#IJWis4V\M=oiu!6N`i`C#c"um$
%"M7o1V$kFoXrEO3&R-CrEtb8.dLLmS&%<n'LM2e!,N%.S3\r*qk*&[XSAMi^P%](_4^I_nX+"8lIV*r8FZ8QjqU7UA`8TS15J)2)
%1sQgrDig\0+fikQ]/Dni"Um32YpGgD$WeTobu1C;$&Ua3W5L*eOYD3dU["%!@s97eTV+aA#$g^ij/L_f<m^5qT$>t'JOb)YVo$(L
%GW')J7L2a"hJuq<bq)3jiS@GZ`c,,P)3sqUEcdoJg@g,i(G@o+=tF?R"0bdjHrV$*eJZM7m>]eS+IOtk9kTN2bMO?$.ic'^K,X*e
%AcU*Q,*:D/XYas9Z$;Fo]X]WTFi>%G3gQ(<iY0VKSrui@+Zm1)S7PP2],)]Jp)fAa=30]G2aAThYrc#_:>rmJob(7Jm$ipg><(qm
%HX/D3DA)lF*G/g\"ME+`'B(s0?LLE+HILB1+`,i50V)P*G4c-J0i;#Z\#$'M>nn^4[%9uUMQDI#a_b`=W"F7Rq"f_YQFqsFQrH=j
%BOO;hOp<^'%=Vdm%G2;g;s7<Wki!n`@`@b@8.Mg5rbNIja4Qpq4fd<eq4kRrY7Ws1-h<lu#nQIa5Y')D1RT%<I@/#O3M`__6&7PN
%!q405e,%oVmIuNp5:`(i;i#W*Rt,RcXD[[l%>"a9(Gb$X#^-S.-fof=G/e35&8+$)f4Ih3q^bsfCpu:"c(E;OjUDfVd7onfrh]N[
%bm/!bN7eAem!'+)&r=+#*it%q^uR(`P.RY.E(*6<8S':gKnSc;8S*9mgQ(!%$6;7IYF`PK91$h@bT>Sa9QJ7PY6bK^@0BJG?I2U(
%&0r%@S([&85p)6]"9*,+N2eW\s1U4V$%@9u](csO=1)nTeAr7J)54++,2$VuaiUIXfZ/l2R^9U=JEd":E>`)KJ%FiVWGM2JAK$XV
%rFOo+,p6RuZ:k0fm34-+_ZqXrCZKS1_nA=H`U)EC/1Cl%(T4l@4`%B]jKiLA1]hcbN)l7.RD#b'(BE]BCO<GL[/DjaZ<nYGUk%'[
%r"<XgceYAFYkuh3R68]0X:ZF%YS'bOcJ`+-`sUfr0l<]:@%%pHa\DCoqF*BG>^F20!i1'C<XIG#PqMoAot,.Tce:Uj\%kh,Oqd["
%LF[9TV+APia$=ZLW5ptJreNVK;8PY#Y%/h:+UL)-M5H_-8U#elEkI"%gX.js9DRff8REa$$Uf*'G>DC,2OmCqoK32<]lGZYIM0L"
%>5\;8.tW`HeP=u[j))mcP$!piH6ccF0M6FA*gYkfiI96T7sqlk7DH3$I$sYc#4cdq2P_=Ua(=nPF*q[0couP%,D_"G>I9WlNKU([
%Y-HOq_hPsq34q=Xb7(k2XpL>O*Z.j%7?u5tn3Q?fEqkU-,ur?iEILQaK2Ah8Mqk.;:asdl'rk"0,Z1dCO'"mZ)^8>%ohuL,$E<LF
%oesRQ$h4!`J>*M[LU8%$.tum&k"qM\GV$fb7(]M;"*s;BG82%>foE4;2Pu48Bmi-ZOh\7XH2-oP\WtA)?iB#c)p!nlg=rpSo"YQ4
%CHYLPoQ>Qk?GnVI2nL\7F\u$>qrXn;jq0283;"[-L=n+'3(DNO(m8as)b'T4#?%lRNL>D+[`Y8(@D[GGGV/pL^:AB]C[ZFJ!@X!P
%ac.:.0/?4ZLCeC9q/!MHfIG!8NL7tu'o_Glc_dE(>WuUF@)V<IK9u)+2bXt1=ZRFGFru67K,fI]_o6q:;o'gBLVra[+8N)MnHE'1
%!s;V\Ii4]M'c.4UA="V+S["bgOAr/%1e*h>/_Mc^NWQ5s^iM82YXinGLkrc"gJL`>OFi@dUeBp5SYBKEIgh/G\U#pO<C*a.M0:TP
%"Wn^hZ%HebCi&GfeNGC4JfdGdN\J:aqDE>_iWSNm0Z5g)CrGm9ph"'"'NkML'e<2i4@?4K&2`lA.<#g,lIM1Z7i4*H2Ldd.IrYr/
%p<Q#=gg>dO0kh#lejW674VB"edDYD_h.%Q'W5+D>mJ7S!jL392@meQH+jB]4ULgsd8u1*&^9>'[6Jrl2"''lV%RW=QY%g<]J[&\]
%3E+TPY.I!apr:rjeIYd*',&]fH8FO6MpP!E=JH1[[,1I%c'LE>iPWGZdOUL[p#%N0dq3Vq2?rm<cK5mSIKeF?N,\bMqU7P'(2clO
%#0Ni4D<h2r((ZY?3R*O`B3(<tQ:+"jdRu!I$?r$Fb="[8"@5.kdPhu"6ZK2?LOO+EliH8&)b>W/T<gp@R`1C%C3)PlEY>(T#mKfk
%P*j!WYXGR[SOU9S^65um=?QCV(O3hd!SXWtVCFr0G<H^H#\m(#l=$o4ZdN.)+mK]CM4tsU'+,XeRZq$L;W%S`Q?6@0X*ad-7aX:t
%':_&$PTT1AnlBL+)2:'q(9]Z-5`TfuQC:2'1;QIeEk+.pQ?N.IEdMtkSh/,P>E@^r*&=MXP/=UeD7*&1/HKb5ejTa+81FUHT9_7:
%fhVcj:OR-IBa8TmgQ_)sOTd$CKQQ!WcZ\cu5$ZM<:>@=@<(Rl20tj>,,mP(;)L5hoW5^)[R:64\D!W(`bNMajChH?+4sm6`-YEbS
%.5jes0=Ld((IHEhN@N?H_G-5q<E6,SjG'P3&_noU(,YXT7sPt?["F+&D@l&=+o!/s'U$XeUlgu'@MW$6#t:R(9bX(bo_EL$];Mt$
%n7U4?c(CQh\VRYmOr/fH:dXeMM(T5CF`.^p33AqY>cZ%q<6HB"V5+dipH2M<reSN&6Ot6./Rt$cn4sR3NsRK#piu,aVh=/AQ33r#
%UfT"A<!pT&P+<JRX3T#[QY;@S7R(Iu(7ShGXeE3Yqt3_u:YF0j6&Ip`:o$8[SKk:f1$/"g/nW$&I(;@SEKuMufi[GLLH=I6!9Kj\
%VI'WPP=snLakW6TQNXc)q'O?nia\`qc0b"e/A[n2V*-TBnY0#F>M#XPqYiLB5ePe&HmR<)EZ+i?SF%h@0r`l_0QB*G=t]D3$!%!_
%`6tYJ#f0#Baif;j,XR$?O_AV4;?NsMP=.ILoH2.&b?pET0]qb[OWN'.Uh;HMZsS)e2q19%<e+(;0,b-WFXrh9c6Ic_P.R)Kl75_q
%(-]:=%RZa!!c@WMN91\K0;CMdg-+qbbc\/0753s[P7KJ_cPo5`dKb+7@$9R-Zlc<)Q=TB=:TNC/Zi)1%2"bk(,34?O9\W^Kku.`b
%c.Ls.3gL:q+80(RGL[fcQr.b;D3q+[#+@sG5_q1]bG.b_h>$nAc#8`&^FWLA)Y.@M<:?^lWkKc9M&GsHni3V;\"j6FcCc+GO1(JT
%LX59oH<P(V+(\EZGq3^@TEpp_>[D&PQXLr"lJp8;9!Ju#bF&1[3oXBk2S7K'5C6Q3X*]<p($iFCP!u2P7sqAu0hUpdg5+4t0=AN?
%MX9LoXk$RM8l"6:&FkFrT!mTIp#Nqu9"fJ=B)j86WO(;T%nP#YF60"toBbKFC?MofGOp?BoH.%Ik2CO6Gf2^E[:#-3Tru;O"jW6(
%L"P90'E3tk^O&<,-i[2m`'=71rt@.*s#XaH+u:]gO\m6>$@.TVBRu`t]gEp-66%srJ-$KWr57SMYYOeeWZr5!S1Z8%9'&Bh>pqb.
%3na@U_r%60)u^@qCOk8LLSRG<^,Fb4!O5JN)oW=)i^f7)W/tnjg.,Q_+28]#HkormpAAOE<@MCD6/SE3rrh%,D.01GR:"a<12mAC
%pB+m)\iDtcoP,7g;9P:@(@#i5kCn4^T,k?CEn:Qp9m_?$XZei'5[-Ys-ud!_9\h&boRm#qYQ.SF(;hQA658t,`um=p_H.AlUj+cU
%-k$7XQUK0"UBt`I<6sT=5((q]'1.R'a8,f\bo6?/s1D2uD;g2]i>%Sr!'mra7<KR]IQcV9WP&%I'NW/-8'V6t)J<5;l8Xm1n'i/P
%YQ!^=WH"YERYM3`%B(?,cNs'0\@kB(#E\a9I6oTp*-"0]mZ3-*lO.r+ft1cq0cpcaA(kU=PdZ3SM8AhE_KOb6>T.*KD[8(<VC6Y_
%\-Vo3!WTf0lr6TNl0U5D)66<Q!7HLZ$pf,HcDKJbqKh5fU]J19?D\#(+.m#(`jG&%JRlNQei(505HSj>$tgk1UH6-V5h$!t$@us[
%5;,iF+d:;aR#`3TDf"mW/6qBTr/c5<n@tVddq<+sQlqkoRG!7f0P+!m>5FIdWE4hRXfq!PS2,rX;eBZ!X3Ze)K"hK`oCf.0@65>t
%K)7"5l*(U.0-TFKRT>guc&!O;E.."ahWX_#%Q)B;rH4gdb*N!/HGeX8pZtZ6-E^"60eon0_N/0Adq60qbuUL`H,]bber5k?;FcFT
%S;I9OdG'VSdSUpJBBjf9$&c+ZL=2.]fk$]c\:TZSs$2XuqaM7i5QEYLZ6upBBE+UF2NeU3[k0\(Wiek&!O$(GhKD4S$!df$TD7_A
%Z"a&NhpLGg<u7s,LM7b)\]j7c\dL?\fm_gFZ0([=N]IY\RqmZ>>'GR7*nY@_?/iC,aHC>,YD9N9ROnD;YQkC'T!-n1>O+NbCRqDM
%SijPDT;1OeL6lbe>]&ib+=*;`2W:.i&2d6NJqp\(-m1U/nO,\nL]\h%6?Lt#oJF:W`L$nV8f0p%r]!)2Ll=Q1C0*Fbic(pSDqiWQ
%r"J0>rjpM-Q<hUInS=Q]c0hPe[U71-8Pus'-tSM.&"nkS^HR/dU#Z%N7t+fNZcarTm^I%(e_XTlT6PPhr3oO-40JcifeSXQ7``p+
%27qX]g3VM?AT[E*qLN]tGt\EC+Ycr%?n/ip?.O;EIe9!.\%PhA4VZMK:2#HmlN$U#^Ku"s:3'j\*>d"@m)W\<<UM\o^$Nofs73Dk
%+#\ZsMlK,Q?VlR/KdLE0@*`?qK8gkpM,5nK6\g,,0A\8<d*Z3TL;54<rHN8_O^6'89dd1"BEt@Q4@B!g()r\A39kXB?aIJod9hX.
%1&LLkjB]loD/;-7#./-`9;g/ieCkQJ'fW9rK:0p"Rnf`0MsN2O^(Mt`(1skEDT3iHeo=%"AfG%#frnV>?IbVogL#2oCc>oi]c+QL
%pp,jJ$lM*"bdgDjU1t/OEn](-@Y?.r_2ugYmGhb4gmH]<4cCUTD-%H"Zn8`5h4"#Jh<%`+AMS\mA['^HrU=RiY2[VWDD4+/a(qmm
%<GUN5+8717UNO:89[X4-Y<do1^2fNN,''a95e`n&ZAn;GXOli?YBhjcX`(k2[MlIo?VTCBI+^tY$fI`Em4m=KW]^ph\crl_?,Nb)
%d?(2,^Pmn`\+CN>)U\%WaU)gZ/TeC5^M^H*f6\EQJ)b7Mh3e09C@\Ogb;O5plqG0RG+r^^l$RBDARi`,N/"D"*+,K"!jC,>nROZF
%B-eq4NOI3iT(T\Nl;d:a[.TEFd8jcNj/^;6OtYS"dGWpIq)-l_W]c.Dlh=5lC!jS3gLq@GRc\HDL>/PF/f0I7MWL?1DTG'65eT>$
%lb(b<]pI-t2dSsXNS-d*:#8A:ZAf`]&RMg$2S25^7QcZCRm@-8?]2`6P1j\+`&<kG@0Fl?G#`NKgL(EF#4o<@H`^H^HgM>+b]PaQ
%5OGT/27uCuA!&Tt][f,@[7+LJB8^c/55K%JO=$gpg'bWn4Kc`@>?p`!aU)g:/T`pa]l(<)eU(G8IH+nEeX6=1C@\Ogb;O7Fi3sbo
%d8&3F1I*L=)@/m6f/eem*701.q6ATXNBQ0[_gc^]m"1PJ2S,?`?agrelTK*n^[\\aC<JNgC@F.7QXs^5JaD\UP?k,Udk$sbBJV(I
%^._!JMYNWVEQ7IfOj$q1.Lou.be\/"or`/8<U"(uomrIC]HR1:e_4<LQW`*M)&KC=[F^881#R\!f+2YIKC[jA!j1EB8+A)3d\bLd
%38C,$RO^%)Rr"e14mR7&eZ7QMB'UBhS#s]sa&eIK-""*Cd5q5FO3LGH>14('go`rkLLN1pPBG7,`oiEi1o4so9c`#oq&79iZqRpU
%eXHHJe`L0+BsR\sVoa*lp>b#h?,p^t2]*_jlap2(W*3,^8:D#3^A+rcPMtBXgLT!jC%pY[:,JQ:?-*CiP:^l8B>&2lH.@80Cjk>T
%ZIP?@phKB&jNBH!1k]Mknf$m`eK-c8Y=?F'd,1f2<LTN.Bf!Ca?2G*s<:N'8\=dE>NNVF1fBl&2H7tbiDnKoKD:q^g#&f]R=[j`j
%'7#%plpB5B>jl$(0L32Ba-Dc0Ih:Ji+47h$g3P$a/#R[CEC/Dj$f*.6Y?QumeXdQ2?[,aj2e>4e)SGD2ZAb9SJ7^IK-9G'^Va)'W
%=tpW>)Z%&Gn00UZf4IV=#fkuIABN1i:2&BuTt<JRFh?2)hTKTu)_[tg`pC`IPBS<[[W/&cVQ7qmBIBhR"K9>q,6ac_m;Zba`9LKE
%b\8nq[eG"U;s:s'F:I@?>"791C<q@bCA"b(1>;TEb@mq2gM!Y0gLss&OjTgKpUtBLW7o]<jDqXHKKSX-";'m!?Ul?fS?<;lWg)bY
%NHRYCBFEWc>HcdN>P4RWgY[5oD)Z&k^7)\bq6Gu!%3a`g7QXJTLRF[amgFu7[FNlBTEu(l2&b+4j0]4Zp!(q`FsSNCNOI3iT(T\N
%l;d:a[.TEFd8jcNj/^;6OtYS"d;\JZnnYTG[Iu:H]3N*("=&]q/d$oS2Pm_.BNo=i57YfRGb&M$BGkZ^X$-?&X4=i=dqJUt:S[<s
%Cnn*ZDkha67Rf1cR!0^`:pl(1R+G.`<.fR8`]N1(*<6hP&Q%qoZSUV.3_jACCn]TqlZLroX5;$3reZu`<`A_@X22E.0?^lIO=lZ&
%VoFFj3Cn_8rE]YLm.GL9'Lp6Z1Kks:`AOD*Us6o+0V?_#fg9n0f'@L[=1ssFei-o)>E.<sY9r^1^2,$hJW+.%pOn!hefN24N,jml
%n9id_c=g&3SmOtaTV:74b6YkrNHRV2BH(7EfrnV^hY!I0gY[5oD)Z&k^7)\bq6Gu!XWgO:b@i9'p-@^3g2B5044O!UOPt8Ln&?.6
%h<EXI,QnLolh>lQgL:Z\[]F]?(9^=`K<5Zs%-A#P:Tr@;3kihtp-K=6IbbnYWlBSYjRsBV<4g`5ToEGVL#O*W9,#g%f2a1@G<]=s
%rsN!WgZWCuIbeo7WqWgPqSp]jX"jMAe`:SS0AFQ]Bh7%R[+Pbc2,N\RI:'MJ&*7qL+O[2nQ_2#$NOQ`kf6NA8$ebehkVef7[bA@Z
%4O(:KmkiX6aF;oK]5)YNil2$1EI(n/(TOndY;0I+5=HmA480uhEfTl"J@N[Dm5tqB2VV`G'A<Xpk\e[lh/;hapG1Fu`lhnn1&LLk
%jB]loD;8g@#Qn3f`&9bR0WjZncaeM14WuI_oZ.m3df%ftL?5'TC?6b&+"N30dL,#BYV2^.k0DY#nWJb&EHEtehr=QGYNi+n^<K'V
%Ybl]O'oR/<RZ(gU+[<#3fO0OWlnLa*`7JQ2_FRM8:q\UY3AVl^&l:>l%<+So@PNM3[Pac@rQWaIfT<QDW6afAfEqU5[<b2)Q`4"O
%"PA%=6]"7Jj*(amL(Gi\V@&=OM:EFE+RU8FIsA8TX'cQ>BH;6N+NeR7fJ#[W.Ull,]4N3A*\ro8,/mtj.Y&gO7&`+LQMr>i\1Y7i
%_bH\;di;deAGsE1TRAE8/hThsDtcW^_*BF0S-pd6EDY^+Da)a:_b-'SoqS&n.a=bY+1RGoVVp&f@5YJ1T<'Ra\n^mlTU(@%5,ORa
%!W=GEe)ZV:K!hdTKZR$cl6#uc&/8Uucj5A].%I2>(iL$48J-!^EET.G;ATR7kY]b$2&LBK;-bb2,L80ej1,hd*<[fZ5*#STYt)XM
%0G8j\e`:bEC0MGM46:5l`+Q]_hHU4Y7IGos:?$^\RD'<]Js^&,5L1sT`hl&1MDb/_oIS?M]X`t+#3Vl(ZI[>5+>dQUZX$^B7#+I)
%=TtRdU3Zp3C]*0)`W?%:[AM3_$\J)bH;B-tk\iNVpBi@nXi^D[e=d3ubjo@tS%E!XG%_m2W%TP[GO9s5*INer<YL,po8<;Vo)"Ht
%>ig.5ja,[9c>$-3+fU[P9!e<"a(C?F^H0_<bWWpu*&PRRW(JV9PN/7f>\WHf_M0YE;!2L;a@(g&2+nUN`\o(k)T%RX`A`Nl'r-)c
%C<36@NM$4?TBlL0+K\TL>pi0LcsJ^M\bYB+8I6&<X,QG%H?[;W%Q6oIEdR0Mb;Q(eJ,IpVkk$O]i;_?`\*[:`*7qk3cp-"f!Qjhi
%np[j9Ull-'.):RS&EkKm-keFgDUP3!2WjJ!CILWtp-,:nWC%0;(J\uC5'pp3Ak'd'=SG7uCS+-3jL:6Wn1&7q#&I);8^1=B8b.0R
%'k0Rp>Y.#Wof(d2.&HA!gPCZ>Ipu%_:uinQH>_#P]krQ"fooSt`4%8NdFi"WQP16cUR*/@K$EJ%1?dJ1P^36%U1a5XBScGM/%Q?G
%(92B;4#JlVrCFH&./'4#o=7;Mq6gIo#o>[<;=$BE;=+0M1hM.Tb_fle#<e\`;k%^;;<CVJUjHi7_J^^ca.ka/X#;.Z$;!#SlkA'D
%0hJO"V+E#0+f(Bk?jR,kZ&U/9*DJr`'+Ig&Il<Of"!hQo8>1)]/;-h--q^mFK-m?L/trjd3D;eZk3EeYhgO$ScA?S#Dca<d-D.`-
%7.%%[NCG(&Si5s&_):?M\dN@]p"Go8OBGJ_>_n,([O<fuG"((SIf"G''B3Mh#+\.d&'e=]fBj-aHP4TCpi])YhQHP]<'0dO(lUd/
%c1VAY*UIVZb5Ak&iAVBQ?><NSE[VnW8*jn'\JM(j/4msi+'JqNpXZ!=$([F.*<p7@IJ0?S^LihVH@04X31+pcm6Vbup=JW1eL-o[
%2<7d"Td)Bn_s):nldu#eoc#j4][(PCekSA"G+^T2n.hpr4=AB)kSc'!6V:K8o?j?OAA?RAnahVlq/UjnLF17U<9CMn2eTh<]+]%@
%E@9J/bkh-!Ac9]02F]MK,+<"U&T($\5$?),CpQSUQ)T^<U1l]C$dm>oX,#`ul.[oPRe7me["u/c3hQ5Z2=((oK4o=b#LV[Ef$F(>
%lUPj"0qt@CY4#GdmAS;84_re,Bf)>3j[q=ig3`?^1T.)%[\#X7b+B'J6]5P<WmdB>>EbZ94_QaoGgO[sZN#5F=MJjNbkhgJ&'^FK
%aUV:I_lcZ*TG]daKnFN]8eCk:b*?T*rH$E2'h`hDhq4#^YoT(NXEVo<YE/)S>6EXe[Uugo^<]kFE[-N?/8=@rP@?VRZU(p\HJAL\
%/VL;d!*a,AknU>\h"l#D.bThXm*MKZNp:HCldhU!Ws?K'p^Vo#M6%ffe(%7Lk[F[I$-gL@_0/djj1n4W0k]/8MSBc4_s$b=R?T$^
%3$CrpqR#^r'=)&<.-IqMDU!KVpE800j$C%4RJl;ab"B#[D;JnV]l^72BQeneRq`t5f:7bA`nX,)_OG9bfL_rGXS/9]Mg:3#7s8R.
%Ce'b$o5utSmCO=Z[P;YFgEs7U^<KcpE@$PU%%XS,]2EH8FZ-1,<KARR&MTP%`I\pa0,-cZK7aW=TUJZs-T5M_CBJ]/o3H.Go:lQ$
%jo>p4fgODppY"gjDIbJJTaHIr=*j849EsJ=Tc=1S:p0W2`diAb,8_W\b=So=Q#[FP7jc&q:aWO*25e)N\eAlhE$s;,aeIEO?_uD7
%0^gf\5.2EL%TI(>XFnfeE^iit)o^0^rO<R!"<H3A^AQd^=HAO0d%]3R.adDE(=D8g&#.<'*^lK]=[1fAX<5"#`e]B/LFuhg[\Gl*
%k+ehaf'M=9V3qQm^@H`k\sIa4reA^%n_@_<ZtQnC3h?)X2<jqmK4[$[K4K$Qldu#eoc#j4][(!^)^!fgR7_$SqSB]m4EIK.kZ(L,
%UL!Lb"M4=p3<`;n4L9KHLF0PA<2MG.2Wq]d\l3C(E$s8+b51q&Y(#=r'-e5A0_]l>erK#pZ?=o.'1U*<FPU7<rLNE<6He53q6_a9
%?$nnq>W\sLZ+$k2cEA;MRNjr925da/^/%kGEMJJT$q@@Jj^JIpe+(kMC7d?[f7b`s*-rY%/'6/_j?bZ4qEdD1Z9sO^40%n?Y?S?)
%h`ZcRa*8/4:1jHPT<`q,7[s,i7djt1RRsjgQ2)-&X$)7C^Il0OD4jdJr?*#Qge0Y05MRD.PiEuM1l6CK18"6N3U?@oSS2et442Vi
%f$F(>lUPj"0qosn(;-sP"4d4?J)bN/!cfIX/(%1BWg50_U3-CjIuY`"iEVck>"%+BS^2]>Re?UH6*rYlK4o<]lf\/0oclEL(t$u+
%XC$gmUH0K]8'K!W:tX%VH3(efip0#TB:+$+)'Y$9jY/<Xcm7=rb'_e+k,d0Y&#.<'*^lK]=[_#BX@0\Jk'[H^qq<YPq2+Ba$97;o
%N3Y<69NRr'Yim%R;#C5Y1c/XS&8d1<d<8KG2IEqL2SZj;D2iN_g7$7^q*&BgaGi)I1t7Vu'5^6^51-s-Y$&e`?+gm\KljM])*8V)
%*0I(Dr?9H+d%]3Rl?)1Seth]>#Kc*6&!G2:XC(E0eo0=lUEi2g[V9NJ,Wehj%dK.JZ3?m8il.(3E;!V\`KC\;qL$B$"3UVIQCZBu
%fn%:nf'DJ"f6;G5XYK63>E`2Shl!Ot\^AEQL9;iiC<AM4SI[e:*IJhI%r/U\")-'LbLMo0NoK/2Lhpqrc^!1W7C4)cq97Hm=jQOX
%7%7[KLc-WeI_JT\5B<NY&InETlW"<P:n8-.V4KaP[B[X"RXm@kV-FmA@PbcOTs9U,\Lni,.(4[fQhddAj8%)T?upi'_/(=]fDBCW
%)`P&N^!LUQe13=::mha/cGOWl!_OC+Zk7,ImZ]1XL;&t;(Chj[K4$br$+>IARJ!^Cjn7#l?u(9S_:D<RT<J(U7rEu7MIdJ2^$5V'
%WjBh*UaO+mQ>i`=H<O[0Z\W)"l!XORD+Y<2m!oknG#Y@q?ahA!T05_'7sL,3:1aBMT<Ne)7N!H(fZp0sg&HWgF?K?^E@N2:04'oo
%LrO'&H=KEd?q?&44J5MG,LZZFP3o2CB>/7XH@GU]R18[/fpp4]ofcg_`f2`GZG8Nc(Q.UQ9EnKMCHP]`8o"W\2.IjhXlQO/*Y<+3
%O;edTr\Q;Lcm77pb%0Yhk)@nnGC$A'mK?`mfmc3KX.Qnb`Q4=kOmY]B*S&9)XQ"4S,!N\?J$int2#05Lcr]?T(tqJb#e!*Y?otBp
%Z+$hQc`\AmRj1$$2Q*j0^/%kGEMJJT$unYsDG7!aoL7+bI?99SA8&HK=`daY(dQt0^V.21AcR7Y(=eqN=SRt42>F^]<g\%CM^+;k
%c%:5QjY`hH1F&a=bku&\5sSSAL?&6+bo$4hH/fq>+QM;@OUAor:iV>'Y#1f7n9*TE.;OIlbVg;2)*)*6oM&]U>l@@%/P+g]A:63j
%=m$]l3Qm?!acL\F\+?kIOE/mqK?M]Uce/%U6SQ1=(-5f^g#pHGpH8&-:e$(GU?G$G-OGB3iU<'bl%9*\KjrRdHC,;Q1H-'1+l>.b
%h^Z'Fmj2qebcI"mjeJet?*`8/r+2rmg9tDBc4%aojmp>:@H]o";KC@.26_jf%F:eP$c:erc/5uSU%<\EVC'&Im"-fm/kq)egK[7B
%>g0?Hi)P5=_R2SE>5J@D;rkYDmk\E:.M"h)H.OTVhBEhFH"(&lS/AC.S<G:]<,]2=K=:Vg%`p8=mYdEJOjYeZgqhaHO9Sgr*l@iW
%"jE=<W?fle3JC;TSrf62<(MKW64^O1>Mc%Ar`3LQCGAd42f"E+^7(KWWS$E,Y\;=^VQ>A].oLY>khf"G+cf2SAs;Qd6ta+oK92QD
%mijp/-,P(1pJ3R!O=etRd&To9j.uARH^VX.>06YHaS-DrkUg$Z[Gbbc@'j>dq.GaE6jpa@%LB1FI'n47KpLr^&V,_/a>2<sjADWF
%1B;J[\0<?alZQriGG-^n</j8P49V9^d^0p^<qEX=E7=0OZ$G<-AK\WlF_K(T"H(LIMH=T]#rL;'eF#1f10$CV>q'?N&;=HP\%16+
%cNhLkot_7t^@PU%FYrKET]q#s]gEPR5kMN!7D`QUH?:\V^:%('USH2JSVWSm#M0!DY?R*;pXRQBTcE+I(%'[@oCX>*;MOqn.&=K2
%L:oa[VQ?u5dH:*o1k^>?$crsKg1.[T$o+h4KUlYa8VckRO9V7$>7]">YLi.Q^O),;7eh/GU@W(H)#Bf6*0.9PF:rD>E"PBCGG34G
%mgP$N6Q5fKho7<:ND#F2K7;<M$@rGC<cYPL)[cF$,WbJ(1mALX^I&LB-A3Z<S&24ID^q-KU'V"#LgF98>:O\e]N5.Y4L&'E9"VZQ
%aJ>21'u:L)%_YJn=\CjO-ImOtpi)q*iuC5$;Yp[@@CO&MAfH]7$#-,Aj*h[4j@H%tc4Bpa;Oc-kn:67scYHhI<,<RS#[OtO"?D;B
%0N=+]\0StHZKD=:SOG$jBRBi#N3.NUPG=eqVs;Aqg]J,tfgE.%r%.*l8AtpBl5;uuVJCTV4gFYFqER7*@6,1FU$cGP(+9T3;h2-6
%+T/U(Hf%<a.\m@:(-Y7f-A#QIZ>M]l^:I0Z1d^!>q"fEno.Y39G7809A"$s@fYr*0+DEI8[m_(&8M?]hUb5S4)LF,(7E'2?jA?Bg
%N9dg+Kon/KjAgdALL=FH<%0jt\c3RJ[oI=#_#^+I(sgB'&2ohU/YjqO=Qc>qPP_@Aq#_)Dckb(c?39+)aC2BN'cZueB_^.M<ttmk
%l^$=pPE]G2Tn)!6EZ$DbZ--qG$TF=H)&O&kfoa0?C*0!Co5s(anGB/.+L9G*YK):+;XHjG7-Z35.MRS4,h:%9$:/"7ielT*k\$Pr
%DNnuH-1C=u)/.(#n<A*siFk%P&uN602$]mBf]:[AcsCg7&\VXt8?'DP9[kKaq*^LT(l]1Xg_Shao"@8I\OAF$82@>QXYE]lni(\-
%6b,'f?&0F,aG^'SHW8d=4-VcU"/t"icu!];k[3H.E)K)5h\ucjHc&[Vf]N>odXo00f_5PoY^UY3Hs^jrs1gQ?k%uqb(;Z,])>[Ki
%PYUDETn'f*6VBfEX!JbtoT,`pp-LoOUOp0V;60fkD7!"d9%h92DR>dkd8hBg"<NYUWH(=_739Z^!fii,*7Lk>Q\E)qN+;=)JL!H@
%f>d3e=Q1Sqpt2tDD[b@crjioA===B4e8a?'Pa'2":sNMN2Kt0kJkDod#H6_ESs122M#Lf,C_qJp&_WfSf"e8KbddUSA9B_WA%"R#
%#n?qdE9l(2M9rjc?-(];W1KpWCu<U1rHcs(3?T9clQ;%3Im:cI'fe'Fg.-*RL-V,opL5Q%6Q7<goUW(HTr=sA)@o4PF&la9C.XP2
%;OPY"G>T'cVd)G.*&":_.QiT@Gmba[!hBP/9:ArnjQVCs$4VIa#aL$?qY=E7m2uYL*e]#:+tUb?MF7::%FY(3[gA?($Ds"@G7&eI
%U]CDX?iT(,J+`,WrqZGpJ,[Vur8^r:^&06cru(iXC4Q=m[a4Q>"V)$m\88\k$=[LIW;&Ye%9sn71rkbKr_X5/4-P9$`]_1;?sY05
%<[o2"FXPm^)+pemO6UoJ#XaDcPW\=CX_bH86#.HjL`i>c&p9`%J]).hZofm)IG+,qU1G<,2HR3$"qC9$%lGr+kpE2\?'!,43N+AX
%^eXHX;'RVKW6qmUd:#1C_TkYu2Gu-s0VT>fDb$%UY(CgB<==UIr:2#(IM!D8.[[.F!I(PG?TkIp_:id,=Lp2MZ+i,F3$ABOO9CPK
%/]!iI.'P>[B*[R,R`7"oB\hl,<gsn=p<0PAW@P6*ABAKh0![XY*/63M-msi9dSUq4JtZh_K7q,We@<p_$<2Oc="VuWSkhVW2!5hL
%Ct;#n@\&fdi0AkGd*8R`.rD#a7r<1LM(KJ*?c,^5g(.dUOHclmLe"Yaq_K)RO:7UY[2:*#In=>CRB1!,o$\5W=0.XT9;:2dHs0LN
%L/nY<H_H!-]IFj5quX>/9Jt[I;Ca61$kO@+=m/8/"gPpS1s=jRZ"!I&@k-V*o*!S-bmI0K\p!e<[;&"K8a5_g>!^\liqZ.5dCEet
%<lR3_ojsuM&>ja@]^lu[ZphJ%1,p<@->#23$+ga#?`G_]YEHlmksZ3eDF18G2NAK!(Kr)ZTb7A<XWbn,j4nZ+'\&&31#:C*=VVh3
%`ZDWc?LAq`=&2CS]ch.=4GqD;h$k^Y?Z;OJ(8_,^426qFfA@osSU-P70Z6VT?9mU$5ZEUIH!JRD](2d&.5r+VcG@/5O;[0aX.Gr9
%W$j(6>HFL]d&-b7-<JWQLD^8)?j?7(4=m6ieG'C;Pd<o,_i@-@@C'p>Tdpg"g*Wt\5Nh^e-tIGX#W!nn8APL<;GR[j'K)rs.r!IL
%MUGB+&q^opc.XJI_@,%u-l%WpN`.b5X1o#JF%/q1;1$*>V'JE`!bb$&RW?oHdHo)OI`F_XUU&5m3XK^lQV@LMVtATbB_I9u.ReO1
%D.W3RG1@T1+gMoco[q-*kGVUDrKuXi)Zre@1*J]L0Ze91#,s]0[]kCh%pT+2>D"t2&;5g\*0#B!6Z%4VTl.%/H&.Ea2EJDI"sU1K
%=LfWg#s^)sk<LWK#lk.l^tp,lp.ZjsEMK2t"XLD/7&(fD:nlT)F:W+afiPPjVB)T>&;G]o6<H&[Y6XLQ`jf%g3u=2oKu3:5l(Qb+
%rNR\<[02&-)MHMfmt1D48N2J?E':(X<qb/k(Kt&JCpXI]s2kX,(AL7tk1Wtr,d\`@;;H%"Db(n3@/SJ/7<S<2NL*Ae:l4X%Ltgto
%m,l$f\VE@;OdH-51s9!4kB6'VYKk,cckc?f/]Y&AI#.RTWb6,7EItlB>EdK49)C78;"3!Q^/j#VF%OIq%p!?NEIZ_.1lbs\Fo2qG
%oJ,k@UOLp'a/"SnQsH1%kc@%hc&S3P'-;U`aWksPVrPU5<h"@r\`$,SmeaQTn_<E6>M_k\Nl.Q4U:5\<D:<R3mCMVMFF9,/7Kl6L
%6jR3b2g.C:>.RmU>Q;OKhe![9;cu;-#eW)H$R3<je/Ca3DWEf7YgW85;]6"o%f'R$+<<mCmL+]"L*lHV<DYY"VRes*&4IaEN-a8$
%KXe$g1k"*_D-u*r*SpEMS&0fW^+Te6*u/ns9^TK*,`ST/U^"jN#WT,_%<"dlbEOsU#,3s!T_<[HHnpOFf_hO2,Xg0rdJ4dJJ`luC
%41%2_UH5pX2OhL7M(Zp/.849n@?Q?`[D<d-9;?W?6OA&7L<3aFE^qBY;?-lrVDXn>/noE(X:SUpd2=n6_*F:\>[E-@WAsN@@Eq,[
%0GFI2?A:?_6\5UWD1Ra_jB4heY>7'd+^kk'V`WMtYp"`VkZD0CV8us_=>`TGb"\MUGm?`nTpqG@qM7Y!"+GtSS,=7#2:V,"o'2N5
%YcR1)</B:_#pXkJ&8J!deDOoupq:'4,W?=1d+o=;BMRe6&b-*^[Ef+%GX`_]8t;UNgFn3/V$/<pkaim;nQau+7M(Pshgn-dLIL-Z
%W-CTZM$bGnSu[m"M@N"HAP9JFRkP<`SDjQ8F;&Gg67C^:ER(hpHq"RYbtGT<?kP5MRdd7pKE^f+WQ:G82F4YsMRS;&Wp+KW_Hi%a
%$;Q$J>`*r]$L(/oi?e1;N58C+2mS['OATHqa#Ad:[B5[<DQ>1EJ?hTBi5$ln<CFsKE7**8Ip1q6@.$RWkC_cZ7PK>Q\a0$X;Uu)0
%KB0-acB:R#<9C_A3VdNW*iu4i1E)1F:*oA3J5"iR1aK$E$arN]Y8p__N5QW>Z[fBTEL@ML*GZ;:fJsDkp_]H2LbMt+;4N^+N)H+Q
%<rip!V1%m!MG0kP3f!G&BY7-)+Y#<nP,PYT%7r:O1j";GUPBEc:%P/4eF/te$@q\lcc8<GW38_-lUG6Mrm"N#P\K?nJbXtJJrL?Y
%2bI>04"4#OXB7/g3U\A>oI><gi&r>Ee>]ULEXf:kN8S.oV)ec\*mQp"_86t1NpATE)/Kk*k+&u;OiaJ\@-I-hnQ?mFLX5>[_.TAg
%1KR\IdQ&VFA#U]eD003LA`')hZ?&ZYS!$:5OX.qbM[gWFeU0K7cEO,dDkg#eS\*]FTOKD,55b]gJ"Fjm%OV^Z[g`jiBFSt9nUPrW
%p%Oi&KMsuR%n<VM@+u_jnhHDNhg>2O9#&ZdCVKe!hFIRP]oR.mGC8q=#]58jdrQKf.Oa#6b82Wr(W(=s\DEpto*@JRqK);m$B&ib
%HPq=oQ+9oN>ju6J*6VZB]+47\PFEjMi>^@L6?Mtj@*Ctqb'22ieVlg9#JMt&5_6`m0ePMA!CSREC%$Zh,(O8WLN^sp4%I=9e%f_o
%/pg1PiL)SoA)K8-a/=i"eia(mo@m6SJppI?9Ld<H/*C^iN;Dr(&Gs^Npfu'_W02jplN_E2?OdY'1db?nV1DA+'Qbu?l//-gGJFZc
%6Gj;HMes[sEjYXMJdjU+DqcH6.S6mA*T5\I;*U&\9b!.hc?!BTDM);V_Pgs:Ni2DR)H$GpF([F^G0HN:R;T`rX:;<k]*P(N=@R[t
%m/f`./@Y.4"Ei);j)4U*i<1=:YZ#XLdm@kEa>0qBbYFa:A6_JLRiKVu221^ohhK!bZh43E5X1R@Se7b')'/sX@!;EfJnRa_h'YSY
%JAm[gL#_rDLHP;9f5@;GfF%liS^k&$"?OsHaLi?cTsR%XG?QpGF!)f3a(<QiHLk\Uffluu3]Qb?jXh!m10c48OD3]U',o"._B-2<
%2!H!b+^G@uI''`-T79uGmpL;.R%QaF]dkDkK8X(0[[jYgX#m>VgXh:aOP@s,4_O[dX;DJCW6e0;DV:>$g-*;qZ'WKENOq9?@t3jU
%1phRL]qf)gk[%!`o9UK!oFk:[\=kp%r=^g=@'nQ0*qGsQqs2)>?&HO(@EH@a:$oCY.<rO11]agl`uR$Z[+'&X`^7;1>:#RVO7+Rj
%cJ(=a:uhbgM4lZmM<IprT4;JWitQ^r:3jtZ:/_51_]:KSi:3Q1(?OqhbM;fZG#KqUm<,V<&Xbet\pB1U48/!59mcjLk$ZC3?n.>?
%aX_&[f`UL&=rq5PI9t91<k[focXVn.^hS![$AntITAD#m%UM_'G_2+<i@/eE#1nsMq*fo^S2_?*r;5-T(o=KBn'p\Leg,gXR6gTd
%!QPo`nj^>$%OgBLCe-f!-TX>ob9A5T)Ti8L.a%P0^<<J75ms5r;C9uN-OD*aFAl7HG9k/E5@7p-*Rc23hre]>"@C3@1PBV#1q)ib
%gD-Qq*<^"G0[Hu[+Yj@Zp0Cgp#m:SHpk=Z\9mFItI-ZSLE10*TB>8q;&Hmm(G[L.L;$VdU2Z*bAe2r=`#\%U7d"$ofZ5<Aojr>Gd
%p&.8:<ZdC+8l0jQD&B4LN)7MI5Z+VJgr)LeW-#Y1(M[`ii".-%]:^Q[_4>qGCrEo[I#s22^/o##R8E=33fD%`7j8S?E=dB1o&3o&
%Ti'[&J2^_=^9^eII]('(eF>(NIRt#9.ZB-R5VjU\ZD!Ld"@]/"U5\($5f[#jD#)!L-s4>KCguT@Pu+\7aZGW\K?,+@3J$`\&WAnQ
%m4RQ@h<hRK,W+=c`k83(BF+&5WPdq^7OTGm2%ANi@6k.J,Vp-#7\1B35)=6i@ueZ0-Gub%U($"^%L=M:SB'Rc9`l4F@S7R2!ApL5
%.\Kg6L5JS6*Nt*$2P^fADoW&XAUb7WS'G:^(ruU:[kWL9[e%=c"</6#OG)(JBPL9tMrZ]41o#J$<4$&2U?P4%&1nTHQ7*nf_$fp`
%d[!=U%Yl7HDp5T);DM/a9A/8P5S0@4V*q,TQ`sLV%@#-fLd8#FKFG4YqFm+pf1i]D7nZ:0YD63_.R@;NCull<*<H6#Bes"u0Pula
%Ks$-$Dt>hEJ`nZD=>D'?0keKKFpVA`ROX="&!_q!Ku%G!Eoo)dBFMG=+adWe'PflCBrh`(mb?\*MCPGJfREV9J&^qT\K#[D"Pl&S
%SYq9AZr.#maisCJ0o<i=%290ue;hmV*/lDm/=s*O!raXNi88Oh&(Z:'"HW!EK:+KE)0$;UH8EsX!sOlR][l6J`H@LY<7hb8k]S"'
%p@)0GDHhbMjm,,)j2!Sq`g.b+IR3\`pP0ucG,#RgF1chsCV:>a$)6KZ#>lh*m>8GLd8Xu32L'ZOFa-,'7$09T&B.4^cBBZ&QLU#t
%[C.f5`8""dbm,IPU($1AY\M:>WI_?/+(a_,V'OkjOWNMakh)P'b"<E<,+#H3@8)*^;IuSnOd42<a;@1f%/h%E'jCXGahe)+l^]LK
%?)Rg.OGe;E.$^-9N1GT&Wn^']<;H"a_Tc4cSnb1GGT0VBEdi!q[fa"2G(=O']1CdlP>/Q2U5p[%&uF**4u`dX#AAau"8$!^cT4=9
%22'1(8Jk-K,Di/Ln\P-YjB/kN"/mp?k!G57mj(K+Wk(>QW)S)rNmA^(G'Io"IbN2c!-0ac8eG<E+^ZZRdI$.*Y)]dVoB6/]/>%,_
%U`Qht]DT$7>WrFVEqJ,.fnR#-S-K/r/V`&Aha@b)((mnt(TC#D)ql"sNkXm/mT(fTT20R1,[.#&CA./1'?Z+lN_o7-FUWoZjgIo8
%W3JL!"2[PHk'fYpmeana5OBed6H#-;6^!FQU'QW*KJArBS9UT,63K%d(2Z*h,+U'a6uf<<Zon[*0(iKU,p;S-kTDURM&:IZq=AJJ
%.#0um[n>["gP%*jjW%*B8^U'59,*KtJ-pFMD6a^KB^%OUimDKi?`:hRUdF.Ildl\>-U_RZ4rh'EV'*L..9_?`1nitI8>W$FWXVT2
%$Y-/.'4d3Chi:J89=pc:!KY,#rN-SBrS0Q-*=7<;PU)DS@O&o?r@1aeo^5V?Du2QR0-P4_H8M5V?+CC\(T^m=ng@V-F#[mGd%+,%
%W,db`lh\mA&gGE9<OT"nFSZ&-EIZ?T1E".<)5DF1n>G*Pe'r?b,U-t^?YO!5c6u*:E,B)!J3'ljP:-jH\IumEhN%ob[k&=Nq8@.[
%=a]5F^n5i<@R#_qI1V*,"T4N5L@0EjBG-N<nHhH<+5Cq-%@@aMPpdL^dIfg?cR<\k'5NCcT6N'ZBCUiWQqT]KDp3K/2fRdjgNk<@
%^cYm4rT"VS:X"#;5-]N]itM1W4;KVMi@REHki<WA%!itQ)O+gO67*>C`E>"D^YNL_\3O4c4j%3NN/$T7KHqm%6R+B)\Ogh'e@i\S
%1du^We1E#9:e;'3iWc[86JNa&-p$l%m3mSEU3r;]?0H?A,Hls.l@=Q'/J'PQ`/cC"AkC'G=o_7:&p6,f\>WeVNGR-&r]aTC%n/=c
%+O/ReJrT,)*:MW\a<%-'D';bpb5HNX:M\!\76>J@!#DjLEs!$;0^,tW9\?%5r<@+lfhfVSU1P`O$sN!gjU,)O%^"jFd"F+0f(K=^
%b#NW"6eaMLq6S,+2`)i9>/"gblG<1@[9IW)[a)556=FGZ16=o,kIPoINULLQk8',.67XmY6DFE`66IK4<d?.q_BKdXl6oR,^gphB
%'r^]$@/=#KD)bs<:JP4gFQ7N%a$R%N!qArn_CaPp-&H[kp7eDKO<RLt5D,_p_hEo23(/N2g6Z]Nqkid<J+(!QO`O_7pk.sLkZq<h
%[BC$"p@SRO^)iUIJi`UR4eZ@m:NTL>+G>B1(t)QKhO0HVS',A?&mNrAg1?LE,h-No:$SMY'UTZ\Xl./c9/O5jB4@-Ya7Le5=bDcF
%@U@8Agjp)YSe0pTPr3o.,(\.iU'W*\Q[7Q$k1rb6_,,^"&d^`-PUL9$ZTsXkNdaJT6LKDf&B`AX7$I`hYoJ[Xg7J7&(>&nQ;U.B?
%$+iojh0(=TYqG<j/;QdL0^VuX[\&Fpj8rNgO*KI\r%K>sNgIk8%-q&B3u.h>N>Uu&!Nakr[K&ZG9Ch"G!5uLqe%RD!a?655"`X/2
%Es]!k\pMnTo;oQj7GNtRO'Daf`umoBYf$Za.K`:fIY6,/^o\W/Bq_&+f-6SUcTLC,MSZ7-MS$"NE)h.Fln1/kH#]9k?lWgum>j-I
%S97=5h%otb6hZ$\?$6OKrQ,9WN$o0%$dgWg?1q]^q0tP^`,,,sSB.MNrkh.?CB#GM8AYY@OJ-:&O`UF3WQqI`5K's3jbElu9/gD+
%E<G0`mWEjbL:SP`mDu$e!JY3IEAtdtK'G<4C5FVbTXg5P'EZM"dj30.Uk?Q4CfMa&X;u<83:BYQ2#m?_Z*T86^)JH*mm[J'2hE2B
%IZW.%+LbqI>SMG6EjEkdU,udr5n6A97Zj?_1UWmpI8_R]?IVe&\o!KCelmlW<N;/1iSg'fD#7\XAHuOs=IgTVkT-RRf=`o$I;`r[
%T5JRpr;OL4l%_NlO=6BO')QM:HO;))B-`cJPqXU0\u<G&C_#TE]iZ0p<NAuM(u$GR4Y[8::E+o`X.J\';%Pms$JpfmILN9nEmjU&
%aZI@^L),[mm.hJ\oEbE6X#tug2e;gF!ni2o*inpZU(B8@-./pB\fN8";5<P1pt'dj&EEkAG_TW/A!k3GdI`KAf2Q#H-AOK!X=n#h
%%ue`#W5`=8>"C$`E!W>:+=K(`_2PUVSuGg#!R06A%_J\G:!hf0%KH[CZ@!@n^Xs4d.&cu.*Htc^?F(ghI!)S'Aa,SuPi3-aBIEqh
%`c+=7?79WS9u=5\'UO<$-Jl_k+u'p:Qc-u<S->o`e^n5"n]'QP(i.:iPq(KOC=2-`5c?W@[Y]^D,)'Ai/`P\Alu.LqL7EuJ1kWa<
%"WC(4MXE;u#V89=[t0>Ej:]8(d>rF]/[OY>YsUnlV*ehS0Bu\Oc2*9s=0h>*:,GT9K.cJ^i1YmpgG*FJj72Widh[o.<2K/G<iBJG
%-R#/_TgV@\,$C&Y&*>^I&EpGOILbE9"6kcS`8V#DPPQQN.4VTZC9:cT5_54UB#J5;hlA%Tm>#7rZnF7XFjYNkLhA5,ep\1=F)GfO
%^pQr="i`IA,C34Hq@c<ZlI*?Xd"tsCCZ!Mp!556I#a:AWJ<Kgl&tCso%7DP:f?1!!`/OuTGBSKEq[2-qpiVKh7,1aNBbZW_%4Vt8
%5EbX`l%'BWmreCbij*_"=eZ05O*O+g+Dmab5gE#&h:J&U%Yu6-O^ZjU![@1[9%6GY&l:X9_9*?)"`:e.ZOi("9GI&f6q(#;<OAtY
%DI,[^C*`Wb9Pj&E[L)m:bS<m;59#RXo`BMgCYThFQ5P]jo1N?d<&Q3g+RLt$(ulmBD.;k*KL><!mNN7-0qo0*"B!oK^+RK.\Kiu+
%4q5I(E)i2r?h[,MlJNG'6Q&>0KPf'3hC6Rt&i,D-1hdsRXArZ3"J9B[9X\"QrUaK;5)RIVGgUhS<M1^136]+6Nq[?*9roKAJ")ro
%?UYA9PP]Y;eMpCJHG/j4#iUahDq:i>AAtH`JCl*,XNfnt.caC2^N@W`M3^9T8K7"8a!tqiJe(oMom%``7)ocjK4W^^b$^gO0H3'U
%fl::QN"#f)OInbZOc/Si2t"e]8o],Q:5m"8+@oFBhm%n)KKp-qn`unY^+6MOO>,Dn@<iD`Qi6n'<[[OJ^$q4jBJ0/[_s#<K8@`!%
%"^jY=?)CQGH!i0@/dIt7S+$O&I!s!`X9c*c+i*t9"/"fIR-80kS!d8*-d(2j>ARqJ-t^%VBWrfY"riFX*^Qj%DJ19tjYt,JaQe(C
%TH:D1FXK$I!@I[8!=lB$O/ZP$?"jnRO3:2-*`%S1fT;=7+7E>l:j!+ZZ8*T)1DIC`NX&F1Y01sdDu<A?W%/XN7Pm[HTQ7/h,/KKk
%;s6-#+PneC%lrk?O=:W9D<Q8XSP\#F-1j)dWM_MBU.4Cn-`ThVDpXS#([f,NRi:s.UX.Sjm%8eNA;?bt?fZeY6<2deIA=$E5Wk]q
%!_er_6g@=EfX]6H!a>>:?r)T@V8ornGN!Pe]+$%)Ql1X7fGo/E:*SCN?Vf+mn1O@aC#B1:Wd<JJqg^.l<Ej%#YYRNsq][t0PCO`B
%EC*d+L)[0Yq"d`\P+akmHBb^S3.q`L:cM'7RAp=RWYJZ6;hm@sP>(&Q_JTsUh4Sl8nJT2Ti6:6\>_QQip:'#)8>5/DZ](#Z7kK`S
%,ronko6uo;;@c<r94\o^,A?s3]%lQEogmX.!.4[Fe4Pf&O(]Bo++k3k;W'Le[OY)1<MDfX/aFQC]0j9Tl\A-VQnR>>*Q;B?3qCm;
%Le)K*HEfHZW\:/-Roj]m!jFtoio\Q<r]edh)0KDcfD>:u0A&3A7*"kb@YTF+V(gVq<=Xn.V;1JE6`G@]l$BLO+)_^f/R)sWdIdda
%M`-B4N[h3uBJ(c,UmP-h@@Rr%46]stE(,Gd3No/Pl+@'P`M>73b"Y_jC_AFV:p4c[4JW(-XJ9A-!^R$kVJLh=;Rf@9=l_$B!ugr'
%/p<kIk;pgdjAAG\6O`8jNS2BR=I;tNm6jOoaPE;44:$FDU$(7Mn@j_X`5W3`E=?rIWU;/N-AdpD8KlA"@Vu#lE[ZhAZ:I'mEH@O\
%&oMEJ?O%`IopVs]b^Rm"HqAg&8Dk),@@"hT<_A*A,!eFj8=id\A]61bV%=ieO3X@%-Di@#&hpE_YOYgbD'EmG3bOD8`fD[^g^*ZX
%cOV6eSR$8Z-ufW?p8j]2"J6e[O`i-sBH>5)[6qJjgS$`,*m."u*#Hd.AYeiSSS&Qok;XK!4-P?M3lTAiNE33jj%M3@1UXHX8Ha&0
%^h_TJj@5F%9L;9hDMd;]ePW$no"]JsGKA(jL2CRD8+fP2+c9%ENUF7ZHJ4e*])u7km:R&RPGYDpjgn!+K^I,,>%_kCm7^FK8]Eu?
%-=^'Glo:2rI$Q0:4-P2LE`oh,W<'X(30STi$SShBH2a%@EeCeV\Y7cGgejOqQG:J(/iNjG:Qp.(]HLBG<#T1#%A!##Yt2E185DNL
%PYbR@M\Uq$<Ga4l%ZN$g3pIu[!R8;#h0gY+?X\dhHlqV$1C9&+%^9NsYu%O01Pc>q^9=hGdd76*&Of0ZO&dNL!Wf-cD(Y2)q)ehl
%/DB]a->Wc-dDBPFUiFH<E_[8pgYQ5hVR_KPXD(#6Ta,b5,sZ1#0P;g]gQKlcb"]Xq;/UK>"`9:o\U=BqgPR@9X?\:s^hXA[e4FF1
%7el.(q]LkeMdi]!SH;NAmSVbLkc1MHi.7VP6/Opk`u8d8ST\ZY&6Ru@dY/[hT#[O5AK020n@Tu'V9Qh4(,U$bH#54uTLNp$`j=]A
%8fu4D,oTb.nQ7J2;9(I@6^;OjA+(.>mD-V#%nLGp:?Z!''K&I.4pWgK;^RTg36TH<>lsg6FYD.&pb#c[1%?'>_NA8.M__&`Ap-_s
%GEp+Gm*e8n'"Rgj.lTa3BG-]GhXs/FnJGh)Z5b!kW[9mU$PZL:@"omgA9?HTC.j@RruD^tqG6bn_Jc-43VeCmLf13mC!YB76u9>Y
%IQ"DtN$UZC0)[>jBW%4#p^C?_Y\:aQ*3<pr!f;h3,tZkPX>R`)W7@%/6qbc"6=P$f:LRUfi2'uJ[UA<!?-JQm=-eth4rb(k(mOCL
%"V2T94,fm03q&p6"43:=mP>^O6)S&$4pPMPN?Pp?FRH"8eH3=9#F-A\SH%$.>]NdK-ON9\Yp[fA6]+:&4efXB3)MrZ=(u14KYQ/Z
%"!kj.-\N'BZIG$j7l[a8-`cSN%fjbPH'5/7GQ?mm-09W+6\iXp>Znt8\%JhpbCa;u5+C/.'STB1%Z/&*-lX)Wb9Q8(#mqnm--=/D
%W)6EgLMT<.O&/hRcD,b;EmOZ+7M\ib^2Y7=qqb)ao"``47oC8,F*gKd&69Joj+,[oRq[LTan!lQMu4=kZ9^m+PR-Lt'E]pe'3548
%r-T:2>-$ap#:;B^i@um<C_.q-5g:/WCoEHtM$N9!/u];\_M4ml[)pW=\gsaFi`J]?hb_ZBk-LdZA66&Cn8Q>5HHgB)Yl.rn6Fb(&
%g#&KC<0,0$rQ@G'cX6_;kJ-fFbMW9I5Q0X>qes4HO'hn_-[>@R?iK)/m4kse;B3:oAu7!,+k9EH)##judoE!A]$.0,?<!%7;;?;D
%+h/>@ks98jfCG3`Lmj4[9(,'cP3S=hW!Y(54FTPA5B!;Y/]eNP*mdtiaZafBXVg&+N<RS?K[dk:$>\IYAL5uA<[;iVf&4$FMgjbU
%X8PfNR%)7]SiS$)p5EF)FDLi[$n.IFY)A<\h%.O#h-#!%41#`BFNTadj-cD`@?(d9VUFM7Uf<;)2!0/-k$p/c4a,_EU7I[(cJ9:B
%Xk2s,d%37)[i_-k=Yksc[*Aoor:-EBY4<"\f'N$0F]Wk^L!(EmY/iuneeIL;ek@J,9C:#!.H_;.>qFkRc6Du^/P3;"C#[^`fLhf=
%_JB5=K"'QpR`nCsE@lO&GT+%DY&pjD5\@g?Rg2p+o`!ohQ8fHB8@C&QcgF5%b<V'3Tu`9nR?HegYBo"o/+VYgZn;A/V4`AT`2.uh
%/m0b3-.e-Z1UuA<r:a!pA?OUKZ*Z4^@S?=pN*oqN1q5fiA,tRMC7#g4O4E\i/'Whb/84iq:Hr$Ioade]^dDD./f7(8XB\*a\mT1h
%Vs?4c6Mpr;lf1+n:U=GBm$I$L_8_m]pB?I<eE_^[S4+rXk_d'r:U=uN"-<eFWHI`=gH*.CL2p2OOn_*JnN;X?h-"5dl+DNcl#Lms
%A._cc4)ihf<4()Wk[9=XT0qcA,/0iQroGFkhEeDeC-Kp<4CqbDo*/(nI=#WIpoJ/0RY`&<>j+fDD<+:?pbJ7%2f\A?j@2*BF4M\K
%4k&cHL"m-V?L*m3n?/W-]jZB`2gQ^26#stp8:!LOh>EiIIkrDsZp^*#'K3h1a*)lpP+UgO,XJ(>9)9ed4Xm@Ie:-&@qb^*#cosLX
%EbN<::gZXU>f()D0G%BH0aaCHP^>82OMW=fWVj(/Rj$1f)bsfTheDb`l\(3@*r_o"!+hG4V<a(kBr8;;3Y/+ZB>uGc9Q8WC@lOaS
%gT6\k_9l/CHHJNmm>l>:)e0X8B;[\/;t:GmmLQX]-d]J,QS7tPPN[4:Var?;618RI"?XHip"7]i9g'?UT;OR^fZ_,\>FD9'f\!-g
%%0`!&Q+!E_(YAi4k>Tf].?Qf]-0YGf,".eV"fSi]:2L>;f1c$8Rf_,-W1,PrIEtC!;pYUjYm$V-N`@L/N%u]#ZD^aoVFglH@Un4n
%WIS5^QS,9P:bV@=VFlDkV:W*'l;#iAWD\5OodXO:b6**H`I>tk=;U/[.@(([c;`]<Zgdo0X.d6phUEr=8UnA%.'<T7jE<BfBTs&Z
%'Arho`HhTpqNIur.]'S$=g.0Z]!#2"Cl?Jg25uQ*#;"N.>Wu?k6a\=i[\d1l<ja?K''B%=<oIab'F2YeX^0!nRVP$^H6.,3;GF,S
%YS0IN9<'AVAi`S`&*Q3Q@8BOpa.d^9"^Id85T"2OTlZ'b6q+F[8JJoL4m\?qK=Uoja[I;J2PVb]:2P)a\rdpiT9ueB7]k9k,BpJc
%,8YCLl1;fUqr=4/pSIVRnK/pNW_f@+@TU9LKb=TYmW?ZY[/?JTi(N4rqr%g;Xq@HF*2tBL9sA4`3"F[m,%3hFkr[N"r^\(C[m`[&
%,iK^+TdWWCTrc9KFqj'O.8GD.+`o&[q?)^*BJV6V[d<-2+!#icrCcl.I=3HmGdJa'@@K$tQA!6q#j17pa(q/!;5mEBAU2!RfK1\I
%bER;$8Vm*:e87`PSan?=ro;T<$EA0V,OV9ulQ[gg-19^G%\ho\L>qm7s8Faa^#1o&A7h<^lZ`LU"L$iCn2`?#rF>IXhIh'H,DqF#
%"%M4;hnccBgkW=ertp/FJU<a;L=brRe7,qJ=29HQoCn<nlZbXCKoB*FS?<"GTW3(K#%!'3^OM36!tOO_^iYLXrp/p=EnPpDSib2G
%rtrG4kJJ+RE>0WQ2m*CUi,QOU(DgY')13Ie?>):XRWuYN>ljt<Zr:TA1;5MCga9eT9@e;!4GHlTT,nG2k':e+3QV/\bX#"N?E7IF
%\d_.nBT?,.!W.b,bX5;).Vm`Tk021D`)4kLg6=fb)N;Z74A2J?N"<+`I1K$`dBAB"qg<o.7>Aa5!!5V+?o,^T``?DZKffr<QtTpH
%/1Lbl[Yd&(I/MQ0qk*]`L$15c2?W^Pc+moClQ1Yup7B&!/LY'.I'5<HKef=kAITUGVM:*gA@+A1$#u>%M2@CM7^;XX8_3]s%FMGn
%n)Q^QNKD2&]g3(^M/cb_V_MmRm<Kt`(\l'LPT=9W$5#O#s*T?5"]W$b`[AdR5U/_<Qo&?Y\dd%-'^6f!:j8"6kihq]6$Wj:1@tGP
%d:"`/dm+j+2[^8L?qbnQU&h$i=_sAppV-kP14;Ldgs7@*g5N2IXDq_\G\!JMq+XDhOH<qG\qPfJlfXJ7lQ[@EUNt`5i#"JtY)+"d
%#i,f->O1HXSW0K)Y)LFeXIiR"GCedG=<C\D*8Y24QXstac<5[Wd?&S*0U[V#%FbPrBMuTo>8Z>2hELtS%Y7hTZ%LlJl>U<#MB0ad
%If($nge72n\-\lBX6aI:/IHHW]-P(k=\\*c)%?m+;*BFrW:faRbk[5-d@n5A6pE[@&o6<A71TTE?/N-/3;%:M@WFW]In8h:a:(15
%+d2:G:7%*_]XGEtiWgeG+csR&YAu)o/#05eoWr40J5QKA*XkL![<5,Z6X9B=2T,pi6S)oigh]6H44>pi>CiupZ3h7Ok!SjiI=Seh
%]`"ugefU56d*r/s>i3m6h*n1BGK%70(rD&`>V$L!>BPeCNRTOnSL;89d%$NHaV:C7V&G:"+oDTiJ^"AcLo&NA[a)KeW@EemTR'j.
%8i_u<S(n)T>pVG*5d'bQ6Ntm7ZAV`&Z+pZ\aJ"2'D*Ni<S;:A"C-<Ug%`[GDH?'l<aqeCo@BP77U5&riG2a1<!db[B+WsGG?\H=&
%apYAm:c,\bYqKM0E+5cRP8U9R$Ah2dqdfo!1.FXlEEHj2aU^8e$RgWQ1!%+gZt+Rlj?.Yk>/CMtOmafV4=f*\[a;[(5esoJDHl7;
%rh&lGMTE%beTR9;E:,3/d*d5$GEk\CUi>!eYb+>RauS$*-nP=;!c(_/n1Sc[+`,@C]4rPe[bAOF)!3^MQ'6<tD-s!t7gYN1Kb..X
%Fg+Q)gK3RHM!n-'6l,UFU!]hg0-eru05rK[$@a6EBs*d(a)]j#CUMNFGUS*sk7fpX9>S#>qPLZ&lZ6jDllfJo$dr;BY]$jpJ&M2U
%(jMCpBNE;UYb)T2lL7]Y%AXRLl'IQ7TdZOS;<s)bdOVT7\i(RBBX7=]-IaI*,6E7-X]j:JQXE?p.&B7+[?IPYJ/4Gq+j./aM$/H;
%7J!Z[;:!TJ$%$dRShh(SQ$qB[)S%!=48UoM%9(e$Q8\(gTapBPXSE<?>/;GY_?1]?/ZopR<=2_-:`mBp^Bc\iQGsDlW\_-g7X,hD
%#@=2j1ub\a-LMdck78Thd*-DXL=u+SAuSWu5r@n4C.[E!MJMT]*H^djr`gHtKU?emXq&Y$emiiaYF*N,&M.&+,*hJ-?A/rRl`R#F
%q`:07DNih,NK"&O./5pf2\.F0nj,X3GZURjFkf6nV5'-X_p'`1?:&F?AsihPBcMW]Vp6)7q;HrlMThk*,([Sdq?AEta7o.Zi]tH'
%3++$05nRPdIMJ%3?s_s(22L[7UV>(Bla+%-%i2X=fFq#g2*<?d&RWB#_MYp8(E",8Mr`8=Ku6WogO`8cV<TqP:afR/a;ZLa,!79]
%_N0AI7<mNo!>IG%m92_%qBEJ(&IiN-15*Jn&g%OUC:Y96QC(2-W@gSaJ'pAM!e(p4Y"6dHK&e3j\rSCWFL#B&E@fL,&nSmAgGC8u
%E^bRC;GJM['QO`Trtf,Ii(t2h`;4kU8l^<bLRn,L<pop#rf8.;=1k*&5.dq5ddlPTd\^"KI9ToCcc%d6UccgV4]nH15M?`5J`@JU
%4Bq\%Pl=W0]TsQmPdG5"DpW\PO"6YAOOkh1='@2n8KUN/A>($*`[c5sD`]%/.8+BAMi5&1[RS5he/"d8mAWZ*YCO9BUhk^tMm:nl
%S_o[1l-tdW5^AQF)JYN(OO!N)h;":(kXh"#otGmb7Y4_CSl@->e#^q@qh$deo,dEMP.&UBK/bQpFLr4h+8TG8U@Pg!a)15Zb+SB.
%49ug-@\M3]VoA^>`M..nGCq^u"gOHRLrp%HWR,koNW!29LqBB#\sKQi0?bP/;!TKf&+2l``UnbD3M,FX[iqB6_/ViN85b>u3uAU,
%F)m?XmX1<p!GBIA(XJ<^l,8PG(kY#$/811F/02idU'fg/g?]k<&5]LH#F<'QW4[dZpe\C)2O50!DgCeUl>))a"\?gN2WT\SD:Q;1
%N8BholTe`e6ifWI`uWKEaC.@4&en&m(_AM,Pqe3n<E*\AGk[.&Fb)k<W9A.mR86BrGYG6aO!HQ(!s'[#VH%W$H.4L7\\fRM,nsf;
%/Z7'm9,lG6-66DX)d;U8<f0'TMHDfg-4-nDOZrR4!;Rfb%1k;L\jBFr,N6qphtf8&^<pnMYOfjA>30U86G86sKP6Vf6^/goM%@U<
%608d<e,2It77=g9nZ)-#,RaUl4OC4.M@bT?7D^Ptf#oGjS]'W9O(q>5nmPr7_es:nC5L7H!<g$^CNZL4r_[D1!Nf7B!nI+$7O-f5
%[Sn@a"MQK8D8qp"DQ.U[`b`'FHNh)kFKSM:!sVk&"6mbL=V64L\1c3SUfc2g6P56mF+a2`6S6p[(XBFQ]OaBscK/b/%&a;+f9@Rp
%,R5&)6cT<Z`9F!Fc%B*F?3i\W=q_"nBeTOsU]kNIGSCMRAdM:(O%1q;UX"u91P<6GU1+CE(e&r;iF"ppP.mlii<5N.&g3[l@E;WN
%4G<?BXY?6KF=FGjj9oJYUXQA;A+?lX;FUgbFOJN7J;.*7`eCZng-/ZM8f<f)Pefg0'j+0d(dum/c]%Y@N78*9/1#E&eq4SGV$?g*
%iF>V])I^#p*$qAEUMt;H.&u(hX<Xk+cOJ_3A?U)jo0!p+.d2:2AMoi^U$^&"[hL9%;hO<gfN(d8JWV/lX2kScBKm(K"bUcOL-3qJ
%mtRLL*f=o0Q'$gZ@-KO'"K>EL4ctPh&4Nee,ls^hW-_hZ);@hQ1k9.HqG`IgWIi(a4-@EW$n*Q-;Sp#?(QBH\N14o3\QYMQWLE^=
%./KqsCFDZq='5O47st^nd&u[GRlJbT+5I>/juLMZ_BdN7S)qDBl&?]2;!*PE:X1^P0m]4qUr5CLh-l4791ch3C6_D)-o3343N1#N
%K^aRaG_s2T`BAs0^kcUSHE6'*KX4:_IcCn[gTT#=U:5H&pREg'SA$I3WH#oe-5DgX8i85*6qmnaGp"fHi(f&=>/VeA+<WH=NU4M`
%M&dZ6.V`2JoQ=jW43f7C*=S'_%4Yg"&@4`4\g1.I-uLuXM'?e6dgZPO&8&jI9,?KCRQ\0[P,65WUj.IXGBji]S4K#LGW%,W=Pt8g
%-\1L\p3t;d8uVTR'+4;jon#0_U_"6/,%>3`=BP)QgJ-%P'LD5)20dO&>$2(O'%]*I;.>:#EMI2)fUkoJXKouV%$K4NGOU'Gp_$N[
%SB7[a!hb7Sr3HZ)S^&!%8jcaQ0>dX0h.?CaISI9Z:=L*\6UYJ2-<+&B\.46=Th%R2/cJ2oZ&fW=/%tM/;7CP>"fP@3d,0,U(Vs,#
%,dS@Wc+1rHKs'D\H40fC=TKkQ;K.;:k&lkR+aA>nagXcOE^&2>(HE"+jj8#1$RmG=;3tt?%F'^ld2NDqG#n9)cW#t"dpfpLYD9BD
%Mspm'T]^rc:r]b1*O&uX2PYjWIL$7u.2ZKu_:]P4$4J)4*C/LT8X\<u<2:M3+1.XVPQRQCW-M:+H$4=YO*:^Y_o'?)rFO6ATbHDH
%7Mo'29,InalK_8W8^9/q@b0d;kVc/;e[*C/HI[-()i&s:,hbtj*2%3k,@_V$%7H=;YTm7&Co]C[5hCerFbB<a7+Y.)T0k7IPV-54
%"YF\'D?r8*:gehqorI]-p*u:O)H+dSPG!W>[p_:rS@f:OG#.:.mPCB?qqu@gJZ<93NR.ce1HQMom0cXkUo%?SG)29bRUt6Fm!JL[
%^F`?m*ZL9T$`1j[dg"<2"6?8THDf"i,kHiD1qg:XZ697Z:9=^'m_'YQ/utH.[tYBm+XI,M2Q%o'WM.V9)f/h^kE)GbM7"L-^$GlP
%FIM75"%l9$=f9IL6VPP>kEm(,:?+\OK9]L^/R%'S*qC,C4W;RU'uj6)I@5%6[,pq?_VUbm'rpQ@@hfmrJSeX?CKI9*8LiEbMB6-]
%VN);jTll.+"+jE\Td]c.jW"%SLn?D-#ir>jF:AaeD(bgV"9`XJNq_5@+7YU<hpf`,M)p:Z="n\cD6b0;ZGk@a!+o'8,b7H?F_GMa
%\ej>f6]`7[)XP2\0rm3gWk$[FhP#`P?DgM=@809lLX?1Fp+%Z$RfZfp&g:ZnJ:^E-8tq"DM'sS/Mil\lmY?TPVj<f%>olG_F^pVt
%dUH_+c44!5YE;K)33&G`R3<j@jpjLb.(*lJI>p;ISZK"j@c9/sQPaS+p`_5S^==,XBPnK@/Qe/?G2VCC'crY5k8ic"k^cO\l[lYY
%kCRD\+5VU_ab#AqKre%80R%0,Uu#+2B!8CUBG3PD\.B(C+TYCo6k'V[O!`>mEYh4c)/>Ng#FknEMP4eYA*"*Wmg_f(YJ"q3W[n7@
%6htA=pgt<pC2lBZWian"+Q`C6%*-mi*jr4lNX"CkhCWOgb9ej4hOl-LDD%<0jK^&0o<r%QQD,WMl[lZM*>3/nCQiTM=@JL:QnH1E
%>+NjUc1?qGQ'AW.V49e`RZCQ;ZsC#j%_]!2'*Aio`lrb_,Gc#6%to$-i+-A&n,`k^]:k&G;P:BDf?;L_>!CTeQ=p]Q_f<V%W[%sa
%l0?Fo@_Ftire@N5G"1siaQ>?q?($F"K4h)i1A`4%PB&69]b43r!gT?NU=Xjdh#+]3lV&bK!@sShGOWjB.pmi"3@f`9Ki2bhV3i=O
%Rm*ah^;,PEhZ=-(B,8<3LSikR_%QH2Q)mU:#g'OB:e#6eM?K<=Z!c*t)L1u3hW>Xe,tG"4bUT?=J6dbM2e"t/^#?rah5?20)9[[E
%#&1#jIrEc'"OZCbQ)Pa[*ZdSH1q4bR^mq)5p9$H+6HStGq.Z8kC58MiaB(Gh&I/Q5/Q.h5Za,q%2kV`A#^HH,)X.9f-r;X)):V.>
%Xa`>*%a;7tUimF'$3#O%&Cc`[Mc(QhJq@"O6fFTSdQe^'<_$rPQpSCX]>LWk'(\lCVm/)b4OUWkX`\BAKgOf]B*&Z)q4"%rgQ`Y]
%'kpa7]&QmS<$*IJb^rd#Tbr8`Xf,?S$,a*.@CF?:F/<:'Yls\?eab<U"SFM$$q\tl5G;O:PpW\,&e*!-/_sGN:_@h)S'9XkaCZu=
%:%fJj.341dJsOaFnHtN7M-O`iHGgjh61(_SC<g?tGUU9G+@;h*%s@,7CC4nda-r)?82V["2[WkM?JkjWXTt9`kdnaQD)A'(-4djX
%XnjMaJB$.Yd8IcRpRohPDdD(7L5)r60Ns:EAco=-A(/6*5s%YWW5P2cK%sl>Mua9#PcD)e""_Nrf]LDp;sEC=Rcu=$TI1=hZkV$j
%k.S,Og-D$],1jPOUNq[mJ.U<_`mglNYCY6.caJZ*Aj[2q:RV4aObPu9eb't:9o0C4pblt<3[AP27ePP+N=+=r8@Q\YfnN1N>+#e[
%GP%frTnR,K6QcJ/HA\YUkA@F!-/X$7eR<G0*.:gXG-E-G%GiqDr.1H@=hIoj8l5s^bTGoBjG5t]UhAWbXrYA<eJkm2KJ:jQAI-^:
%rV3<XlKY^lbm3tlkj,BMI=I^4kui6)KhY<plRM;+\7=@A[f^2O)Q>$jUZ>;sH1X:Y`aHHL]e^BP:<Gle9(dGU`e,iK/)H$E=5P)/
%qs?tQ&S"^7n3IYrpS7o<:6CCMoDt`]S'$W;H]_9I$KbIEkgA.M*[ik1rUD##;H6<L,/*;`KG;V*EU&0r)bGGKSsR9<#)-A']l+UI
%YpLKe(`0&ZqjqeuG+)Q!Rj!dt:!iTpP5@NYkiMKG9.#NVKK9jl4=QB*BR84O_b?Mp0T3A7RUf9%p'8Ftq_\.<JTQQE)S4AX2X\%e
%)>U]cJf($/KHtVC.epH)"i`>C'-fEC=&&6_^%)dE!!n")^<.M_;;.p7:N-qdU#3j/iT9n-E($.^oU&K6l'Eda:)(]9cFZALjgF,B
%Q/f\2(]8Ao6!/B+Zqf<%,(;+;.*fOMWV=1]GNjumOE-,N7^MpKS-kc*LmHpArU0QX3M5QU+#^:WBr,!BQ6t+><ber"5WWD):c_K8
%2?JK1q^Up5BLhhuk``nD.5>%hBqSY(%n;kZ<g0OpPs?eI'%8[E0ZlcTqC[I;Kqq?;g_O?B)0/g'a"i&&F"N:)U>CV"d1YiE5lu2i
%UCmi1(ZN@9Qhh\)94`-.0@!:LQ'n`!9*#`#+7_93ZT#^,g:_L@<csmO?N]Q'-p:e0+VEO.SGn`oPufsPMK1_QAdL,&BbOhG2Id/U
%3$<^kOa5s2bYUhT'(e*<@U5Eh'4ofgKGVoTbYIMAk1p"OMJ\0BI]Y(3GI0[b27Y]Xe=q--\e\N%^>@L5i?E-e#fXr2+c,fKpb"_p
%(J%0P-&K.?Al;b[Z;I(f4m:)D7*7[Z%uR9T8/Cf`P)k^D$XH="]_`heqk/W78.#,:i]'7`V*'nt*eIVOX'd"\;i^!^n<Ac#hQKID
%WMt'I5R4VE&:G:?)'(q085JOBLFUI`1`Bipg0R2'WCV&]?C"#Y!s;4s[/u+f6pR+d&DIAN9Frm=7XNf5c7Hh=fFgms#bP$b2JtO_
%L1JmK="&65(:ma]d>HR"i$rh4RE\W6'#U$S-ndW0m;U8"].LhI/Etb``Q@I62[anM19@/()IX=OR!nAaE9]`DKn,dl1cWDG_52st
%@#2b5P.IUu(a&sSXd/l:TkYAFoe_=&=UDd@rgXPs/qG'Rml&1qlgHkaW*p@jU)KZUr\fS+A*lp>#uMi_<L;=4Jaf$XMl.o(\/]pa
%k:2dp@4;B&nXDu1FhO3$94DWgP!+?=Ra)SXJVk(!"_m?PW'88SINm&GR[u6XpN:a2p\!g-5k'FP=$d!T\JAJ$*pc/@il_E.3t`VK
%I2W<i5l7P0KAsl.+nVAeNejZFm9QX1(N(L3<*JGp((K/\2J2\NI_#iM2!57f4i(,i6$HfAVg'nrh1112Q_IL6QMkGdeGr!5Q7n^.
%L`tUhiH>S?@Usk,AMX?ASDVS!)VBSmoK%`E#)#BpaEGbU#fPMK,X`=sd#KY5d#P+H85]O8Le/%A#jQ,1`j%'\(iWn.j(SkSVm!P%
%#BY8mi!!C,-25k,[%h@GU=7N!bojBSC0?5BGd*QhXbL?FC)#BqAJNor2%/e);o?sR*jZ:BUJopo4pNqT4dbT"^"*`&21Tc(b+&XQ
%.CO#[4\pFZ04q#?G]r#52tI@/eU4+(Rg!Q]h7PtZ/n^p'.*CkD><hbmh9S2?g"FWN(GsM^r'G=85Z0"R?I=G3^Y[?DSp0F>8&H48
%bAg%I?)I)2*F5=SV!B$ap6,7Vm>`f\S&959hj3;:G;Nr8P0bq!9a[O>"m*[b5+'9893H7$=p?+1BKWh<]fPAm1Y@@XGX`9C-:XAc
%4*9F*]bhR-\McN06hjB1%\a,[76?E&_`P(*6,V0G[&m;9\Osoh*i1MKjl^IMInhhg@U<oo*eeKFHoAF+pIAmpA;c)>)W@(qD?Qb'
%Vc9?7p.i:KhP:lm>eQOLEhLrZRjGIo]*O:2UA%K>jUc.aR>F*RSfg2[Ac-Pj7<1RIiYc=087%g!Qh55rE,sD@>>fZkF(lP&Z5P8=
%EWq)!NGZKOcfKR!cZ2%p-6dlK99QUCC37s1P6/SKnW`_WH=m9C5mE.BBFO4BPGi3P;):?AJ8+Si;5FMJ`l[ZX)6FNZ#I$f+U\#_G
%bMefi^`F@1=`BO9hjL[G#,oNA]5]F1T]W>3TgC.!B$EZOB`8S9mc\@8=fN10,bWdZ$f]dX9//_H\Oq3On7E`P;!;nqQZ829M>RO8
%d,P[Hfq]O;7.`$D:N@@@a\>>*b^dOF$='i.Eq0FOJqS2$&X7%'>VVAX""F!,!hfb4H@eKFXEZFQO+[f0aRTO8mlfg7UA-kY>9r:u
%+bqHj=:oIDW/A`"!lg$6U/("-?!AEr9VKecRp(st]`!3*p21=sebX;l_d:-Igr,-S'/1mf5\[e/8ke3"GDEQJ<,EnC_(dm^l>49d
%Npqee#4Ah5=p"ViVh$re=E%RX>;(il8C_AdDi`=i;,b16f.0CWBbG1nTj9r,LGP@Dq$8@+3Y6;a7IB]nOZ3>HehJE\iBbHM.ki-[
%:ErT!o/U.1ene,gQIsD?SKAlJL/?^8_-t(]M#n-F"u#nVQUnK#VPpCs-.+=f[Od9"*/29Zbp[%CX,^ni`D;sCCg2M!ET]+5:PR[5
%Te][RVeZS8Oh%dF[o1$%Eb7?c@X?[aK<BtIRJFlaD2<[3hIEjioRaS#8k$rUMGiU`b%Us;g%VOT$O%+E#.mWV8>pO$[1s(.OL@ci
%`;8OCOPb]'>cU(S;aIbpY?XZW$4+'';\ID[]/5B@%H3^@IpCNiSAq.d0XnD1nUPI&a.knE%"IX`%/Xd1<b1*)0Q#U9@-QecVAj:c
%9gb=.=H'*Q?).&Di&?CK$.:BaNR?1,Bgh/g%7;CC?t0ctk1:m?*hJM;fKF@r<Ak:61PHUoah-2R)G`=e$:EMUXj&.aLdk=.)r.eF
%po*Fh7"HKD23#W4<,"4N?qZ2s!bD2%]ES.)ZSkSA:5PE8Pb__I9BgOim7@^'nu/csBr]WA9'ir<EJie]RY?)T^`$)`=Cn3afd!80
%-k81&b'IHd*4H[l2i(o=Z@d6el4Fa6NQWL'0;L9jUtVMBOI&-ij=KT7$p>@0%sj"6c5nmCQ>N.QQ#A*-67P6j,T[hACjbo;Q(._)
%5u;*[3#INu-'Qru3fND[+G4C%<*^%Jkh0t"^GF=gO9Au&N63;;a0WNVPkps,\&hr%WFT\u&:V]Q,cT>1:EJW=PsVIp1Ogs3F?BB%
%UM:0?D(K]^p5,="[N<GU^PD_CG2M5%=q)]FYrRb!ihX^->.5$2Z\kZFo0FYefQKAQ1tY=NoctL`*R)J-L0j%;M?u5_d'SBo35lJ,
%M"P64>D*q64-/5q/cAQZ[j>t9dOm_^%)K[Eabnpt0l_$hg4D)dY0IMfZ?CPI^jWFpW,9bQI%H>I*<htqBJZE-6dknb^P)DDE'>Ca
%)I;Tcngp;3gdfcmLNZJPZ5'JjZ@[o+67Fqj)8&T%9NQ=kV+/9$!L9RG*0Y<ZG+;nHm%U:)4="euWBts'!,T_7ITDiB_ul':X>),>
%CbbX/`7nl*i[>/VjmYA(2<NWq6:cai0SZHiL'"rXU*?TQQ;Up#`X/i[/5:li?bKIb5]MFmk:1M<K??qA8EI495,q>n#aMa5o9Zfa
%KZ>*YhgDUL(GQ+q#`5\fgP!_P]G,dF"]a&$J=3em\ZM8nO_:s$_TYm:e"`4RF:)TXei9\?iN#\Oi$!1<6'tJ[\StjtO5L58,D@&3
%aXt"b4=LQb#u\-Y7T?D:4]J,1iO_ec%-]?@ml%2"9B.+1[a#J3C!]*Q0-\qLWLn26S0^nQ6tEe6]KXt]ONfW:"kiCemccA"7W@3F
%:!Gpt.rjXeo7r]-6;kK(?;qmO5XX#NNL5;QDO,)'[MqjP[Q.:eh2A6jiV?c;21``VA?=9ZH/XKgndI:M-.ik7Q\7":K2UbH<34Bf
%9Q@=<h70$M"!edGU;2"]I=/8'?GA]\IB_L6I^nLZ*Mk<bn=*`P<*=^^:'[#AHo"@m\6&K;NR?B$n*&QWBgguPKtn"W89,-YqDYU9
%%0_ok!O2ePr)QeYAa:K7_EC!rYMW"Dqr?$baK?\a7P%r%^1ua%ON]t`eeAFpq3#Qq8>3L]@Os7@M<o=0SKSRKdQ+^2f_1Cnri/?R
%o0I=Sg0C*&#+\VJ^Q!+H"8ibM$q\9$$he[qH[_Z-:aBc4^qhlYF0dd+Wo$TU,Rstff59eZ\S\J^jjK64-_(p*c^H+%TTTUK:f(bc
%7No_=8XV`l766cV7mJdE<=BiA-LRn6V489Sb0m*$Km`u75"`:4)p,.bW=VJ_d6YMr>tU+2jG'`HD5hCeGX/s'E08(6PBjc9^BjY2
%UR6U7$[![hN.r@NeI<ON+7Zri^KZsM)iN8N]@;`u1XX.6BdLB_-14kkT&s48:"b5emq\$tcPNdC!Pc&Ra'u7U@G*h1"k'ks,d0Oc
%dUZ"Q3g7'2]QCKdamg",as]`1#LrXBb_;0Ud`80,L67;e,[$042Mq`C3mj]>fI%<!`VW(CLT+OAQJ8sR]@;DClt[u6<A#4PB`Z=I
%94X*>3&Li#`/U<Fid)*r<IUE;nC&OFR+g.&m+6681hd&EFn:c5#UN;.A/b62%&HT$RXp_CMM:B'53R_h#_gg)8Hk6"+YT<%RuWK/
%VG_*0,,nG971&.=F>FU:afc]'OQ)E1U'OF\aY>g:&7mW8r1q31!.(>n.ch0Er2`S!bq9&!d2);8!Ha#lPb(ViKaW'2eD,Yt_miW$
%i^'U`(b:dG2FqK+Te'#So_Cn?Q5!uR%ZK6T(@)iM]g'=CQqIQ&GoZWsN>.MD-;re>a!78#JEYUtX:>"U?M,/\#IjBV(OgQ\YbDZ,
%s4rI0s1Oe`/%/A+Y6\Znp:)eYa<eYrJa]E"MtCM0c`IV<&)eWTm_P/hR't'Iot3S4;UCt6pBM?^>j0p/U[ai(`7t-e)?`^VgX,@%
%pj0IM^R+SPa@6M6!?OkD2hCZ8Q.L^\)%:)6`K&8.d")79O(>j/0p$BHhpNf1ZV#HiO%iMJQURp3,k&djNF!09YN=F#p?h"M6=;qh
%ri-eB$M2stCGM%!OKbLU_86g5J^^%WH\3E6F='dOAlq<RMXR,.(CZJ)%M^'([bNo<N3P'IQDR_qKQ3\..';b<-ADQV:f^2u+R5^E
%0[*aP?!&q680L!Xm;!=h"&Q#,"_7^pSQ?A4B#_mrf/#UWJnbTP$S*g1n?&E:L0%ag&A].PrF7a>S@PYe$p?sO(f;KhiQF[ZIt@QX
%1Ib>2+6U$#6BaQo['B[X,;cUcQNt:/0/UT_/al>=2b<;30fgg[8Mi74rJ;m/D4jaS"SkrLV/:5*U8OmPah_nWL(H<f`I'@<U=\GH
%9O[:]k35s-i3B/41oX"qQM43+pLab,`<Rj42kZ>(esUDVHCut<;"a&B-E%B\(M6gJaI7F/4l;_[<2o/Z.#;]4@*HSVLgEBdn#Fs9
%8hCrV'3g-GneA+u%:uEX$:Z!f*5(Kn5+(Ehh+m2.PKiNRL&:#@V?Oh]R-Qs8ipNJ4IVoZN?[4>VcJKos2Wq[l[negj<af+%ALo6Z
%ZQusDcP77WoIHOP2(aX;N-qIYA[;q@8spm.KS>;+&MR^[$L6J<<>@S*,`jKj/:r,Bp'!]qC4d5JnZ@B`_McW?r/soS67tlQ5_N3R
%WRr\c:*epDBc5mjH[)p0?R9LW49bJCo'enm=O=R_kq@NpD#0D9FicmY!,^aG)0P%gg$*D$a]7JUBE9M!;$h&kNjTgk^9;tH\)+%r
%PE""lXO@6+Mk>#Jm47DWTV>2G802=s<HqAMTL.Rh9e)>]L^D@.HIofT+Ije/e"&shWS-PR35S]c/=$ga'-JsV4i\Q7[g3t>HO,X0
%G\RV$^mRotdt3K)+4[>b1B_:0\;PrA\gkSB8=5Lgb`u:sk-sk=[`"pO(1Y.VbTqFo]@2ZS/0KfS8%_CR8=/iB,lO&@b$-DD,4_\]
%p=AJB/EZB'W;M;!:<Wpr@RT/N6b)ge'HTRT&Gn2fa<*5"@?&l"lu6(4_?N,sA*.a:0ME:"%?Z.TjD:e0S2H%qR>g'4HUP=tf2QMp
%V+F)l[Cqr_!NM6NeQ2i3/5tuMW66U!$7EnreuNimpEBcF*-6AWMYIgjLT5JAp?VIV*W>\-"8Kq:RfE%fIdt21Ie);jJ+_&F"8L8n
%s2iT9qS.LPPFm@(l*(*[DgqCu5Pb0)Q_438([*OMe,MN/l/cQmqWYcnqNntnl-$j?T3qR^+Sa@^_2j';0E:FSr9`D>IoP?AQN~>
%AI9_PrivateDataEnd
